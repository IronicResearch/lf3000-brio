#ifndef _SPMIDI_HYBRID_PRESETS_H
#define _SPMIDI_HYBRID_PRESETS_H
/*
 * Preset definitions for Hybrid SP-MIDI Synthesizer
 * (C) 2002-7 Mobileer, PROPRIETARY and CONFIDENTIAL
 * DO NOT EDIT THIS FILE! It is automatically generated by the HybridEditor.
 */

#define SPMIDI_EDITOR_VERSION (225)

/* If non-relocatable, then we can make structures const and init with pointers. */
#if SPMIDI_RELOCATABLE
    #define NRLCONST  /* */
#else
    #define NRLCONST  const
#endif
/* Include wavetables if needed. */


#include "waves/OrchHitz_Boss_4AS_1.h"
static WaveSetRegion_t gOrchHitz_Boss_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gOrchHitz_Boss_Set = {{{0}}};
#define SPMIDI_WAVESET_OrchHitz_Boss   (1)

#include "waves/DGuitar_Staccato_B1_1.h"
#include "waves/DGuitar_Staccato_B2_1.h"
#include "waves/DGuitar_Staccato_B3_1.h"
#include "waves/DGuitar_Staccato_B4_1.h"
#include "waves/DGuitar_Staccato_B5_1.h"
#include "waves/DGuitar_Staccato_F2_1.h"
#include "waves/DGuitar_Staccato_F3_1.h"
#include "waves/DGuitar_Staccato_F4_1.h"
#include "waves/DGuitar_Staccato_F5_1.h"
static WaveSetRegion_t gDistGuitar_Staccato_Regions[9] = {
  {	SPMUtil_MIDIPitchToOctave(0x230000), 0, 40, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x290000), 41, 46, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2f0000), 47, 52, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x350000), 53, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3b0000), 59, 64, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x410000), 65, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x470000), 71, 76, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4d0000), 77, 82, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x530000), 83, 88, 0, 127 },
};
static WaveSet_t gDistGuitar_Staccato_Set = {{{0}}};
#define SPMIDI_WAVESET_DistGuitar_Staccato   (2)

#include "waves/Viola_Bowed_048_1.h"
#include "waves/Viola_Bowed_060_1.h"
#include "waves/Viola_Bowed_075_1.h"
static WaveSetRegion_t gViolaBow_Mob_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x300003), 0, 54, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 55, 68, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4b0000), 69, 127, 0, 127 },
};
static WaveSet_t gViolaBow_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_ViolaBow_Mob   (3)

#include "waves/061_BrssSect_1GS_1.h"
#include "waves/061_BrssSect_3C_1.h"
#include "waves/061_BrssSect_4C_1.h"
#include "waves/061_BrssSect_4GS_1.h"
static WaveSetRegion_t gBrassSect_EXS_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x2c0000), 0, 54, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3a0000), 55, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4803c0), 71, 75, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5008bb), 76, 127, 0, 127 },
};
static WaveSet_t gBrassSect_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_BrassSect_EXS   (4)

#include "waves/Shamisen_C3_1.h"
#include "waves/Shamisen_C4_1.h"
#include "waves/Shamisen_C5_1.h"
#include "waves/Shamisen_C6_1.h"
static WaveSetRegion_t gShamisen_Banjo_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300ff3), 0, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c1488), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x48115e), 66, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540312), 78, 127, 0, 127 },
};
static WaveSet_t gShamisen_Banjo_Set = {{{0}}};
#define SPMIDI_WAVESET_Shamisen_Banjo   (5)

#include "waves/048_Strings2_2C_1.h"
#include "waves/048_Strings2_3C_1.h"
#include "waves/048_Strings2_4E_1.h"
static WaveSetRegion_t gStringEns2_EXS_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 54, 67, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c0000), 68, 127, 0, 127 },
};
static WaveSet_t gStringEns2_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_StringEns2_EXS   (6)

#include "waves/AcoustBass_BossOD_1E_1.h"
#include "waves/AcoustBass_BossOD_2E_1.h"
#include "waves/AcoustBass_BossOD_3E_1.h"
static WaveSetRegion_t gAcoustBass_BossOD_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x1c0000), 16, 33, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x280000), 34, 45, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x340000), 46, 127, 0, 127 },
};
static WaveSet_t gAcoustBass_BossOD_Set = {{{0}}};
#define SPMIDI_WAVESET_AcoustBass_BossOD   (7)

#include "waves/048_StringEns_2C_1.h"
#include "waves/048_StringEns_3C_1.h"
#include "waves/048_StringEns_4C_1.h"
#include "waves/048_Strings2_4GS_1.h"
static WaveSetRegion_t gStringEns1_EXS_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 66, 75, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4ffe38), 76, 127, 0, 127 },
};
static WaveSet_t gStringEns1_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_StringEns1_EXS   (8)

#include "waves/HiAgogo_1.h"
static WaveSetRegion_t gHiAgogo_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiAgogo_Set = {{{0}}};
#define SPMIDI_WAVESET_HiAgogo   (9)

#include "waves/DGuitar_Scrape_B2_1.h"
#include "waves/DGuitar_Scrape_B3_1.h"
#include "waves/DGuitar_Scrape_F2_1.h"
#include "waves/DGuitar_Scrape_F3_1.h"
#include "waves/DGuitar_Scrape_F4_1.h"
static WaveSetRegion_t gDistGuitar_PickScrape_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x290000), 0, 46, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2f0000), 47, 52, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x350000), 53, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3b0000), 59, 64, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x410000), 65, 127, 0, 127 },
};
static WaveSet_t gDistGuitar_PickScrape_Set = {{{0}}};
#define SPMIDI_WAVESET_DistGuitar_PickScrape   (10)

#include "waves/ElSnare_DFH_PiccSn_1.h"
static WaveSetRegion_t gElecSnare_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gElecSnare_Set = {{{0}}};
#define SPMIDI_WAVESET_ElecSnare   (11)

#include "waves/KittySynth2_C2_1.h"
#include "waves/KittySynth2_C3_1.h"
#include "waves/KittySynth_G2_1.h"
#include "waves/Purr_1.h"
static WaveSetRegion_t gkitty_5_11_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x280000), 36, 47, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3bfdc3), 48, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x47fdc9), 60, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4f189b), 73, 127, 0, 127 },
};
static WaveSet_t gkitty_5_11_Set = {{{0}}};
#define SPMIDI_WAVESET_kitty_5_11   (12)

#include "waves/ChOrgan_C2_1.h"
#include "waves/ChOrgan_C3_1.h"
#include "waves/ChOrgan_C4_1.h"
#include "waves/ChOrgan_C5_1.h"
#include "waves/ChOrgan_C6_1.h"
#include "waves/ChOrgan_C7_1.h"
#include "waves/ChOrgan_C8_1.h"
static WaveSetRegion_t gChurchOrgan_EVB3_Regions[7] = {
  {	SPMUtil_MIDIPitchToOctave(0x23f7a1), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300a49), 42, 47, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x30101d), 48, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c163d), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x481798), 66, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5422f1), 78, 89, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x60245c), 90, 127, 0, 127 },
};
static WaveSet_t gChurchOrgan_EVB3_Set = {{{0}}};
#define SPMIDI_WAVESET_ChurchOrgan_EVB3   (13)

#include "waves/ClosedTriangle_1.h"
static WaveSetRegion_t gClosedTriangle_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gClosedTriangle_Set = {{{0}}};
#define SPMIDI_WAVESET_ClosedTriangle   (14)

#include "waves/HiFlrTom_DFH_Tom4_1.h"
static WaveSetRegion_t gHiFlrTom_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiFlrTom_Set = {{{0}}};
#define SPMIDI_WAVESET_HiFlrTom   (15)

#include "waves/SynthBop_C1_GamBy_1.h"
#include "waves/SynthBop_C2_GamBy_1.h"
#include "waves/SynthBop_C3_GamBy_1.h"
#include "waves/SynthBop_C4_GamBy_1.h"
#include "waves/SynthBop_C5_GamBy_1.h"
#include "waves/SynthBop_C6_GamBy_1.h"
static WaveSetRegion_t gBump_GameboySynth_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 12, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3bdc3c), 13, 24, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x47ec3a), 25, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x53fd40), 78, 89, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5fffb3), 90, 101, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x6c11a6), 102, 127, 0, 127 },
};
static WaveSet_t gBump_GameboySynth_Set = {{{0}}};
#define SPMIDI_WAVESET_Bump_GameboySynth   (16)

#include "waves/Piano_Grand_031_1.h"
#include "waves/Piano_Grand_043_1.h"
#include "waves/Piano_Grand_055_1.h"
#include "waves/Piano_Grand_067_1.h"
#include "waves/Piano_Grand_073_1.h"
#include "waves/Piano_Grand_085_1.h"
static WaveSetRegion_t g000_GrandPiano_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x1ef087), 7, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2b060b), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x380000), 54, 63, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 64, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x490000), 73, 79, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x54fb87), 80, 127, 0, 127 },
};
static WaveSet_t g000_GrandPiano_Set = {{{0}}};
#define SPMIDI_WAVESET_000_GrandPiano   (17)

#include "waves/LongGuiro_1.h"
static WaveSetRegion_t gLongGuiro_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLongGuiro_Set = {{{0}}};
#define SPMIDI_WAVESET_LongGuiro   (18)

#include "waves/057_Trombone_2E_1.h"
#include "waves/057_Trombone_3E_1.h"
#include "waves/057_Trombone_4C_1.h"
static WaveSetRegion_t gTrombone_EXS_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x340000), 0, 57, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x400000), 58, 67, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 68, 127, 0, 127 },
};
static WaveSet_t gTrombone_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_Trombone_EXS   (19)

#include "waves/012_Marimba_3E_1.h"
#include "waves/012_Marimba_4E_1.h"
#include "waves/012_Marimba_5C_1.h"
static WaveSetRegion_t gMarimba_EXS_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x400000), 0, 74, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c0000), 75, 82, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540000), 83, 96, 0, 127 },
};
static WaveSet_t gMarimba_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_Marimba_EXS   (20)

#include "waves/Tambourine_1.h"
static WaveSetRegion_t gTambourine_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gTambourine_Set = {{{0}}};
#define SPMIDI_WAVESET_Tambourine   (21)

#include "waves/wank1_1.h"
static WaveSetRegion_t gwank_LeapstrArcade_5_11_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x42d133), 0, 127, 0, 127 },
};
static WaveSet_t gwank_LeapstrArcade_5_11_Set = {{{0}}};
#define SPMIDI_WAVESET_wank_LeapstrArcade_5_11   (22)

#include "waves/104_Sitar_Fat_3C_1.h"
#include "waves/104_Sitar_Fat_4C_1.h"
#include "waves/104_Sitar_Fat_5C_1.h"
static WaveSetRegion_t gSitar_Fat_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x300f2e), 0, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c1301), 59, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480cda), 71, 127, 0, 127 },
};
static WaveSet_t gSitar_Fat_Set = {{{0}}};
#define SPMIDI_WAVESET_Sitar_Fat   (23)

#include "waves/tremelo1_1.h"
#include "waves/tremelo2_1.h"
static WaveSetRegion_t gtremelo_LeapsterArcade_5_11_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x42b7b7), 0, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4ef9c5), 73, 127, 0, 127 },
};
static WaveSet_t gtremelo_LeapsterArcade_5_11_Set = {{{0}}};
#define SPMIDI_WAVESET_tremelo_LeapsterArcade_5_11   (24)

#include "waves/ShortGuiro_1.h"
static WaveSetRegion_t gShortGuiro_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gShortGuiro_Set = {{{0}}};
#define SPMIDI_WAVESET_ShortGuiro   (25)

#include "waves/066_TenorSax_2FS_AIF_1.h"
#include "waves/066_TenorSax_3C_AIF_1.h"
#include "waves/066_TenorSax_4C_AIF_1.h"
#include "waves/066_TenorSax_4FS_AIF_1.h"
#include "waves/066_TenorSax_5C_AIF_1.h"
#include "waves/066_TenorSax_5FS_1.h"
static WaveSetRegion_t gSaxTenor_LP_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x2a0000), 0, 44, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300000), 45, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 54, 62, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x420000), 63, 68, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x470000), 69, 74, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4e0000), 75, 127, 0, 127 },
};
static WaveSet_t gSaxTenor_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_SaxTenor_LP   (26)

#include "waves/Accordion_Boss_3E_1.h"
#include "waves/Accordion_Boss_4E_1.h"
#include "waves/Accordion_Boss_5C_1.h"
static WaveSetRegion_t gAccordion_Boss_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x350000), 0, 57, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3f0000), 58, 67, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 68, 127, 0, 127 },
};
static WaveSet_t gAccordion_Boss_Set = {{{0}}};
#define SPMIDI_WAVESET_Accordion_Boss   (27)

#include "waves/HiWoodBlock_1.h"
static WaveSetRegion_t gHiWoodBlock_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiWoodBlock_Set = {{{0}}};
#define SPMIDI_WAVESET_HiWoodBlock   (28)

#include "waves/070_Bassoon_2E_1.h"
#include "waves/070_Bassoon_3G_1.h"
#include "waves/070_Bassoon_4F_1.h"
static WaveSetRegion_t gBassoon_LP_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x280000), 0, 47, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 48, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x410000), 60, 127, 0, 127 },
};
static WaveSet_t gBassoon_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_Bassoon_LP   (29)

#include "waves/LoCuica_1.h"
static WaveSetRegion_t gLoCuica_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoCuica_Set = {{{0}}};
#define SPMIDI_WAVESET_LoCuica   (30)

#include "waves/Vibraslap_1.h"
static WaveSetRegion_t gVibraslap_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gVibraslap_Set = {{{0}}};
#define SPMIDI_WAVESET_Vibraslap   (31)

#include "waves/Flu_Logic_C1_1.h"
#include "waves/Flu_Logic_C2wav_1.h"
#include "waves/Flu_Logic_C3_1.h"
#include "waves/Flu_Logic_C4_1.h"
#include "waves/Flu_Logic_C5_1.h"
static WaveSetRegion_t gflute_Sculpture_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x240159), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300f18), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c122f), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x47fd6e), 66, 71, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5406c8), 72, 127, 0, 127 },
};
static WaveSet_t gflute_Sculpture_Set = {{{0}}};
#define SPMIDI_WAVESET_flute_Sculpture   (32)

#include "waves/XY_C1_1.h"
#include "waves/XY_C2_1.h"
#include "waves/XY_C3_1.h"
#include "waves/XY_C4_1.h"
#include "waves/XY_C5_1.h"
#include "waves/XY_C6_1.h"
#include "waves/XY_C7_1.h"
static WaveSetRegion_t gxylo_Sculpture_Regions[7] = {
  {	SPMUtil_MIDIPitchToOctave(0x23f2ef), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2fff26), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c008c), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480136), 66, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x53fe5a), 78, 89, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x6001e7), 90, 101, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x6c0300), 102, 127, 0, 127 },
};
static WaveSet_t gxylo_Sculpture_Set = {{{0}}};
#define SPMIDI_WAVESET_xylo_Sculpture   (33)

#include "waves/Cabasa_1.h"
static WaveSetRegion_t gCabasa_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gCabasa_Set = {{{0}}};
#define SPMIDI_WAVESET_Cabasa   (34)

#include "waves/LoMidTom_DFH_Tom2_1.h"
static WaveSetRegion_t gLoMidTom_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoMidTom_Set = {{{0}}};
#define SPMIDI_WAVESET_LoMidTom   (35)

#include "waves/SaxAlto_049_1.h"
#include "waves/SaxAlto_055_1.h"
#include "waves/SaxAlto_061_1.h"
#include "waves/SaxAlto_067_1.h"
#include "waves/SaxAlto_073_1.h"
#include "waves/SaxAlto_079_1.h"
static WaveSetRegion_t gSaxAlto_Mob_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x30ff72), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 57, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3d0000), 58, 63, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 64, 69, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x490000), 70, 75, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4f7f11), 76, 86, 0, 127 },
};
static WaveSet_t gSaxAlto_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_SaxAlto_Mob   (36)

#include "waves/007_Clav_2C_1.h"
#include "waves/007_Clav_3C_1.h"
#include "waves/007_Clav_4C_1.h"
#include "waves/007_Clav_5C_1.h"
static WaveSetRegion_t gClavinet_EVD6_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3008db), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3b0000), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 66, 127, 0, 127 },
};
static WaveSet_t gClavinet_EVD6_Set = {{{0}}};
#define SPMIDI_WAVESET_Clavinet_EVD6   (37)

#include "waves/LoTom_DFH_Tom3_1.h"
static WaveSetRegion_t gLoTom_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoTom_Set = {{{0}}};
#define SPMIDI_WAVESET_LoTom   (38)

#include "waves/SynthBass2_C2_1.h"
#include "waves/SynthBass2_D3_1.h"
#include "waves/SynthBass2_G2_1.h"
static WaveSetRegion_t gSynthBass2_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 39, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2b0000), 40, 46, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x320000), 47, 127, 0, 127 },
};
static WaveSet_t gSynthBass2_Set = {{{0}}};
#define SPMIDI_WAVESET_SynthBass2   (39)

#include "waves/Cowbell_1.h"
static WaveSetRegion_t gCowbell_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gCowbell_Set = {{{0}}};
#define SPMIDI_WAVESET_Cowbell   (40)

#include "waves/Claves_1.h"
static WaveSetRegion_t gClaves_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gClaves_Set = {{{0}}};
#define SPMIDI_WAVESET_Claves   (41)

#include "waves/LowConga_1.h"
static WaveSetRegion_t gLoConga_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoConga_Set = {{{0}}};
#define SPMIDI_WAVESET_LoConga   (42)

#include "waves/HandClap_Emagic_1.h"
static WaveSetRegion_t gHandClap_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHandClap_Set = {{{0}}};
#define SPMIDI_WAVESET_HandClap   (43)

#include "waves/PanFlut_Sculp_C4_1.h"
static WaveSetRegion_t gPanFlute_Sculpture_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x48155b), 0, 127, 0, 127 },
};
static WaveSet_t gPanFlute_Sculpture_Set = {{{0}}};
#define SPMIDI_WAVESET_PanFlute_Sculpture   (44)

#include "waves/HiBongo_1.h"
static WaveSetRegion_t gHiBongo_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiBongo_Set = {{{0}}};
#define SPMIDI_WAVESET_HiBongo   (45)

#include "waves/Open_HiHat_DFH_EQ_1.h"
static WaveSetRegion_t gOpenHiHat_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gOpenHiHat_Set = {{{0}}};
#define SPMIDI_WAVESET_OpenHiHat   (46)

#include "waves/boomSq1_1.h"
#include "waves/boomSq2_1.h"
#include "waves/boomSq3_1.h"
static WaveSetRegion_t gsquee_LeapstrArcade_5_11_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x211184), 0, 38, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2d11d3), 39, 50, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3911e6), 51, 127, 0, 127 },
};
static WaveSet_t gsquee_LeapstrArcade_5_11_Set = {{{0}}};
#define SPMIDI_WAVESET_squee_LeapstrArcade_5_11   (47)

#include "waves/ReedOrgan_F3_1.h"
#include "waves/ReedOrgan_F4_1.h"
#include "waves/ReedOrgan_F5_1.h"
#include "waves/ReedOrgan_F6_1.h"
static WaveSetRegion_t gReedOrgan_EXSAccordian_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x352038), 0, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4125ac), 59, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4d3088), 71, 82, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5990e9), 83, 127, 0, 127 },
};
static WaveSet_t gReedOrgan_EXSAccordian_Set = {{{0}}};
#define SPMIDI_WAVESET_ReedOrgan_EXSAccordian   (48)

#include "waves/HiTom_DFH_NoSn_1.h"
static WaveSetRegion_t gHiTom_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiTom_Set = {{{0}}};
#define SPMIDI_WAVESET_HiTom   (49)

#include "waves/028_FunkMute_3E_AIF_1.h"
#include "waves/028_FunkMute_4E_AIF_1.h"
#include "waves/028_FunkMute_5E_AIF_1.h"
static WaveSetRegion_t gMutedGuitar_LP_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x3414e4), 0, 57, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x40245e), 58, 69, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c1398), 70, 127, 0, 127 },
};
static WaveSet_t gMutedGuitar_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_MutedGuitar_LP   (50)

#include "waves/LoWoodBlock_1.h"
static WaveSetRegion_t gLoWoodBlock_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoWoodBlock_Set = {{{0}}};
#define SPMIDI_WAVESET_LoWoodBlock   (51)

#include "waves/Guitar_Steel_040_1.h"
#include "waves/Guitar_Steel_055_1.h"
#include "waves/Guitar_Steel_067_1.h"
#include "waves/Guitar_Steel_079_1.h"
static WaveSetRegion_t gGtrSteel_Mob_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x281e22), 0, 50, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3704d2), 51, 56, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4307b8), 57, 71, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4efb89), 72, 127, 0, 127 },
};
static WaveSet_t gGtrSteel_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_GtrSteel_Mob   (52)

#include "waves/Clsd_HiHat_DFH_EQ_1.h"
static WaveSetRegion_t gClsd_HiHat_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gClsd_HiHat_Set = {{{0}}};
#define SPMIDI_WAVESET_Clsd_HiHat   (53)

#include "waves/OpenTriangle_1.h"
static WaveSetRegion_t gOpenTriangle_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gOpenTriangle_Set = {{{0}}};
#define SPMIDI_WAVESET_OpenTriangle   (54)

#include "waves/swhee1_1.h"
#include "waves/swhee3_1.h"
#include "waves/swheeLo_1.h"
static WaveSetRegion_t gWah_Arcade_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x370837), 0, 60, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430836), 61, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4f2d99), 73, 127, 0, 127 },
};
static WaveSet_t gWah_Arcade_Set = {{{0}}};
#define SPMIDI_WAVESET_Wah_Arcade   (55)

#include "waves/004_EP_Dry_2C_1.h"
#include "waves/004_EP_Dry_3E_1.h"
#include "waves/004_EP_Dry_4GS_1.h"
#include "waves/004_EP_Dry_6C_1.h"
static WaveSetRegion_t gElectricPiano_Dry_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 47, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x33feee), 48, 62, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x440451), 63, 78, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540867), 79, 127, 0, 127 },
};
static WaveSet_t gElectricPiano_Dry_Set = {{{0}}};
#define SPMIDI_WAVESET_ElectricPiano_Dry   (56)

#include "waves/A4Pizz_1.h"
#include "waves/F_2Pizz_1.h"
#include "waves/G5Pizz_1.h"
static WaveSetRegion_t gPizzicatoStrings_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x370000), 0, 61, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x450000), 62, 73, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4f0000), 74, 127, 0, 127 },
};
static WaveSet_t gPizzicatoStrings_Set = {{{0}}};
#define SPMIDI_WAVESET_PizzicatoStrings   (57)

#include "waves/Accordion_Casio_3E_1.h"
#include "waves/Accordion_Casio_4E_1.h"
#include "waves/Accordion_Casio_5E_1.h"
static WaveSetRegion_t gAccordion_Casio_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x340000), 0, 60, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x400000), 61, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4e0000), 73, 127, 0, 127 },
};
static WaveSet_t gAccordion_Casio_Set = {{{0}}};
#define SPMIDI_WAVESET_Accordion_Casio   (58)

#include "waves/HiCuica_1.h"
static WaveSetRegion_t gHiCuica_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiCuica_Set = {{{0}}};
#define SPMIDI_WAVESET_HiCuica   (59)

#include "waves/MuteHiConga_2.h"
static WaveSetRegion_t gMuteHiConga_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gMuteHiConga_Set = {{{0}}};
#define SPMIDI_WAVESET_MuteHiConga   (60)

#include "waves/SlapBass2_C1_1.h"
#include "waves/SlapBass2_C2_1.h"
#include "waves/SlapBass2_C3_1.h"
#include "waves/SlapBass2_C4_1.h"
static WaveSetRegion_t gSlapBass2_BassLegends_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300000), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 66, 127, 0, 127 },
};
static WaveSet_t gSlapBass2_BassLegends_Set = {{{0}}};
#define SPMIDI_WAVESET_SlapBass2_BassLegends   (61)

#include "waves/058_Tuba_2C_AIF_1.h"
#include "waves/058_Tuba_2F_AIF_1.h"
#include "waves/058_Tuba_3F_AIF_1.h"
#include "waves/058_Tuba_4F_AIF_1.h"
static WaveSetRegion_t gTuba_LP_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 12, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2a0000), 42, 47, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x350000), 48, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x420000), 60, 127, 0, 127 },
};
static WaveSet_t gTuba_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_Tuba_LP   (62)

#include "waves/061_BrssSectSyn_2C_1.h"
#include "waves/061_BrssSectSyn_3C_1.h"
#include "waves/061_BrssSectSyn_4E_1.h"
#include "waves/061_BrssSectSyn_5C_1.h"
static WaveSetRegion_t gBrassSynth2_Sc_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 54, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 55, 68, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c0000), 69, 79, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540411), 80, 127, 0, 127 },
};
static WaveSet_t gBrassSynth2_Sc_Set = {{{0}}};
#define SPMIDI_WAVESET_BrassSynth2_Sc   (63)

#include "waves/061_BrssSctWrmSyn_0GS_1.h"
#include "waves/061_BrssSctWrmSyn_2C_1.h"
#include "waves/061_BrssSctWrmSyn_3E_1.h"
#include "waves/061_BrssSctWrmSyn_4GS_1.h"
static WaveSetRegion_t gBrassSynth1_Sc_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x200000), 0, 39, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300000), 40, 55, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x400000), 56, 75, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x500000), 76, 127, 0, 127 },
};
static WaveSet_t gBrassSynth1_Sc_Set = {{{0}}};
#define SPMIDI_WAVESET_BrassSynth1_Sc   (64)

#include "waves/GG_Ma1_E_L5E_1.h"
#include "waves/NN_Nu2_C_VoxT_1.h"
static WaveSetRegion_t gbrightlings_Jim_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x304b35), 0, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3ff0a0), 60, 127, 0, 127 },
};
static WaveSet_t gbrightlings_Jim_Set = {{{0}}};
#define SPMIDI_WAVESET_brightlings_Jim   (65)

#include "waves/Sidestick_NoblCooleyM_1.h"
static WaveSetRegion_t gSidestick_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gSidestick_Set = {{{0}}};
#define SPMIDI_WAVESET_Sidestick   (66)

#include "waves/Splash_DFH_EQ_1.h"
static WaveSetRegion_t gSplashCymbal_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gSplashCymbal_Set = {{{0}}};
#define SPMIDI_WAVESET_SplashCymbal   (67)

#include "waves/DoubleBass_A2_1.h"
#include "waves/DoubleBass_C1_1.h"
#include "waves/DoubleBass_D2_1.h"
#include "waves/DoubleBass_G1_1.h"
static WaveSetRegion_t gDoubleBass_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x280000), 0, 43, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2f0000), 44, 50, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x360000), 51, 57, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3d0000), 58, 127, 0, 127 },
};
static WaveSet_t gDoubleBass_Set = {{{0}}};
#define SPMIDI_WAVESET_DoubleBass   (68)

#include "waves/Banjo_Boss_3G_1.h"
#include "waves/Banjo_Boss_4G_1.h"
static WaveSetRegion_t gBanjo_Boss_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x370000), 0, 60, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 61, 127, 0, 127 },
};
static WaveSet_t gBanjo_Boss_Set = {{{0}}};
#define SPMIDI_WAVESET_Banjo_Boss   (69)

#include "waves/ChinaCym_DFH_EQ_1.h"
static WaveSetRegion_t gChinaCymbal_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gChinaCymbal_Set = {{{0}}};
#define SPMIDI_WAVESET_ChinaCymbal   (70)

#include "waves/LoTimbale_1.h"
static WaveSetRegion_t gLoTimbale_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoTimbale_Set = {{{0}}};
#define SPMIDI_WAVESET_LoTimbale   (71)

#include "waves/Maracas_1.h"
static WaveSetRegion_t gMaracas_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gMaracas_Set = {{{0}}};
#define SPMIDI_WAVESET_Maracas   (72)

#include "waves/Crea_C1_1.h"
static WaveSetRegion_t gcreatures_POWTheme_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3beec7), 0, 127, 0, 127 },
};
static WaveSet_t gcreatures_POWTheme_Set = {{{0}}};
#define SPMIDI_WAVESET_creatures_POWTheme   (73)

#include "waves/AcSnare_DFH_Sensi_1.h"
static WaveSetRegion_t gAcSnare_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gAcSnare_Set = {{{0}}};
#define SPMIDI_WAVESET_AcSnare   (74)

#include "waves/SopSax_A3_1.h"
#include "waves/SopSax_C2_1.h"
#include "waves/SopSax_D3_1.h"
#include "waves/SopSax_G2_1.h"
static WaveSetRegion_t gSopranoSax_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 63, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 64, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4a0000), 71, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x510000), 78, 127, 0, 127 },
};
static WaveSet_t gSopranoSax_Set = {{{0}}};
#define SPMIDI_WAVESET_SopranoSax   (75)

#include "waves/LowBongo_1.h"
static WaveSetRegion_t gLowBongo_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLowBongo_Set = {{{0}}};
#define SPMIDI_WAVESET_LowBongo   (76)

#include "waves/Trumpet_56_1.h"
#include "waves/Trumpet_62_1.h"
#include "waves/Trumpet_68_1.h"
#include "waves/Trumpet_74_1.h"
#include "waves/Trumpet_80_1.h"
static WaveSetRegion_t gTrumpet_Mob_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x37ba8f), 0, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e17fd), 59, 64, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x442507), 65, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4a0d54), 71, 76, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4fff5d), 77, 127, 0, 127 },
};
static WaveSet_t gTrumpet_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_Trumpet_Mob   (77)

#include "waves/082_Calliope_4G_1.h"
static WaveSetRegion_t gCalliope_LP_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x4f0000), 0, 127, 0, 127 },
};
static WaveSet_t gCalliope_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_Calliope_LP   (78)

#include "waves/BassDrum1_Kick3L05_1.h"
static WaveSetRegion_t gBassDrum_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gBassDrum_Set = {{{0}}};
#define SPMIDI_WAVESET_BassDrum   (79)

#include "waves/LowAgogo_1.h"
static WaveSetRegion_t gLoAgogo_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoAgogo_Set = {{{0}}};
#define SPMIDI_WAVESET_LoAgogo   (80)

#include "waves/Koto_C3_1.h"
#include "waves/Koto_C4_1.h"
#include "waves/Koto_C5_1.h"
#include "waves/Koto_C6_1.h"
#include "waves/Koto_C7_1.h"
#include "waves/Koto_C8_1.h"
static WaveSetRegion_t gKoto_Sculpture_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x242048), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300cdb), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c025c), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x47fe9f), 66, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x54010d), 78, 89, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x601335), 90, 127, 0, 127 },
};
static WaveSet_t gKoto_Sculpture_Set = {{{0}}};
#define SPMIDI_WAVESET_Koto_Sculpture   (81)

#include "waves/B3_Lead_B4_1.h"
#include "waves/B3_Lead_D4_1.h"
static WaveSetRegion_t gPercOrgan_EVB3_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x3de613), 0, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x470000), 66, 127, 0, 127 },
};
static WaveSet_t gPercOrgan_EVB3_Set = {{{0}}};
#define SPMIDI_WAVESET_PercOrgan_EVB3   (82)

#include "waves/Trumpet_Mute_57_1.h"
#include "waves/Trumpet_Mute_66_1.h"
#include "waves/Trumpet_Mute_75_1.h"
#include "waves/Trumpet_Mute_84_1.h"
static WaveSetRegion_t gTrumpet_Mute_Mob_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x390000), 0, 61, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x422faa), 62, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4b0000), 71, 79, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540000), 80, 90, 0, 127 },
};
static WaveSet_t gTrumpet_Mute_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_Trumpet_Mute_Mob   (83)

#include "waves/Harp_Casio_3C_1.h"
#include "waves/Harp_Casio_4E_1.h"
#include "waves/Harp_Casio_5E_1.h"
#include "waves/Harp_Casio_6C_1.h"
static WaveSetRegion_t gHarp_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 55, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3fff22), 56, 69, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4bff28), 70, 79, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540000), 80, 127, 0, 127 },
};
static WaveSet_t gHarp_Set = {{{0}}};
#define SPMIDI_WAVESET_Harp   (84)

#include "waves/004_EP_Soft_2C_1.h"
#include "waves/004_EP_Soft_3C_1.h"
#include "waves/004_EP_Soft_4C_1.h"
#include "waves/004_EP_Soft_4GS_1.h"
#include "waves/004_EP_Soft_6C_1.h"
static WaveSetRegion_t gElectricPiano_Soft_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x240b0b), 24, 46, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2ffa08), 47, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c099c), 59, 66, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x440458), 67, 78, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540866), 79, 127, 0, 127 },
};
static WaveSet_t gElectricPiano_Soft_Set = {{{0}}};
#define SPMIDI_WAVESET_ElectricPiano_Soft   (85)

#include "waves/026_CleanElecGtr_2_2E_1.h"
#include "waves/026_CleanElecGtr_2_3E_1.h"
#include "waves/026_CleanElecGtr_2_4GS_1.h"
static WaveSetRegion_t gElectricGtr2_EXS_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x280000), 0, 45, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x340000), 46, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x440000), 60, 127, 0, 127 },
};
static WaveSet_t gElectricGtr2_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_ElectricGtr2_EXS   (86)

#include "waves/EBAS_D2_1.h"
static WaveSetRegion_t gFingerBass_LP_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x320000), 0, 127, 0, 127 },
};
static WaveSet_t gFingerBass_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_FingerBass_LP   (87)

#include "waves/HiTimbale_1.h"
static WaveSetRegion_t gHiTimbale_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiTimbale_Set = {{{0}}};
#define SPMIDI_WAVESET_HiTimbale   (88)

#include "waves/LoFlrTom_DFH_Tom5_1.h"
static WaveSetRegion_t gLoFlrTom_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLoFlrTom_Set = {{{0}}};
#define SPMIDI_WAVESET_LoFlrTom   (89)

#include "waves/FretlessBass_C2_1.h"
#include "waves/FretlessBass_D3_1.h"
static WaveSetRegion_t gFretlessBass_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 42, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x320000), 43, 127, 0, 127 },
};
static WaveSet_t gFretlessBass_Set = {{{0}}};
#define SPMIDI_WAVESET_FretlessBass   (90)

#include "waves/Pdl_HiHat_DFH_EQ_1.h"
static WaveSetRegion_t gPdl_HiHat_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gPdl_HiHat_Set = {{{0}}};
#define SPMIDI_WAVESET_Pdl_HiHat   (91)

#include "waves/B3_B3_1.h"
#include "waves/B3_C6_1.h"
#include "waves/B3_E5_1.h"
#include "waves/B3_G4_1.h"
static WaveSetRegion_t gRockOrgan_EVB3_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x3b0000), 0, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 60, 71, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c0000), 72, 79, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540000), 80, 127, 0, 127 },
};
static WaveSet_t gRockOrgan_EVB3_Set = {{{0}}};
#define SPMIDI_WAVESET_RockOrgan_EVB3   (92)

#include "waves/HiConga_1.h"
static WaveSetRegion_t gHiConga_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiConga_Set = {{{0}}};
#define SPMIDI_WAVESET_HiConga   (93)

#include "waves/Dulcimer_C2_1.h"
#include "waves/Dulcimer_C3_1.h"
#include "waves/Dulcimer_C4_1.h"
#include "waves/Dulcimer_C5_1.h"
#include "waves/Dulcimer_C6_1.h"
static WaveSetRegion_t gDulcimer_EXS12Str_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x24110e), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3009a1), 42, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c07dc), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x48065c), 66, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x540765), 78, 127, 0, 127 },
};
static WaveSet_t gDulcimer_EXS12Str_Set = {{{0}}};
#define SPMIDI_WAVESET_Dulcimer_EXS12Str   (94)

#include "waves/Violin_Bowed_056_1.h"
#include "waves/Violin_Bowed_067_1.h"
#include "waves/Violin_Bowed_079_1.h"
#include "waves/Violin_Bowed_085_1.h"
#include "waves/Violin_Bowed_088_1.h"
static WaveSetRegion_t gViolinBow_Mob_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x380000), 0, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 60, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4f0000), 73, 81, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x550000), 82, 86, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x580000), 87, 92, 0, 127 },
};
static WaveSet_t gViolinBow_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_ViolinBow_Mob   (95)

#include "waves/AcGuitarHarmA3_1.h"
#include "waves/AcGuitarHarmE4_1.h"
#include "waves/AcGuitarHarm_C2_1.h"
#include "waves/AcGuitarHarm_D3_1.h"
#include "waves/AcGuitarHarm_G2_1.h"
static WaveSetRegion_t gAcousticGuitarHarmonics_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 59, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x450000), 66, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c0000), 73, 127, 0, 127 },
};
static WaveSet_t gAcousticGuitarHarmonics_Set = {{{0}}};
#define SPMIDI_WAVESET_AcousticGuitarHarmonics   (96)

#include "waves/010_MscBox_3AS_1.h"
#include "waves/010_MscBox_4A_1.h"
#include "waves/010_MscBox_4F_1.h"
#include "waves/010_MscBox_5D_1.h"
static WaveSetRegion_t gMusicBox_LT_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x520000), 0, 85, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x590000), 86, 90, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5d0000), 91, 95, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x620000), 96, 108, 0, 127 },
};
static WaveSet_t gMusicBox_LT_Set = {{{0}}};
#define SPMIDI_WAVESET_MusicBox_LT   (97)

#include "waves/Clarinet_052_1.h"
#include "waves/Clarinet_064_1.h"
#include "waves/Clarinet_076_1.h"
static WaveSetRegion_t gClarinet_Mob_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x34160c), 0, 57, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3feb38), 58, 69, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4c2cbc), 70, 127, 0, 127 },
};
static WaveSet_t gClarinet_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_Clarinet_Mob   (98)

#include "waves/MiniMeMoog_C2_1.h"
#include "waves/MiniMeMoog_D3_1.h"
#include "waves/MiniMeMoog_G2_1.h"
static WaveSetRegion_t gMiniMeMoog_FE_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 59, 127, 0, 127 },
};
static WaveSet_t gMiniMeMoog_FE_Set = {{{0}}};
#define SPMIDI_WAVESET_MiniMeMoog_FE   (99)

#include "waves/Crash2_DFH_EQ_1.h"
static WaveSetRegion_t gCrash2_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gCrash2_Set = {{{0}}};
#define SPMIDI_WAVESET_Crash2   (100)

#include "waves/FrHorn_C2_1.h"
#include "waves/FrHorn_G2_1.h"
static WaveSetRegion_t gFrHorn_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x3be6f4), 0, 62, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x42ff5a), 63, 127, 0, 127 },
};
static WaveSet_t gFrHorn_Set = {{{0}}};
#define SPMIDI_WAVESET_FrHorn   (101)

#include "waves/Crash1_DFH_EQ_1.h"
static WaveSetRegion_t gCrash1_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gCrash1_Set = {{{0}}};
#define SPMIDI_WAVESET_Crash1   (102)

#include "waves/AcousBassDr_Erskine_1.h"
static WaveSetRegion_t gAcBassDrum_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gAcBassDrum_Set = {{{0}}};
#define SPMIDI_WAVESET_AcBassDrum   (103)

#include "waves/Crea_C1_3.h"
#include "waves/Crea_C1_4.h"
#include "waves/Crea_C3_2.h"
#include "waves/Crea_C3_3.h"
#include "waves/Crea_D2_1.h"
#include "waves/Crea_D4_1.h"
static WaveSetRegion_t gDATpolitics_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 41, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 42, 52, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c1b1e), 53, 66, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x49e9c7), 67, 84, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x6010d9), 85, 96, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x61dcbc), 97, 127, 0, 127 },
};
static WaveSet_t gDATpolitics_Set = {{{0}}};
#define SPMIDI_WAVESET_DATpolitics   (104)

#include "waves/DGuitar_Muted_B1_1.h"
#include "waves/DGuitar_Muted_B2_1.h"
#include "waves/DGuitar_Muted_B3_1.h"
#include "waves/DGuitar_Muted_B4_1.h"
#include "waves/DGuitar_Muted_B5_1.h"
#include "waves/DGuitar_Muted_F2_1.h"
#include "waves/DGuitar_Muted_F3_1.h"
#include "waves/DGuitar_Muted_F4_1.h"
#include "waves/DGuitar_Muted_F5_1.h"
static WaveSetRegion_t gDistGuitar_Muted_Regions[9] = {
  {	SPMUtil_MIDIPitchToOctave(0x230000), 0, 40, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x290000), 41, 46, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2f0000), 47, 52, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x350000), 53, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3b0000), 59, 64, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x410000), 65, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x470000), 71, 76, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4d0000), 77, 82, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x530000), 83, 88, 0, 127 },
};
static WaveSet_t gDistGuitar_Muted_Set = {{{0}}};
#define SPMIDI_WAVESET_DistGuitar_Muted   (105)

#include "waves/DrawbarOrgan_A5_1.h"
#include "waves/DrawbarOrgan_C3_1.h"
#include "waves/DrawbarOrgan_D4_1.h"
#include "waves/DrawbarOrgan_G3_1.h"
static WaveSetRegion_t gDrawbarOrgan_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 59, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x450000), 66, 127, 0, 127 },
};
static WaveSet_t gDrawbarOrgan_Set = {{{0}}};
#define SPMIDI_WAVESET_DrawbarOrgan   (106)

#include "waves/108_Kalimba_4C_AIF_1.h"
#include "waves/108_Kalimba_4F_AIF_1.h"
static WaveSetRegion_t gKalimba_LP_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 62, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x410000), 63, 127, 0, 127 },
};
static WaveSet_t gKalimba_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_Kalimba_LP   (107)

#include "waves/ShortWhistle_1.h"
static WaveSetRegion_t gShortWhistle_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gShortWhistle_Set = {{{0}}};
#define SPMIDI_WAVESET_ShortWhistle   (108)

#include "waves/LongWhistle_1.h"
static WaveSetRegion_t gLongWhistle_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gLongWhistle_Set = {{{0}}};
#define SPMIDI_WAVESET_LongWhistle   (109)

#include "waves/126_GenDrum_n76_1.h"
static WaveSetRegion_t gWoodblocks_EXS_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x4f0000), 0, 127, 0, 127 },
};
static WaveSet_t gWoodblocks_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_Woodblocks_EXS   (110)

#include "waves/114_SteelDrm_4D_1.h"
#include "waves/114_SteelDrm_5C_1.h"
static WaveSetRegion_t gSteelDrum_LP_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 0, 66, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 67, 127, 0, 127 },
};
static WaveSet_t gSteelDrum_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_SteelDrum_LP   (111)

#include "waves/HiMidTom_DFH_Tom1_1.h"
static WaveSetRegion_t gHiMidTom_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gHiMidTom_Set = {{{0}}};
#define SPMIDI_WAVESET_HiMidTom   (112)

#include "waves/RideBell_DFH_EQ_1.h"
static WaveSetRegion_t gRideBell_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gRideBell_Set = {{{0}}};
#define SPMIDI_WAVESET_RideBell   (113)

#include "waves/011_Vibes_4FS_1.h"
#include "waves/011_Vibes_5FS_1.h"
#include "waves/011_Vibes_6FS_1.h"
static WaveSetRegion_t gVibraphone_LP_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x420000), 0, 71, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4e0000), 72, 83, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5a0000), 84, 127, 0, 127 },
};
static WaveSet_t gVibraphone_LP_Set = {{{0}}};
#define SPMIDI_WAVESET_Vibraphone_LP   (114)

#include "waves/Piano_HonkyTonk_A3_1.h"
#include "waves/Piano_HonkyTonk_C2_1.h"
#include "waves/Piano_HonkyTonk_D3_1.h"
#include "waves/Piano_HonkyTonk_G2_1.h"
static WaveSetRegion_t gPiano_HonkyTonk_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 63, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x430000), 64, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4a0000), 71, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x510000), 78, 127, 0, 127 },
};
static WaveSet_t gPiano_HonkyTonk_Set = {{{0}}};
#define SPMIDI_WAVESET_Piano_HonkyTonk   (115)

#include "waves/ODGuitar_VSL_B1_1.h"
#include "waves/ODGuitar_VSL_B2_1.h"
#include "waves/ODGuitar_VSL_B3_1.h"
#include "waves/ODGuitar_VSL_B4_3.h"
#include "waves/ODGuitar_VSL_B5_1.h"
#include "waves/ODGuitar_VSL_F_4_1.h"
#include "waves/ODGuitar_VSL_F2_1.h"
#include "waves/ODGuitar_VSL_F3_1.h"
#include "waves/ODGuitar_VSL_F5_1.h"
static WaveSetRegion_t gODGuitarSust_VSL_Regions[9] = {
  {	SPMUtil_MIDIPitchToOctave(0x230000), 0, 40, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x28ded0), 41, 46, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2f0000), 47, 52, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3533c6), 53, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3b0000), 59, 64, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x420000), 65, 70, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x46fc09), 71, 76, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4cfe47), 77, 82, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x52fb33), 83, 127, 0, 127 },
};
static WaveSet_t gODGuitarSust_VSL_Set = {{{0}}};
#define SPMIDI_WAVESET_ODGuitarSust_VSL   (116)

#include "waves/SynthStrings2_A3_1.h"
#include "waves/SynthStrings2_C2_1.h"
#include "waves/SynthStrings2_D3_1.h"
#include "waves/SynthStrings2_G2_1.h"
static WaveSetRegion_t gSynthStrings2_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 59, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x450000), 66, 127, 0, 127 },
};
static WaveSet_t gSynthStrings2_Set = {{{0}}};
#define SPMIDI_WAVESET_SynthStrings2   (117)

#include "waves/SynthStrings_A3_1.h"
#include "waves/SynthStrings_C2_1.h"
#include "waves/SynthStrings_D3_1.h"
#include "waves/SynthStrings_G2_1.h"
static WaveSetRegion_t gSynthString1_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 59, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x450000), 66, 127, 0, 127 },
};
static WaveSet_t gSynthString1_Set = {{{0}}};
#define SPMIDI_WAVESET_SynthString1   (118)

#include "waves/Guitar_Nylon_043_P_1.h"
#include "waves/Guitar_Nylon_055_1.h"
#include "waves/Guitar_Nylon_067_1.h"
#include "waves/Guitar_Nylon_073_1.h"
#include "waves/Guitar_Nylon_082_1.h"
static WaveSetRegion_t gGtrNylon_Mob_Regions[5] = {
  {	SPMUtil_MIDIPitchToOctave(0x2af15a), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 56, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4302b0), 57, 69, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4900c8), 70, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x521947), 78, 127, 0, 127 },
};
static WaveSet_t gGtrNylon_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_GtrNylon_Mob   (119)

#include "waves/Ride2_DFH_EQ_1.h"
static WaveSetRegion_t gRide2_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gRide2_Set = {{{0}}};
#define SPMIDI_WAVESET_Ride2   (120)

#include "waves/Ride1_DFH_EQ_1.h"
static WaveSetRegion_t gRide1_Regions[1] = {
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 0, 127, 0, 127 },
};
static WaveSet_t gRide1_Set = {{{0}}};
#define SPMIDI_WAVESET_Ride1   (121)

#include "waves/Perculate_C1_1.h"
#include "waves/Perculate_C2_1.h"
#include "waves/Perculate_C3_1.h"
#include "waves/Perculate_C4_1.h"
#include "waves/Perculate_C5_1.h"
#include "waves/Perculate_C6_1.h"
static WaveSetRegion_t gPerculator_LogiSyn_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c0000), 54, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4802d6), 66, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5415ca), 78, 89, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x602e9e), 90, 101, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x6c0000), 102, 127, 0, 127 },
};
static WaveSet_t gPerculator_LogiSyn_Set = {{{0}}};
#define SPMIDI_WAVESET_Perculator_LogiSyn   (122)

#include "waves/Cello_Bowed_036_1.h"
#include "waves/Cello_Bowed_048_1.h"
#include "waves/Cello_Bowed_057_1.h"
#include "waves/Cello_Bowed_066_1.h"
static WaveSetRegion_t gCelloBowed_Mob_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 0, 42, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x320000), 43, 53, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x390000), 54, 61, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x420000), 62, 127, 0, 127 },
};
static WaveSet_t gCelloBowed_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_CelloBowed_Mob   (123)

#include "waves/Oboe_58_2.h"
#include "waves/Oboe_67_1.h"
#include "waves/Oboe_78_1.h"
static WaveSetRegion_t gOboe_Mob_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x3a0000), 0, 62, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x433fb5), 63, 72, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x4e0000), 73, 127, 0, 127 },
};
static WaveSet_t gOboe_Mob_Set = {{{0}}};
#define SPMIDI_WAVESET_Oboe_Mob   (124)

#include "waves/Glock_FS6_1.h"
#include "waves/Glock_G5_1.h"
static WaveSetRegion_t gGlockenspiel_QT_Regions[2] = {
  {	SPMUtil_MIDIPitchToOctave(0x4f01ca), 0, 84, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x5a69f4), 85, 127, 0, 127 },
};
static WaveSet_t gGlockenspiel_QT_Set = {{{0}}};
#define SPMIDI_WAVESET_Glockenspiel_QT   (125)

#include "waves/022_Harm_3C_1.h"
#include "waves/022_Harm_4C_1.h"
#include "waves/022_Harm_4GS_1.h"
static WaveSetRegion_t gHarmonica_EXS_Regions[3] = {
  {	SPMUtil_MIDIPitchToOctave(0x3bf2f4), 0, 61, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x47fe1d), 62, 77, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x500726), 78, 127, 0, 127 },
};
static WaveSet_t gHarmonica_EXS_Set = {{{0}}};
#define SPMIDI_WAVESET_Harmonica_EXS   (126)

#include "waves/Shak_Sculpt_C1_1.h"
#include "waves/Shak_Sculpt_C4_1.h"
#include "waves/Shak_Sculpt_G1_1.h"
#include "waves/Shak_Sculpt_G2_1.h"
static WaveSetRegion_t gShakuhachi_Sculptur_Regions[6] = {
  {	SPMUtil_MIDIPitchToOctave(0x240000), 36, 42, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x2b0000), 43, 47, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x300f18), 50, 59, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370831), 48, 49, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3c122f), 60, 64, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x480000), 65, 127, 0, 127 },
};
static WaveSet_t gShakuhachi_Sculptur_Set = {{{0}}};
#define SPMIDI_WAVESET_Shakuhachi_Sculptur   (127)

#include "waves/JazzGuitar_A3_1.h"
#include "waves/JazzGuitar_C2_1.h"
#include "waves/JazzGuitar_D3_1.h"
#include "waves/JazzGuitar_G2_1.h"
static WaveSetRegion_t gJazzGuitar_Regions[4] = {
  {	SPMUtil_MIDIPitchToOctave(0x300000), 0, 51, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x370000), 52, 58, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x3e0000), 59, 65, 0, 127 },
  {	SPMUtil_MIDIPitchToOctave(0x450000), 66, 127, 0, 127 },
};
static WaveSet_t gJazzGuitar_Set = {{{0}}};
#define SPMIDI_WAVESET_JazzGuitar   (128)

/* Pointers inside structures must be initialized by code
 * at run-time instead of at compile-time. This is to simplify
 * building relocatable code.
 */
void WaveManager_LoadWaves( WaveManager_t *waveManager )
{
#if SPMIDI_RELOCATABLE
  g066_TenorSax_5FS_1.samples = (spmSample *) g066_TenorSax_5FS_1Samples;
  gViolin_Bowed_067_1.samples = (spmSample *) gViolin_Bowed_067_1Samples;
  gDGuitar_Muted_B1_1.samples = (spmSample *) gDGuitar_Muted_B1_1Samples;
  gSlapBass2_C1_1.samples = (spmSample *) gSlapBass2_C1_1Samples;
  gTrumpet_56_1.samples = (spmSample *) gTrumpet_56_1Samples;
  g066_TenorSax_5C_AIF_1.samples = (spmSample *) g066_TenorSax_5C_AIF_1Samples;
  gXY_C2_1.samples = (spmSample *) gXY_C2_1Samples;
  gDrawbarOrgan_D4_1.samples = (spmSample *) gDrawbarOrgan_D4_1Samples;
  gDGuitar_Muted_B4_1.samples = (spmSample *) gDGuitar_Muted_B4_1Samples;
  gSynthStrings2_C2_1.samples = (spmSample *) gSynthStrings2_C2_1Samples;
  g048_Strings2_4GS_1.samples = (spmSample *) g048_Strings2_4GS_1Samples;
  gEBAS_D2_1.samples = (spmSample *) gEBAS_D2_1Samples;
  gSynthBop_C2_GamBy_1.samples = (spmSample *) gSynthBop_C2_GamBy_1Samples;
  gAcoustBass_BossOD_1E_1.samples = (spmSample *) gAcoustBass_BossOD_1E_1Samples;
  gHarp_Casio_5E_1.samples = (spmSample *) gHarp_Casio_5E_1Samples;
  gKoto_C7_1.samples = (spmSample *) gKoto_C7_1Samples;
  gPdl_HiHat_DFH_EQ_1.samples = (spmSample *) gPdl_HiHat_DFH_EQ_1Samples;
  gGuitar_Nylon_043_P_1.samples = (spmSample *) gGuitar_Nylon_043_P_1Samples;
  g058_Tuba_4F_AIF_1.samples = (spmSample *) g058_Tuba_4F_AIF_1Samples;
  gSynthStrings_D3_1.samples = (spmSample *) gSynthStrings_D3_1Samples;
  gTrumpet_62_1.samples = (spmSample *) gTrumpet_62_1Samples;
  gDGuitar_Muted_F3_1.samples = (spmSample *) gDGuitar_Muted_F3_1Samples;
  gPiano_Grand_055_1.samples = (spmSample *) gPiano_Grand_055_1Samples;
  gF_2Pizz_1.samples = (spmSample *) gF_2Pizz_1Samples;
  gODGuitar_VSL_B4_3.samples = (spmSample *) gODGuitar_VSL_B4_3Samples;
  gFlu_Logic_C4_1.samples = (spmSample *) gFlu_Logic_C4_1Samples;
  g026_CleanElecGtr_2_2E_1.samples = (spmSample *) g026_CleanElecGtr_2_2E_1Samples;
  gSaxAlto_073_1.samples = (spmSample *) gSaxAlto_073_1Samples;
  gXY_C5_1.samples = (spmSample *) gXY_C5_1Samples;
  gHiCuica_1.samples = (spmSample *) gHiCuica_1Samples;
  gLowConga_1.samples = (spmSample *) gLowConga_1Samples;
  g048_Strings2_2C_1.samples = (spmSample *) g048_Strings2_2C_1Samples;
  g058_Tuba_2F_AIF_1.samples = (spmSample *) g058_Tuba_2F_AIF_1Samples;
  gTrumpet_68_1.samples = (spmSample *) gTrumpet_68_1Samples;
  gSidestick_NoblCooleyM_1.samples = (spmSample *) gSidestick_NoblCooleyM_1Samples;
  gMiniMeMoog_G2_1.samples = (spmSample *) gMiniMeMoog_G2_1Samples;
  gBanjo_Boss_4G_1.samples = (spmSample *) gBanjo_Boss_4G_1Samples;
  gViolin_Bowed_079_1.samples = (spmSample *) gViolin_Bowed_079_1Samples;
  gAccordion_Boss_3E_1.samples = (spmSample *) gAccordion_Boss_3E_1Samples;
  gG5Pizz_1.samples = (spmSample *) gG5Pizz_1Samples;
  gReedOrgan_F5_1.samples = (spmSample *) gReedOrgan_F5_1Samples;
  gAcousBassDr_Erskine_1.samples = (spmSample *) gAcousBassDr_Erskine_1Samples;
  gElSnare_DFH_PiccSn_1.samples = (spmSample *) gElSnare_DFH_PiccSn_1Samples;
  gB3_E5_1.samples = (spmSample *) gB3_E5_1Samples;
  gClosedTriangle_1.samples = (spmSample *) gClosedTriangle_1Samples;
  g012_Marimba_5C_1.samples = (spmSample *) g012_Marimba_5C_1Samples;
  gKittySynth_G2_1.samples = (spmSample *) gKittySynth_G2_1Samples;
  gCello_Bowed_036_1.samples = (spmSample *) gCello_Bowed_036_1Samples;
  gPerculate_C5_1.samples = (spmSample *) gPerculate_C5_1Samples;
  gDGuitar_Muted_B5_1.samples = (spmSample *) gDGuitar_Muted_B5_1Samples;
  g061_BrssSctWrmSyn_4GS_1.samples = (spmSample *) g061_BrssSctWrmSyn_4GS_1Samples;
  gCrash2_DFH_EQ_1.samples = (spmSample *) gCrash2_DFH_EQ_1Samples;
  g004_EP_Dry_6C_1.samples = (spmSample *) g004_EP_Dry_6C_1Samples;
  g026_CleanElecGtr_2_4GS_1.samples = (spmSample *) g026_CleanElecGtr_2_4GS_1Samples;
  g012_Marimba_3E_1.samples = (spmSample *) g012_Marimba_3E_1Samples;
  gLoTimbale_1.samples = (spmSample *) gLoTimbale_1Samples;
  gSynthBass2_C2_1.samples = (spmSample *) gSynthBass2_C2_1Samples;
  gAcGuitarHarm_C2_1.samples = (spmSample *) gAcGuitarHarm_C2_1Samples;
  gKoto_C8_1.samples = (spmSample *) gKoto_C8_1Samples;
  gPiano_HonkyTonk_G2_1.samples = (spmSample *) gPiano_HonkyTonk_G2_1Samples;
  gDGuitar_Scrape_F2_1.samples = (spmSample *) gDGuitar_Scrape_F2_1Samples;
  gCello_Bowed_066_1.samples = (spmSample *) gCello_Bowed_066_1Samples;
  g104_Sitar_Fat_4C_1.samples = (spmSample *) g104_Sitar_Fat_4C_1Samples;
  gLowBongo_1.samples = (spmSample *) gLowBongo_1Samples;
  gMaracas_1.samples = (spmSample *) gMaracas_1Samples;
  gDGuitar_Staccato_F4_1.samples = (spmSample *) gDGuitar_Staccato_F4_1Samples;
  gJazzGuitar_C2_1.samples = (spmSample *) gJazzGuitar_C2_1Samples;
  gTrumpet_80_1.samples = (spmSample *) gTrumpet_80_1Samples;
  gAccordion_Casio_5E_1.samples = (spmSample *) gAccordion_Casio_5E_1Samples;
  gOpen_HiHat_DFH_EQ_1.samples = (spmSample *) gOpen_HiHat_DFH_EQ_1Samples;
  gShamisen_C5_1.samples = (spmSample *) gShamisen_C5_1Samples;
  g057_Trombone_4C_1.samples = (spmSample *) g057_Trombone_4C_1Samples;
  gDGuitar_Staccato_F2_1.samples = (spmSample *) gDGuitar_Staccato_F2_1Samples;
  g114_SteelDrm_4D_1.samples = (spmSample *) g114_SteelDrm_4D_1Samples;
  gShak_Sculpt_G2_1.samples = (spmSample *) gShak_Sculpt_G2_1Samples;
  gDoubleBass_C1_1.samples = (spmSample *) gDoubleBass_C1_1Samples;
  gPurr_1.samples = (spmSample *) gPurr_1Samples;
  gPiano_Grand_067_1.samples = (spmSample *) gPiano_Grand_067_1Samples;
  gPiano_Grand_043_1.samples = (spmSample *) gPiano_Grand_043_1Samples;
  gODGuitar_VSL_F2_1.samples = (spmSample *) gODGuitar_VSL_F2_1Samples;
  gBanjo_Boss_3G_1.samples = (spmSample *) gBanjo_Boss_3G_1Samples;
  g070_Bassoon_4F_1.samples = (spmSample *) g070_Bassoon_4F_1Samples;
  gwank1_1.samples = (spmSample *) gwank1_1Samples;
  gPiano_HonkyTonk_A3_1.samples = (spmSample *) gPiano_HonkyTonk_A3_1Samples;
  gtremelo1_1.samples = (spmSample *) gtremelo1_1Samples;
  gClarinet_052_1.samples = (spmSample *) gClarinet_052_1Samples;
  gA4Pizz_1.samples = (spmSample *) gA4Pizz_1Samples;
  gAccordion_Boss_4E_1.samples = (spmSample *) gAccordion_Boss_4E_1Samples;
  gDGuitar_Scrape_F3_1.samples = (spmSample *) gDGuitar_Scrape_F3_1Samples;
  g028_FunkMute_5E_AIF_1.samples = (spmSample *) g028_FunkMute_5E_AIF_1Samples;
  g007_Clav_5C_1.samples = (spmSample *) g007_Clav_5C_1Samples;
  gBassDrum1_Kick3L05_1.samples = (spmSample *) gBassDrum1_Kick3L05_1Samples;
  gCello_Bowed_057_1.samples = (spmSample *) gCello_Bowed_057_1Samples;
  g028_FunkMute_4E_AIF_1.samples = (spmSample *) g028_FunkMute_4E_AIF_1Samples;
  gB3_C6_1.samples = (spmSample *) gB3_C6_1Samples;
  g104_Sitar_Fat_5C_1.samples = (spmSample *) g104_Sitar_Fat_5C_1Samples;
  g114_SteelDrm_5C_1.samples = (spmSample *) g114_SteelDrm_5C_1Samples;
  gSynthBop_C1_GamBy_1.samples = (spmSample *) gSynthBop_C1_GamBy_1Samples;
  gKittySynth2_C3_1.samples = (spmSample *) gKittySynth2_C3_1Samples;
  gDGuitar_Muted_F2_1.samples = (spmSample *) gDGuitar_Muted_F2_1Samples;
  g061_BrssSctWrmSyn_3E_1.samples = (spmSample *) g061_BrssSctWrmSyn_3E_1Samples;
  gCrea_C1_3.samples = (spmSample *) gCrea_C1_3Samples;
  gShamisen_C3_1.samples = (spmSample *) gShamisen_C3_1Samples;
  gDGuitar_Staccato_F5_1.samples = (spmSample *) gDGuitar_Staccato_F5_1Samples;
  gGuitar_Nylon_073_1.samples = (spmSample *) gGuitar_Nylon_073_1Samples;
  gDGuitar_Staccato_B2_1.samples = (spmSample *) gDGuitar_Staccato_B2_1Samples;
  gFretlessBass_C2_1.samples = (spmSample *) gFretlessBass_C2_1Samples;
  gXY_C1_1.samples = (spmSample *) gXY_C1_1Samples;
  gODGuitar_VSL_B5_1.samples = (spmSample *) gODGuitar_VSL_B5_1Samples;
  gHiTom_DFH_NoSn_1.samples = (spmSample *) gHiTom_DFH_NoSn_1Samples;
  gOpenTriangle_1.samples = (spmSample *) gOpenTriangle_1Samples;
  gSynthBop_C4_GamBy_1.samples = (spmSample *) gSynthBop_C4_GamBy_1Samples;
  g061_BrssSectSyn_3C_1.samples = (spmSample *) g061_BrssSectSyn_3C_1Samples;
  gChOrgan_C6_1.samples = (spmSample *) gChOrgan_C6_1Samples;
  gDGuitar_Scrape_F4_1.samples = (spmSample *) gDGuitar_Scrape_F4_1Samples;
  gSaxAlto_049_1.samples = (spmSample *) gSaxAlto_049_1Samples;
  gDulcimer_C3_1.samples = (spmSample *) gDulcimer_C3_1Samples;
  gGuitar_Steel_067_1.samples = (spmSample *) gGuitar_Steel_067_1Samples;
  gRideBell_DFH_EQ_1.samples = (spmSample *) gRideBell_DFH_EQ_1Samples;
  gSynthStrings_G2_1.samples = (spmSample *) gSynthStrings_G2_1Samples;
  gGG_Ma1_E_L5E_1.samples = (spmSample *) gGG_Ma1_E_L5E_1Samples;
  g004_EP_Soft_4GS_1.samples = (spmSample *) g004_EP_Soft_4GS_1Samples;
  gODGuitar_VSL_B1_1.samples = (spmSample *) gODGuitar_VSL_B1_1Samples;
  gHarp_Casio_3C_1.samples = (spmSample *) gHarp_Casio_3C_1Samples;
  gDrawbarOrgan_A5_1.samples = (spmSample *) gDrawbarOrgan_A5_1Samples;
  gODGuitar_VSL_B3_1.samples = (spmSample *) gODGuitar_VSL_B3_1Samples;
  g048_Strings2_4E_1.samples = (spmSample *) g048_Strings2_4E_1Samples;
  gShamisen_C6_1.samples = (spmSample *) gShamisen_C6_1Samples;
  gAccordion_Casio_4E_1.samples = (spmSample *) gAccordion_Casio_4E_1Samples;
  g022_Harm_4C_1.samples = (spmSample *) g022_Harm_4C_1Samples;
  gTrumpet_Mute_75_1.samples = (spmSample *) gTrumpet_Mute_75_1Samples;
  gswhee1_1.samples = (spmSample *) gswhee1_1Samples;
  gTrumpet_Mute_66_1.samples = (spmSample *) gTrumpet_Mute_66_1Samples;
  gSynthStrings_A3_1.samples = (spmSample *) gSynthStrings_A3_1Samples;
  gB3_B3_1.samples = (spmSample *) gB3_B3_1Samples;
  gSynthStrings2_A3_1.samples = (spmSample *) gSynthStrings2_A3_1Samples;
  gClaves_1.samples = (spmSample *) gClaves_1Samples;
  g108_Kalimba_4F_AIF_1.samples = (spmSample *) g108_Kalimba_4F_AIF_1Samples;
  gPerculate_C6_1.samples = (spmSample *) gPerculate_C6_1Samples;
  g011_Vibes_5FS_1.samples = (spmSample *) g011_Vibes_5FS_1Samples;
  g048_Strings2_3C_1.samples = (spmSample *) g048_Strings2_3C_1Samples;
  gswheeLo_1.samples = (spmSample *) gswheeLo_1Samples;
  gSopSax_G2_1.samples = (spmSample *) gSopSax_G2_1Samples;
  g082_Calliope_4G_1.samples = (spmSample *) g082_Calliope_4G_1Samples;
  gAcSnare_DFH_Sensi_1.samples = (spmSample *) gAcSnare_DFH_Sensi_1Samples;
  gPiano_Grand_073_1.samples = (spmSample *) gPiano_Grand_073_1Samples;
  gShak_Sculpt_G1_1.samples = (spmSample *) gShak_Sculpt_G1_1Samples;
  gtremelo2_1.samples = (spmSample *) gtremelo2_1Samples;
  gSopSax_A3_1.samples = (spmSample *) gSopSax_A3_1Samples;
  g010_MscBox_4A_1.samples = (spmSample *) g010_MscBox_4A_1Samples;
  gCrea_C3_2.samples = (spmSample *) gCrea_C3_2Samples;
  g061_BrssSectSyn_5C_1.samples = (spmSample *) g061_BrssSectSyn_5C_1Samples;
  gB3_Lead_D4_1.samples = (spmSample *) gB3_Lead_D4_1Samples;
  gFlu_Logic_C3_1.samples = (spmSample *) gFlu_Logic_C3_1Samples;
  g126_GenDrum_n76_1.samples = (spmSample *) g126_GenDrum_n76_1Samples;
  g004_EP_Dry_3E_1.samples = (spmSample *) g004_EP_Dry_3E_1Samples;
  gChOrgan_C3_1.samples = (spmSample *) gChOrgan_C3_1Samples;
  g010_MscBox_3AS_1.samples = (spmSample *) g010_MscBox_3AS_1Samples;
  gDGuitar_Staccato_B3_1.samples = (spmSample *) gDGuitar_Staccato_B3_1Samples;
  gJazzGuitar_D3_1.samples = (spmSample *) gJazzGuitar_D3_1Samples;
  g004_EP_Dry_4GS_1.samples = (spmSample *) g004_EP_Dry_4GS_1Samples;
  gSaxAlto_061_1.samples = (spmSample *) gSaxAlto_061_1Samples;
  gGlock_FS6_1.samples = (spmSample *) gGlock_FS6_1Samples;
  gboomSq3_1.samples = (spmSample *) gboomSq3_1Samples;
  gDulcimer_C2_1.samples = (spmSample *) gDulcimer_C2_1Samples;
  gKoto_C4_1.samples = (spmSample *) gKoto_C4_1Samples;
  gB3_Lead_B4_1.samples = (spmSample *) gB3_Lead_B4_1Samples;
  g010_MscBox_4F_1.samples = (spmSample *) g010_MscBox_4F_1Samples;
  g104_Sitar_Fat_3C_1.samples = (spmSample *) g104_Sitar_Fat_3C_1Samples;
  gSaxAlto_067_1.samples = (spmSample *) gSaxAlto_067_1Samples;
  gLongGuiro_1.samples = (spmSample *) gLongGuiro_1Samples;
  gGuitar_Nylon_082_1.samples = (spmSample *) gGuitar_Nylon_082_1Samples;
  gViola_Bowed_075_1.samples = (spmSample *) gViola_Bowed_075_1Samples;
  gRide2_DFH_EQ_1.samples = (spmSample *) gRide2_DFH_EQ_1Samples;
  g061_BrssSctWrmSyn_2C_1.samples = (spmSample *) g061_BrssSctWrmSyn_2C_1Samples;
  gOboe_67_1.samples = (spmSample *) gOboe_67_1Samples;
  g061_BrssSctWrmSyn_0GS_1.samples = (spmSample *) g061_BrssSctWrmSyn_0GS_1Samples;
  gODGuitar_VSL_F_4_1.samples = (spmSample *) gODGuitar_VSL_F_4_1Samples;
  g028_FunkMute_3E_AIF_1.samples = (spmSample *) g028_FunkMute_3E_AIF_1Samples;
  gCrea_D4_1.samples = (spmSample *) gCrea_D4_1Samples;
  gAcGuitarHarm_D3_1.samples = (spmSample *) gAcGuitarHarm_D3_1Samples;
  gClarinet_064_1.samples = (spmSample *) gClarinet_064_1Samples;
  gRide1_DFH_EQ_1.samples = (spmSample *) gRide1_DFH_EQ_1Samples;
  gAccordion_Boss_5C_1.samples = (spmSample *) gAccordion_Boss_5C_1Samples;
  g004_EP_Soft_2C_1.samples = (spmSample *) g004_EP_Soft_2C_1Samples;
  gSynthStrings2_D3_1.samples = (spmSample *) gSynthStrings2_D3_1Samples;
  gPanFlut_Sculp_C4_1.samples = (spmSample *) gPanFlut_Sculp_C4_1Samples;
  gGuitar_Steel_055_1.samples = (spmSample *) gGuitar_Steel_055_1Samples;
  gPerculate_C1_1.samples = (spmSample *) gPerculate_C1_1Samples;
  gPerculate_C3_1.samples = (spmSample *) gPerculate_C3_1Samples;
  gXY_C7_1.samples = (spmSample *) gXY_C7_1Samples;
  gLongWhistle_1.samples = (spmSample *) gLongWhistle_1Samples;
  gPiano_Grand_031_1.samples = (spmSample *) gPiano_Grand_031_1Samples;
  gReedOrgan_F4_1.samples = (spmSample *) gReedOrgan_F4_1Samples;
  g070_Bassoon_3G_1.samples = (spmSample *) g070_Bassoon_3G_1Samples;
  gDGuitar_Muted_B3_1.samples = (spmSample *) gDGuitar_Muted_B3_1Samples;
  gJazzGuitar_G2_1.samples = (spmSample *) gJazzGuitar_G2_1Samples;
  gLoTom_DFH_Tom3_1.samples = (spmSample *) gLoTom_DFH_Tom3_1Samples;
  g004_EP_Soft_3C_1.samples = (spmSample *) g004_EP_Soft_3C_1Samples;
  g070_Bassoon_2E_1.samples = (spmSample *) g070_Bassoon_2E_1Samples;
  gDrawbarOrgan_G3_1.samples = (spmSample *) gDrawbarOrgan_G3_1Samples;
  gDulcimer_C5_1.samples = (spmSample *) gDulcimer_C5_1Samples;
  g061_BrssSectSyn_2C_1.samples = (spmSample *) g061_BrssSectSyn_2C_1Samples;
  gSynthBass2_G2_1.samples = (spmSample *) gSynthBass2_G2_1Samples;
  gViola_Bowed_060_1.samples = (spmSample *) gViola_Bowed_060_1Samples;
  gCrash1_DFH_EQ_1.samples = (spmSample *) gCrash1_DFH_EQ_1Samples;
  gFlu_Logic_C2wav_1.samples = (spmSample *) gFlu_Logic_C2wav_1Samples;
  gB3_G4_1.samples = (spmSample *) gB3_G4_1Samples;
  gSopSax_C2_1.samples = (spmSample *) gSopSax_C2_1Samples;
  gMuteHiConga_2.samples = (spmSample *) gMuteHiConga_2Samples;
  gCello_Bowed_048_1.samples = (spmSample *) gCello_Bowed_048_1Samples;
  gXY_C3_1.samples = (spmSample *) gXY_C3_1Samples;
  g108_Kalimba_4C_AIF_1.samples = (spmSample *) g108_Kalimba_4C_AIF_1Samples;
  g058_Tuba_3F_AIF_1.samples = (spmSample *) g058_Tuba_3F_AIF_1Samples;
  gLoWoodBlock_1.samples = (spmSample *) gLoWoodBlock_1Samples;
  gHiTimbale_1.samples = (spmSample *) gHiTimbale_1Samples;
  g007_Clav_2C_1.samples = (spmSample *) g007_Clav_2C_1Samples;
  g011_Vibes_6FS_1.samples = (spmSample *) g011_Vibes_6FS_1Samples;
  gXY_C6_1.samples = (spmSample *) gXY_C6_1Samples;
  gClarinet_076_1.samples = (spmSample *) gClarinet_076_1Samples;
  gClsd_HiHat_DFH_EQ_1.samples = (spmSample *) gClsd_HiHat_DFH_EQ_1Samples;
  gLoMidTom_DFH_Tom2_1.samples = (spmSample *) gLoMidTom_DFH_Tom2_1Samples;
  gPiano_HonkyTonk_C2_1.samples = (spmSample *) gPiano_HonkyTonk_C2_1Samples;
  g007_Clav_3C_1.samples = (spmSample *) g007_Clav_3C_1Samples;
  gNN_Nu2_C_VoxT_1.samples = (spmSample *) gNN_Nu2_C_VoxT_1Samples;
  gAccordion_Casio_3E_1.samples = (spmSample *) gAccordion_Casio_3E_1Samples;
  g061_BrssSect_3C_1.samples = (spmSample *) g061_BrssSect_3C_1Samples;
  gODGuitar_VSL_F3_1.samples = (spmSample *) gODGuitar_VSL_F3_1Samples;
  gSaxAlto_079_1.samples = (spmSample *) gSaxAlto_079_1Samples;
  gSopSax_D3_1.samples = (spmSample *) gSopSax_D3_1Samples;
  gODGuitar_VSL_F5_1.samples = (spmSample *) gODGuitar_VSL_F5_1Samples;
  gDGuitar_Muted_F4_1.samples = (spmSample *) gDGuitar_Muted_F4_1Samples;
  g007_Clav_4C_1.samples = (spmSample *) g007_Clav_4C_1Samples;
  gSlapBass2_C3_1.samples = (spmSample *) gSlapBass2_C3_1Samples;
  gDrawbarOrgan_C3_1.samples = (spmSample *) gDrawbarOrgan_C3_1Samples;
  gViolin_Bowed_056_1.samples = (spmSample *) gViolin_Bowed_056_1Samples;
  gHiConga_1.samples = (spmSample *) gHiConga_1Samples;
  gCrea_D2_1.samples = (spmSample *) gCrea_D2_1Samples;
  gGlock_G5_1.samples = (spmSample *) gGlock_G5_1Samples;
  gSlapBass2_C2_1.samples = (spmSample *) gSlapBass2_C2_1Samples;
  gGuitar_Nylon_067_1.samples = (spmSample *) gGuitar_Nylon_067_1Samples;
  gODGuitar_VSL_B2_1.samples = (spmSample *) gODGuitar_VSL_B2_1Samples;
  gHiMidTom_DFH_Tom1_1.samples = (spmSample *) gHiMidTom_DFH_Tom1_1Samples;
  g058_Tuba_2C_AIF_1.samples = (spmSample *) g058_Tuba_2C_AIF_1Samples;
  g004_EP_Dry_2C_1.samples = (spmSample *) g004_EP_Dry_2C_1Samples;
  gDoubleBass_D2_1.samples = (spmSample *) gDoubleBass_D2_1Samples;
  gFlu_Logic_C1_1.samples = (spmSample *) gFlu_Logic_C1_1Samples;
  gDGuitar_Staccato_B1_1.samples = (spmSample *) gDGuitar_Staccato_B1_1Samples;
  gShamisen_C4_1.samples = (spmSample *) gShamisen_C4_1Samples;
  g066_TenorSax_2FS_AIF_1.samples = (spmSample *) g066_TenorSax_2FS_AIF_1Samples;
  g026_CleanElecGtr_2_3E_1.samples = (spmSample *) g026_CleanElecGtr_2_3E_1Samples;
  gViolin_Bowed_088_1.samples = (spmSample *) gViolin_Bowed_088_1Samples;
  gLoFlrTom_DFH_Tom5_1.samples = (spmSample *) gLoFlrTom_DFH_Tom5_1Samples;
  g061_BrssSectSyn_4E_1.samples = (spmSample *) g061_BrssSectSyn_4E_1Samples;
  gDGuitar_Scrape_B3_1.samples = (spmSample *) gDGuitar_Scrape_B3_1Samples;
  gHiWoodBlock_1.samples = (spmSample *) gHiWoodBlock_1Samples;
  g048_StringEns_3C_1.samples = (spmSample *) g048_StringEns_3C_1Samples;
  gCrea_C1_4.samples = (spmSample *) gCrea_C1_4Samples;
  gDoubleBass_G1_1.samples = (spmSample *) gDoubleBass_G1_1Samples;
  g012_Marimba_4E_1.samples = (spmSample *) g012_Marimba_4E_1Samples;
  g061_BrssSect_4GS_1.samples = (spmSample *) g061_BrssSect_4GS_1Samples;
  gLoCuica_1.samples = (spmSample *) gLoCuica_1Samples;
  gDulcimer_C4_1.samples = (spmSample *) gDulcimer_C4_1Samples;
  gFrHorn_G2_1.samples = (spmSample *) gFrHorn_G2_1Samples;
  gDGuitar_Staccato_B5_1.samples = (spmSample *) gDGuitar_Staccato_B5_1Samples;
  gboomSq2_1.samples = (spmSample *) gboomSq2_1Samples;
  gCabasa_1.samples = (spmSample *) gCabasa_1Samples;
  gSynthBop_C5_GamBy_1.samples = (spmSample *) gSynthBop_C5_GamBy_1Samples;
  gSynthStrings_C2_1.samples = (spmSample *) gSynthStrings_C2_1Samples;
  gHiAgogo_1.samples = (spmSample *) gHiAgogo_1Samples;
  gOboe_58_2.samples = (spmSample *) gOboe_58_2Samples;
  gSlapBass2_C4_1.samples = (spmSample *) gSlapBass2_C4_1Samples;
  gMiniMeMoog_D3_1.samples = (spmSample *) gMiniMeMoog_D3_1Samples;
  gDGuitar_Muted_F5_1.samples = (spmSample *) gDGuitar_Muted_F5_1Samples;
  gXY_C4_1.samples = (spmSample *) gXY_C4_1Samples;
  g061_BrssSect_4C_1.samples = (spmSample *) g061_BrssSect_4C_1Samples;
  gboomSq1_1.samples = (spmSample *) gboomSq1_1Samples;
  gPerculate_C4_1.samples = (spmSample *) gPerculate_C4_1Samples;
  g048_StringEns_4C_1.samples = (spmSample *) g048_StringEns_4C_1Samples;
  gKittySynth2_C2_1.samples = (spmSample *) gKittySynth2_C2_1Samples;
  g011_Vibes_4FS_1.samples = (spmSample *) g011_Vibes_4FS_1Samples;
  g066_TenorSax_4C_AIF_1.samples = (spmSample *) g066_TenorSax_4C_AIF_1Samples;
  gChOrgan_C2_1.samples = (spmSample *) gChOrgan_C2_1Samples;
  gAcoustBass_BossOD_3E_1.samples = (spmSample *) gAcoustBass_BossOD_3E_1Samples;
  gKoto_C3_1.samples = (spmSample *) gKoto_C3_1Samples;
  g048_StringEns_2C_1.samples = (spmSample *) g048_StringEns_2C_1Samples;
  gHiBongo_1.samples = (spmSample *) gHiBongo_1Samples;
  gAcGuitarHarmA3_1.samples = (spmSample *) gAcGuitarHarmA3_1Samples;
  gHarp_Casio_4E_1.samples = (spmSample *) gHarp_Casio_4E_1Samples;
  gPiano_Grand_085_1.samples = (spmSample *) gPiano_Grand_085_1Samples;
  gSynthBop_C6_GamBy_1.samples = (spmSample *) gSynthBop_C6_GamBy_1Samples;
  g022_Harm_3C_1.samples = (spmSample *) g022_Harm_3C_1Samples;
  gVibraslap_1.samples = (spmSample *) gVibraslap_1Samples;
  gChOrgan_C5_1.samples = (spmSample *) gChOrgan_C5_1Samples;
  gTrumpet_Mute_84_1.samples = (spmSample *) gTrumpet_Mute_84_1Samples;
  gSaxAlto_055_1.samples = (spmSample *) gSaxAlto_055_1Samples;
  gShortWhistle_1.samples = (spmSample *) gShortWhistle_1Samples;
  gChOrgan_C8_1.samples = (spmSample *) gChOrgan_C8_1Samples;
  gShak_Sculpt_C4_1.samples = (spmSample *) gShak_Sculpt_C4_1Samples;
  gSynthStrings2_G2_1.samples = (spmSample *) gSynthStrings2_G2_1Samples;
  gCrea_C3_3.samples = (spmSample *) gCrea_C3_3Samples;
  gKoto_C5_1.samples = (spmSample *) gKoto_C5_1Samples;
  gGuitar_Nylon_055_1.samples = (spmSample *) gGuitar_Nylon_055_1Samples;
  gSynthBop_C3_GamBy_1.samples = (spmSample *) gSynthBop_C3_GamBy_1Samples;
  gHandClap_Emagic_1.samples = (spmSample *) gHandClap_Emagic_1Samples;
  g010_MscBox_5D_1.samples = (spmSample *) g010_MscBox_5D_1Samples;
  g022_Harm_4GS_1.samples = (spmSample *) g022_Harm_4GS_1Samples;
  gAcGuitarHarmE4_1.samples = (spmSample *) gAcGuitarHarmE4_1Samples;
  gChOrgan_C7_1.samples = (spmSample *) gChOrgan_C7_1Samples;
  gChinaCym_DFH_EQ_1.samples = (spmSample *) gChinaCym_DFH_EQ_1Samples;
  gShortGuiro_1.samples = (spmSample *) gShortGuiro_1Samples;
  gLowAgogo_1.samples = (spmSample *) gLowAgogo_1Samples;
  gDGuitar_Scrape_B2_1.samples = (spmSample *) gDGuitar_Scrape_B2_1Samples;
  gMiniMeMoog_C2_1.samples = (spmSample *) gMiniMeMoog_C2_1Samples;
  gCrea_C1_1.samples = (spmSample *) gCrea_C1_1Samples;
  g004_EP_Soft_4C_1.samples = (spmSample *) g004_EP_Soft_4C_1Samples;
  gSynthBass2_D3_1.samples = (spmSample *) gSynthBass2_D3_1Samples;
  gAcoustBass_BossOD_2E_1.samples = (spmSample *) gAcoustBass_BossOD_2E_1Samples;
  gOrchHitz_Boss_4AS_1.samples = (spmSample *) gOrchHitz_Boss_4AS_1Samples;
  gAcGuitarHarm_G2_1.samples = (spmSample *) gAcGuitarHarm_G2_1Samples;
  g066_TenorSax_3C_AIF_1.samples = (spmSample *) g066_TenorSax_3C_AIF_1Samples;
  gHarp_Casio_6C_1.samples = (spmSample *) gHarp_Casio_6C_1Samples;
  g057_Trombone_3E_1.samples = (spmSample *) g057_Trombone_3E_1Samples;
  gReedOrgan_F6_1.samples = (spmSample *) gReedOrgan_F6_1Samples;
  g004_EP_Soft_6C_1.samples = (spmSample *) g004_EP_Soft_6C_1Samples;
  g057_Trombone_2E_1.samples = (spmSample *) g057_Trombone_2E_1Samples;
  gswhee3_1.samples = (spmSample *) gswhee3_1Samples;
  gSplash_DFH_EQ_1.samples = (spmSample *) gSplash_DFH_EQ_1Samples;
  gHiFlrTom_DFH_Tom4_1.samples = (spmSample *) gHiFlrTom_DFH_Tom4_1Samples;
  gGuitar_Steel_079_1.samples = (spmSample *) gGuitar_Steel_079_1Samples;
  gCowbell_1.samples = (spmSample *) gCowbell_1Samples;
  gTrumpet_Mute_57_1.samples = (spmSample *) gTrumpet_Mute_57_1Samples;
  gPiano_HonkyTonk_D3_1.samples = (spmSample *) gPiano_HonkyTonk_D3_1Samples;
  gJazzGuitar_A3_1.samples = (spmSample *) gJazzGuitar_A3_1Samples;
  gShak_Sculpt_C1_1.samples = (spmSample *) gShak_Sculpt_C1_1Samples;
  gFlu_Logic_C5_1.samples = (spmSample *) gFlu_Logic_C5_1Samples;
  gChOrgan_C4_1.samples = (spmSample *) gChOrgan_C4_1Samples;
  gGuitar_Steel_040_1.samples = (spmSample *) gGuitar_Steel_040_1Samples;
  gDGuitar_Staccato_B4_1.samples = (spmSample *) gDGuitar_Staccato_B4_1Samples;
  gDulcimer_C6_1.samples = (spmSample *) gDulcimer_C6_1Samples;
  gTambourine_1.samples = (spmSample *) gTambourine_1Samples;
  gKoto_C6_1.samples = (spmSample *) gKoto_C6_1Samples;
  g066_TenorSax_4FS_AIF_1.samples = (spmSample *) g066_TenorSax_4FS_AIF_1Samples;
  gViolin_Bowed_085_1.samples = (spmSample *) gViolin_Bowed_085_1Samples;
  gDGuitar_Muted_B2_1.samples = (spmSample *) gDGuitar_Muted_B2_1Samples;
  gTrumpet_74_1.samples = (spmSample *) gTrumpet_74_1Samples;
  gDoubleBass_A2_1.samples = (spmSample *) gDoubleBass_A2_1Samples;
  gDGuitar_Staccato_F3_1.samples = (spmSample *) gDGuitar_Staccato_F3_1Samples;
  gFrHorn_C2_1.samples = (spmSample *) gFrHorn_C2_1Samples;
  gPerculate_C2_1.samples = (spmSample *) gPerculate_C2_1Samples;
  gReedOrgan_F3_1.samples = (spmSample *) gReedOrgan_F3_1Samples;
  gViola_Bowed_048_1.samples = (spmSample *) gViola_Bowed_048_1Samples;
  gFretlessBass_D3_1.samples = (spmSample *) gFretlessBass_D3_1Samples;
  gOboe_78_1.samples = (spmSample *) gOboe_78_1Samples;
  g061_BrssSect_1GS_1.samples = (spmSample *) g061_BrssSect_1GS_1Samples;
#endif

  gLoFlrTom_Regions[0].table = &gLoFlrTom_DFH_Tom5_1;
  gLoFlrTom_Set.numTables = 1;
  gLoFlrTom_Set.regions = (WaveSetRegion_t *)gLoFlrTom_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoFlrTom_Set, SPMIDI_WAVESET_LoFlrTom );

  gClaves_Regions[0].table = &gClaves_1;
  gClaves_Set.numTables = 1;
  gClaves_Set.regions = (WaveSetRegion_t *)gClaves_Regions;
  WaveManager_AddWaveSet( waveManager, &gClaves_Set, SPMIDI_WAVESET_Claves );

  gOpenHiHat_Regions[0].table = &gOpen_HiHat_DFH_EQ_1;
  gOpenHiHat_Set.numTables = 1;
  gOpenHiHat_Set.regions = (WaveSetRegion_t *)gOpenHiHat_Regions;
  WaveManager_AddWaveSet( waveManager, &gOpenHiHat_Set, SPMIDI_WAVESET_OpenHiHat );

  gCelloBowed_Mob_Regions[0].table = &gCello_Bowed_036_1;
  gCelloBowed_Mob_Regions[1].table = &gCello_Bowed_048_1;
  gCelloBowed_Mob_Regions[2].table = &gCello_Bowed_057_1;
  gCelloBowed_Mob_Regions[3].table = &gCello_Bowed_066_1;
  gCelloBowed_Mob_Set.numTables = 4;
  gCelloBowed_Mob_Set.regions = (WaveSetRegion_t *)gCelloBowed_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gCelloBowed_Mob_Set, SPMIDI_WAVESET_CelloBowed_Mob );

  gElectricPiano_Dry_Regions[0].table = &g004_EP_Dry_2C_1;
  gElectricPiano_Dry_Regions[1].table = &g004_EP_Dry_3E_1;
  gElectricPiano_Dry_Regions[2].table = &g004_EP_Dry_4GS_1;
  gElectricPiano_Dry_Regions[3].table = &g004_EP_Dry_6C_1;
  gElectricPiano_Dry_Set.numTables = 4;
  gElectricPiano_Dry_Set.regions = (WaveSetRegion_t *)gElectricPiano_Dry_Regions;
  WaveManager_AddWaveSet( waveManager, &gElectricPiano_Dry_Set, SPMIDI_WAVESET_ElectricPiano_Dry );

  gHiCuica_Regions[0].table = &gHiCuica_1;
  gHiCuica_Set.numTables = 1;
  gHiCuica_Set.regions = (WaveSetRegion_t *)gHiCuica_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiCuica_Set, SPMIDI_WAVESET_HiCuica );

  gSlapBass2_BassLegends_Regions[0].table = &gSlapBass2_C1_1;
  gSlapBass2_BassLegends_Regions[1].table = &gSlapBass2_C2_1;
  gSlapBass2_BassLegends_Regions[2].table = &gSlapBass2_C3_1;
  gSlapBass2_BassLegends_Regions[3].table = &gSlapBass2_C4_1;
  gSlapBass2_BassLegends_Set.numTables = 4;
  gSlapBass2_BassLegends_Set.regions = (WaveSetRegion_t *)gSlapBass2_BassLegends_Regions;
  WaveManager_AddWaveSet( waveManager, &gSlapBass2_BassLegends_Set, SPMIDI_WAVESET_SlapBass2_BassLegends );

  gBump_GameboySynth_Regions[0].table = &gSynthBop_C1_GamBy_1;
  gBump_GameboySynth_Regions[1].table = &gSynthBop_C2_GamBy_1;
  gBump_GameboySynth_Regions[2].table = &gSynthBop_C3_GamBy_1;
  gBump_GameboySynth_Regions[3].table = &gSynthBop_C4_GamBy_1;
  gBump_GameboySynth_Regions[4].table = &gSynthBop_C5_GamBy_1;
  gBump_GameboySynth_Regions[5].table = &gSynthBop_C6_GamBy_1;
  gBump_GameboySynth_Set.numTables = 6;
  gBump_GameboySynth_Set.regions = (WaveSetRegion_t *)gBump_GameboySynth_Regions;
  WaveManager_AddWaveSet( waveManager, &gBump_GameboySynth_Set, SPMIDI_WAVESET_Bump_GameboySynth );

  gKalimba_LP_Regions[0].table = &g108_Kalimba_4C_AIF_1;
  gKalimba_LP_Regions[1].table = &g108_Kalimba_4F_AIF_1;
  gKalimba_LP_Set.numTables = 2;
  gKalimba_LP_Set.regions = (WaveSetRegion_t *)gKalimba_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gKalimba_LP_Set, SPMIDI_WAVESET_Kalimba_LP );

  gBassoon_LP_Regions[0].table = &g070_Bassoon_2E_1;
  gBassoon_LP_Regions[1].table = &g070_Bassoon_3G_1;
  gBassoon_LP_Regions[2].table = &g070_Bassoon_4F_1;
  gBassoon_LP_Set.numTables = 3;
  gBassoon_LP_Set.regions = (WaveSetRegion_t *)gBassoon_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gBassoon_LP_Set, SPMIDI_WAVESET_Bassoon_LP );

  gHiTimbale_Regions[0].table = &gHiTimbale_1;
  gHiTimbale_Set.numTables = 1;
  gHiTimbale_Set.regions = (WaveSetRegion_t *)gHiTimbale_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiTimbale_Set, SPMIDI_WAVESET_HiTimbale );

  gHiConga_Regions[0].table = &gHiConga_1;
  gHiConga_Set.numTables = 1;
  gHiConga_Set.regions = (WaveSetRegion_t *)gHiConga_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiConga_Set, SPMIDI_WAVESET_HiConga );

  gSaxAlto_Mob_Regions[0].table = &gSaxAlto_049_1;
  gSaxAlto_Mob_Regions[1].table = &gSaxAlto_055_1;
  gSaxAlto_Mob_Regions[2].table = &gSaxAlto_061_1;
  gSaxAlto_Mob_Regions[3].table = &gSaxAlto_067_1;
  gSaxAlto_Mob_Regions[4].table = &gSaxAlto_073_1;
  gSaxAlto_Mob_Regions[5].table = &gSaxAlto_079_1;
  gSaxAlto_Mob_Set.numTables = 6;
  gSaxAlto_Mob_Set.regions = (WaveSetRegion_t *)gSaxAlto_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gSaxAlto_Mob_Set, SPMIDI_WAVESET_SaxAlto_Mob );

  gDrawbarOrgan_Regions[0].table = &gDrawbarOrgan_C3_1;
  gDrawbarOrgan_Regions[1].table = &gDrawbarOrgan_G3_1;
  gDrawbarOrgan_Regions[2].table = &gDrawbarOrgan_D4_1;
  gDrawbarOrgan_Regions[3].table = &gDrawbarOrgan_A5_1;
  gDrawbarOrgan_Set.numTables = 4;
  gDrawbarOrgan_Set.regions = (WaveSetRegion_t *)gDrawbarOrgan_Regions;
  WaveManager_AddWaveSet( waveManager, &gDrawbarOrgan_Set, SPMIDI_WAVESET_DrawbarOrgan );

  gShamisen_Banjo_Regions[0].table = &gShamisen_C3_1;
  gShamisen_Banjo_Regions[1].table = &gShamisen_C4_1;
  gShamisen_Banjo_Regions[2].table = &gShamisen_C5_1;
  gShamisen_Banjo_Regions[3].table = &gShamisen_C6_1;
  gShamisen_Banjo_Set.numTables = 4;
  gShamisen_Banjo_Set.regions = (WaveSetRegion_t *)gShamisen_Banjo_Regions;
  WaveManager_AddWaveSet( waveManager, &gShamisen_Banjo_Set, SPMIDI_WAVESET_Shamisen_Banjo );

  gOboe_Mob_Regions[0].table = &gOboe_58_2;
  gOboe_Mob_Regions[1].table = &gOboe_67_1;
  gOboe_Mob_Regions[2].table = &gOboe_78_1;
  gOboe_Mob_Set.numTables = 3;
  gOboe_Mob_Set.regions = (WaveSetRegion_t *)gOboe_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gOboe_Mob_Set, SPMIDI_WAVESET_Oboe_Mob );

  gSopranoSax_Regions[0].table = &gSopSax_C2_1;
  gSopranoSax_Regions[1].table = &gSopSax_G2_1;
  gSopranoSax_Regions[2].table = &gSopSax_D3_1;
  gSopranoSax_Regions[3].table = &gSopSax_A3_1;
  gSopranoSax_Set.numTables = 4;
  gSopranoSax_Set.regions = (WaveSetRegion_t *)gSopranoSax_Regions;
  WaveManager_AddWaveSet( waveManager, &gSopranoSax_Set, SPMIDI_WAVESET_SopranoSax );

  gHiAgogo_Regions[0].table = &gHiAgogo_1;
  gHiAgogo_Set.numTables = 1;
  gHiAgogo_Set.regions = (WaveSetRegion_t *)gHiAgogo_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiAgogo_Set, SPMIDI_WAVESET_HiAgogo );

  gCalliope_LP_Regions[0].table = &g082_Calliope_4G_1;
  gCalliope_LP_Set.numTables = 1;
  gCalliope_LP_Set.regions = (WaveSetRegion_t *)gCalliope_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gCalliope_LP_Set, SPMIDI_WAVESET_Calliope_LP );

  gStringEns2_EXS_Regions[0].table = &g048_Strings2_2C_1;
  gStringEns2_EXS_Regions[1].table = &g048_Strings2_3C_1;
  gStringEns2_EXS_Regions[2].table = &g048_Strings2_4E_1;
  gStringEns2_EXS_Set.numTables = 3;
  gStringEns2_EXS_Set.regions = (WaveSetRegion_t *)gStringEns2_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gStringEns2_EXS_Set, SPMIDI_WAVESET_StringEns2_EXS );

  gwank_LeapstrArcade_5_11_Regions[0].table = &gwank1_1;
  gwank_LeapstrArcade_5_11_Set.numTables = 1;
  gwank_LeapstrArcade_5_11_Set.regions = (WaveSetRegion_t *)gwank_LeapstrArcade_5_11_Regions;
  WaveManager_AddWaveSet( waveManager, &gwank_LeapstrArcade_5_11_Set, SPMIDI_WAVESET_wank_LeapstrArcade_5_11 );

  gCowbell_Regions[0].table = &gCowbell_1;
  gCowbell_Set.numTables = 1;
  gCowbell_Set.regions = (WaveSetRegion_t *)gCowbell_Regions;
  WaveManager_AddWaveSet( waveManager, &gCowbell_Set, SPMIDI_WAVESET_Cowbell );

  gDATpolitics_Regions[0].table = &gCrea_C1_4;
  gDATpolitics_Regions[1].table = &gCrea_C3_3;
  gDATpolitics_Regions[2].table = &gCrea_C1_3;
  gDATpolitics_Regions[3].table = &gCrea_D2_1;
  gDATpolitics_Regions[4].table = &gCrea_C3_2;
  gDATpolitics_Regions[5].table = &gCrea_D4_1;
  gDATpolitics_Set.numTables = 6;
  gDATpolitics_Set.regions = (WaveSetRegion_t *)gDATpolitics_Regions;
  WaveManager_AddWaveSet( waveManager, &gDATpolitics_Set, SPMIDI_WAVESET_DATpolitics );

  gSidestick_Regions[0].table = &gSidestick_NoblCooleyM_1;
  gSidestick_Set.numTables = 1;
  gSidestick_Set.regions = (WaveSetRegion_t *)gSidestick_Regions;
  WaveManager_AddWaveSet( waveManager, &gSidestick_Set, SPMIDI_WAVESET_Sidestick );

  gHiBongo_Regions[0].table = &gHiBongo_1;
  gHiBongo_Set.numTables = 1;
  gHiBongo_Set.regions = (WaveSetRegion_t *)gHiBongo_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiBongo_Set, SPMIDI_WAVESET_HiBongo );

  gDulcimer_EXS12Str_Regions[0].table = &gDulcimer_C2_1;
  gDulcimer_EXS12Str_Regions[1].table = &gDulcimer_C3_1;
  gDulcimer_EXS12Str_Regions[2].table = &gDulcimer_C4_1;
  gDulcimer_EXS12Str_Regions[3].table = &gDulcimer_C5_1;
  gDulcimer_EXS12Str_Regions[4].table = &gDulcimer_C6_1;
  gDulcimer_EXS12Str_Set.numTables = 5;
  gDulcimer_EXS12Str_Set.regions = (WaveSetRegion_t *)gDulcimer_EXS12Str_Regions;
  WaveManager_AddWaveSet( waveManager, &gDulcimer_EXS12Str_Set, SPMIDI_WAVESET_Dulcimer_EXS12Str );

  gAcBassDrum_Regions[0].table = &gAcousBassDr_Erskine_1;
  gAcBassDrum_Set.numTables = 1;
  gAcBassDrum_Set.regions = (WaveSetRegion_t *)gAcBassDrum_Regions;
  WaveManager_AddWaveSet( waveManager, &gAcBassDrum_Set, SPMIDI_WAVESET_AcBassDrum );

  gBanjo_Boss_Regions[0].table = &gBanjo_Boss_3G_1;
  gBanjo_Boss_Regions[1].table = &gBanjo_Boss_4G_1;
  gBanjo_Boss_Set.numTables = 2;
  gBanjo_Boss_Set.regions = (WaveSetRegion_t *)gBanjo_Boss_Regions;
  WaveManager_AddWaveSet( waveManager, &gBanjo_Boss_Set, SPMIDI_WAVESET_Banjo_Boss );

  gLongGuiro_Regions[0].table = &gLongGuiro_1;
  gLongGuiro_Set.numTables = 1;
  gLongGuiro_Set.regions = (WaveSetRegion_t *)gLongGuiro_Regions;
  WaveManager_AddWaveSet( waveManager, &gLongGuiro_Set, SPMIDI_WAVESET_LongGuiro );

  gOrchHitz_Boss_Regions[0].table = &gOrchHitz_Boss_4AS_1;
  gOrchHitz_Boss_Set.numTables = 1;
  gOrchHitz_Boss_Set.regions = (WaveSetRegion_t *)gOrchHitz_Boss_Regions;
  WaveManager_AddWaveSet( waveManager, &gOrchHitz_Boss_Set, SPMIDI_WAVESET_OrchHitz_Boss );

  gHiFlrTom_Regions[0].table = &gHiFlrTom_DFH_Tom4_1;
  gHiFlrTom_Set.numTables = 1;
  gHiFlrTom_Set.regions = (WaveSetRegion_t *)gHiFlrTom_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiFlrTom_Set, SPMIDI_WAVESET_HiFlrTom );

  gClarinet_Mob_Regions[0].table = &gClarinet_052_1;
  gClarinet_Mob_Regions[1].table = &gClarinet_064_1;
  gClarinet_Mob_Regions[2].table = &gClarinet_076_1;
  gClarinet_Mob_Set.numTables = 3;
  gClarinet_Mob_Set.regions = (WaveSetRegion_t *)gClarinet_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gClarinet_Mob_Set, SPMIDI_WAVESET_Clarinet_Mob );

  gMusicBox_LT_Regions[0].table = &g010_MscBox_3AS_1;
  gMusicBox_LT_Regions[1].table = &g010_MscBox_4F_1;
  gMusicBox_LT_Regions[2].table = &g010_MscBox_4A_1;
  gMusicBox_LT_Regions[3].table = &g010_MscBox_5D_1;
  gMusicBox_LT_Set.numTables = 4;
  gMusicBox_LT_Set.regions = (WaveSetRegion_t *)gMusicBox_LT_Regions;
  WaveManager_AddWaveSet( waveManager, &gMusicBox_LT_Set, SPMIDI_WAVESET_MusicBox_LT );

  gbrightlings_Jim_Regions[0].table = &gNN_Nu2_C_VoxT_1;
  gbrightlings_Jim_Regions[1].table = &gGG_Ma1_E_L5E_1;
  gbrightlings_Jim_Set.numTables = 2;
  gbrightlings_Jim_Set.regions = (WaveSetRegion_t *)gbrightlings_Jim_Regions;
  WaveManager_AddWaveSet( waveManager, &gbrightlings_Jim_Set, SPMIDI_WAVESET_brightlings_Jim );

  gAcoustBass_BossOD_Regions[0].table = &gAcoustBass_BossOD_1E_1;
  gAcoustBass_BossOD_Regions[1].table = &gAcoustBass_BossOD_2E_1;
  gAcoustBass_BossOD_Regions[2].table = &gAcoustBass_BossOD_3E_1;
  gAcoustBass_BossOD_Set.numTables = 3;
  gAcoustBass_BossOD_Set.regions = (WaveSetRegion_t *)gAcoustBass_BossOD_Regions;
  WaveManager_AddWaveSet( waveManager, &gAcoustBass_BossOD_Set, SPMIDI_WAVESET_AcoustBass_BossOD );

  gGlockenspiel_QT_Regions[0].table = &gGlock_G5_1;
  gGlockenspiel_QT_Regions[1].table = &gGlock_FS6_1;
  gGlockenspiel_QT_Set.numTables = 2;
  gGlockenspiel_QT_Set.regions = (WaveSetRegion_t *)gGlockenspiel_QT_Regions;
  WaveManager_AddWaveSet( waveManager, &gGlockenspiel_QT_Set, SPMIDI_WAVESET_Glockenspiel_QT );

  gMarimba_EXS_Regions[0].table = &g012_Marimba_3E_1;
  gMarimba_EXS_Regions[1].table = &g012_Marimba_4E_1;
  gMarimba_EXS_Regions[2].table = &g012_Marimba_5C_1;
  gMarimba_EXS_Set.numTables = 3;
  gMarimba_EXS_Set.regions = (WaveSetRegion_t *)gMarimba_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gMarimba_EXS_Set, SPMIDI_WAVESET_Marimba_EXS );

  gElectricPiano_Soft_Regions[0].table = &g004_EP_Soft_2C_1;
  gElectricPiano_Soft_Regions[1].table = &g004_EP_Soft_3C_1;
  gElectricPiano_Soft_Regions[2].table = &g004_EP_Soft_4C_1;
  gElectricPiano_Soft_Regions[3].table = &g004_EP_Soft_4GS_1;
  gElectricPiano_Soft_Regions[4].table = &g004_EP_Soft_6C_1;
  gElectricPiano_Soft_Set.numTables = 5;
  gElectricPiano_Soft_Set.regions = (WaveSetRegion_t *)gElectricPiano_Soft_Regions;
  WaveManager_AddWaveSet( waveManager, &gElectricPiano_Soft_Set, SPMIDI_WAVESET_ElectricPiano_Soft );

  gViolaBow_Mob_Regions[0].table = &gViola_Bowed_048_1;
  gViolaBow_Mob_Regions[1].table = &gViola_Bowed_060_1;
  gViolaBow_Mob_Regions[2].table = &gViola_Bowed_075_1;
  gViolaBow_Mob_Set.numTables = 3;
  gViolaBow_Mob_Set.regions = (WaveSetRegion_t *)gViolaBow_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gViolaBow_Mob_Set, SPMIDI_WAVESET_ViolaBow_Mob );

  gPercOrgan_EVB3_Regions[0].table = &gB3_Lead_D4_1;
  gPercOrgan_EVB3_Regions[1].table = &gB3_Lead_B4_1;
  gPercOrgan_EVB3_Set.numTables = 2;
  gPercOrgan_EVB3_Set.regions = (WaveSetRegion_t *)gPercOrgan_EVB3_Regions;
  WaveManager_AddWaveSet( waveManager, &gPercOrgan_EVB3_Set, SPMIDI_WAVESET_PercOrgan_EVB3 );

  gLoMidTom_Regions[0].table = &gLoMidTom_DFH_Tom2_1;
  gLoMidTom_Set.numTables = 1;
  gLoMidTom_Set.regions = (WaveSetRegion_t *)gLoMidTom_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoMidTom_Set, SPMIDI_WAVESET_LoMidTom );

  gDoubleBass_Regions[0].table = &gDoubleBass_C1_1;
  gDoubleBass_Regions[1].table = &gDoubleBass_G1_1;
  gDoubleBass_Regions[2].table = &gDoubleBass_D2_1;
  gDoubleBass_Regions[3].table = &gDoubleBass_A2_1;
  gDoubleBass_Set.numTables = 4;
  gDoubleBass_Set.regions = (WaveSetRegion_t *)gDoubleBass_Regions;
  WaveManager_AddWaveSet( waveManager, &gDoubleBass_Set, SPMIDI_WAVESET_DoubleBass );

  gPdl_HiHat_Regions[0].table = &gPdl_HiHat_DFH_EQ_1;
  gPdl_HiHat_Set.numTables = 1;
  gPdl_HiHat_Set.regions = (WaveSetRegion_t *)gPdl_HiHat_Regions;
  WaveManager_AddWaveSet( waveManager, &gPdl_HiHat_Set, SPMIDI_WAVESET_Pdl_HiHat );

  gClsd_HiHat_Regions[0].table = &gClsd_HiHat_DFH_EQ_1;
  gClsd_HiHat_Set.numTables = 1;
  gClsd_HiHat_Set.regions = (WaveSetRegion_t *)gClsd_HiHat_Regions;
  WaveManager_AddWaveSet( waveManager, &gClsd_HiHat_Set, SPMIDI_WAVESET_Clsd_HiHat );

  gLoWoodBlock_Regions[0].table = &gLoWoodBlock_1;
  gLoWoodBlock_Set.numTables = 1;
  gLoWoodBlock_Set.regions = (WaveSetRegion_t *)gLoWoodBlock_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoWoodBlock_Set, SPMIDI_WAVESET_LoWoodBlock );

  gElecSnare_Regions[0].table = &gElSnare_DFH_PiccSn_1;
  gElecSnare_Set.numTables = 1;
  gElecSnare_Set.regions = (WaveSetRegion_t *)gElecSnare_Regions;
  WaveManager_AddWaveSet( waveManager, &gElecSnare_Set, SPMIDI_WAVESET_ElecSnare );

  gLoTom_Regions[0].table = &gLoTom_DFH_Tom3_1;
  gLoTom_Set.numTables = 1;
  gLoTom_Set.regions = (WaveSetRegion_t *)gLoTom_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoTom_Set, SPMIDI_WAVESET_LoTom );

  gBassDrum_Regions[0].table = &gBassDrum1_Kick3L05_1;
  gBassDrum_Set.numTables = 1;
  gBassDrum_Set.regions = (WaveSetRegion_t *)gBassDrum_Regions;
  WaveManager_AddWaveSet( waveManager, &gBassDrum_Set, SPMIDI_WAVESET_BassDrum );

  gLoCuica_Regions[0].table = &gLoCuica_1;
  gLoCuica_Set.numTables = 1;
  gLoCuica_Set.regions = (WaveSetRegion_t *)gLoCuica_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoCuica_Set, SPMIDI_WAVESET_LoCuica );

  gtremelo_LeapsterArcade_5_11_Regions[0].table = &gtremelo1_1;
  gtremelo_LeapsterArcade_5_11_Regions[1].table = &gtremelo2_1;
  gtremelo_LeapsterArcade_5_11_Set.numTables = 2;
  gtremelo_LeapsterArcade_5_11_Set.regions = (WaveSetRegion_t *)gtremelo_LeapsterArcade_5_11_Regions;
  WaveManager_AddWaveSet( waveManager, &gtremelo_LeapsterArcade_5_11_Set, SPMIDI_WAVESET_tremelo_LeapsterArcade_5_11 );

  gVibraphone_LP_Regions[0].table = &g011_Vibes_4FS_1;
  gVibraphone_LP_Regions[1].table = &g011_Vibes_5FS_1;
  gVibraphone_LP_Regions[2].table = &g011_Vibes_6FS_1;
  gVibraphone_LP_Set.numTables = 3;
  gVibraphone_LP_Set.regions = (WaveSetRegion_t *)gVibraphone_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gVibraphone_LP_Set, SPMIDI_WAVESET_Vibraphone_LP );

  gStringEns1_EXS_Regions[0].table = &g048_StringEns_2C_1;
  gStringEns1_EXS_Regions[1].table = &g048_StringEns_3C_1;
  gStringEns1_EXS_Regions[2].table = &g048_StringEns_4C_1;
  gStringEns1_EXS_Regions[3].table = &g048_Strings2_4GS_1;
  gStringEns1_EXS_Set.numTables = 4;
  gStringEns1_EXS_Set.regions = (WaveSetRegion_t *)gStringEns1_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gStringEns1_EXS_Set, SPMIDI_WAVESET_StringEns1_EXS );

  gShortWhistle_Regions[0].table = &gShortWhistle_1;
  gShortWhistle_Set.numTables = 1;
  gShortWhistle_Set.regions = (WaveSetRegion_t *)gShortWhistle_Regions;
  WaveManager_AddWaveSet( waveManager, &gShortWhistle_Set, SPMIDI_WAVESET_ShortWhistle );

  gLoConga_Regions[0].table = &gLowConga_1;
  gLoConga_Set.numTables = 1;
  gLoConga_Set.regions = (WaveSetRegion_t *)gLoConga_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoConga_Set, SPMIDI_WAVESET_LoConga );

  gkitty_5_11_Regions[0].table = &gPurr_1;
  gkitty_5_11_Regions[1].table = &gKittySynth2_C2_1;
  gkitty_5_11_Regions[2].table = &gKittySynth2_C3_1;
  gkitty_5_11_Regions[3].table = &gKittySynth_G2_1;
  gkitty_5_11_Set.numTables = 4;
  gkitty_5_11_Set.regions = (WaveSetRegion_t *)gkitty_5_11_Regions;
  WaveManager_AddWaveSet( waveManager, &gkitty_5_11_Set, SPMIDI_WAVESET_kitty_5_11 );

  gShakuhachi_Sculptur_Regions[0].table = &gShak_Sculpt_C1_1;
  gShakuhachi_Sculptur_Regions[1].table = &gShak_Sculpt_G1_1;
  gShakuhachi_Sculptur_Regions[2].table = &gFlu_Logic_C2wav_1;
  gShakuhachi_Sculptur_Regions[3].table = &gShak_Sculpt_G2_1;
  gShakuhachi_Sculptur_Regions[4].table = &gFlu_Logic_C3_1;
  gShakuhachi_Sculptur_Regions[5].table = &gShak_Sculpt_C4_1;
  gShakuhachi_Sculptur_Set.numTables = 6;
  gShakuhachi_Sculptur_Set.regions = (WaveSetRegion_t *)gShakuhachi_Sculptur_Regions;
  WaveManager_AddWaveSet( waveManager, &gShakuhachi_Sculptur_Set, SPMIDI_WAVESET_Shakuhachi_Sculptur );

  gBrassSynth1_Sc_Regions[0].table = &g061_BrssSctWrmSyn_0GS_1;
  gBrassSynth1_Sc_Regions[1].table = &g061_BrssSctWrmSyn_2C_1;
  gBrassSynth1_Sc_Regions[2].table = &g061_BrssSctWrmSyn_3E_1;
  gBrassSynth1_Sc_Regions[3].table = &g061_BrssSctWrmSyn_4GS_1;
  gBrassSynth1_Sc_Set.numTables = 4;
  gBrassSynth1_Sc_Set.regions = (WaveSetRegion_t *)gBrassSynth1_Sc_Regions;
  WaveManager_AddWaveSet( waveManager, &gBrassSynth1_Sc_Set, SPMIDI_WAVESET_BrassSynth1_Sc );

  gBrassSynth2_Sc_Regions[0].table = &g061_BrssSectSyn_2C_1;
  gBrassSynth2_Sc_Regions[1].table = &g061_BrssSectSyn_3C_1;
  gBrassSynth2_Sc_Regions[2].table = &g061_BrssSectSyn_4E_1;
  gBrassSynth2_Sc_Regions[3].table = &g061_BrssSectSyn_5C_1;
  gBrassSynth2_Sc_Set.numTables = 4;
  gBrassSynth2_Sc_Set.regions = (WaveSetRegion_t *)gBrassSynth2_Sc_Regions;
  WaveManager_AddWaveSet( waveManager, &gBrassSynth2_Sc_Set, SPMIDI_WAVESET_BrassSynth2_Sc );

  gMutedGuitar_LP_Regions[0].table = &g028_FunkMute_3E_AIF_1;
  gMutedGuitar_LP_Regions[1].table = &g028_FunkMute_4E_AIF_1;
  gMutedGuitar_LP_Regions[2].table = &g028_FunkMute_5E_AIF_1;
  gMutedGuitar_LP_Set.numTables = 3;
  gMutedGuitar_LP_Set.regions = (WaveSetRegion_t *)gMutedGuitar_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gMutedGuitar_LP_Set, SPMIDI_WAVESET_MutedGuitar_LP );

  gFingerBass_LP_Regions[0].table = &gEBAS_D2_1;
  gFingerBass_LP_Set.numTables = 1;
  gFingerBass_LP_Set.regions = (WaveSetRegion_t *)gFingerBass_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gFingerBass_LP_Set, SPMIDI_WAVESET_FingerBass_LP );

  gLoAgogo_Regions[0].table = &gLowAgogo_1;
  gLoAgogo_Set.numTables = 1;
  gLoAgogo_Set.regions = (WaveSetRegion_t *)gLoAgogo_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoAgogo_Set, SPMIDI_WAVESET_LoAgogo );

  gReedOrgan_EXSAccordian_Regions[0].table = &gReedOrgan_F3_1;
  gReedOrgan_EXSAccordian_Regions[1].table = &gReedOrgan_F4_1;
  gReedOrgan_EXSAccordian_Regions[2].table = &gReedOrgan_F5_1;
  gReedOrgan_EXSAccordian_Regions[3].table = &gReedOrgan_F6_1;
  gReedOrgan_EXSAccordian_Set.numTables = 4;
  gReedOrgan_EXSAccordian_Set.regions = (WaveSetRegion_t *)gReedOrgan_EXSAccordian_Regions;
  WaveManager_AddWaveSet( waveManager, &gReedOrgan_EXSAccordian_Set, SPMIDI_WAVESET_ReedOrgan_EXSAccordian );

  gAccordion_Boss_Regions[0].table = &gAccordion_Boss_3E_1;
  gAccordion_Boss_Regions[1].table = &gAccordion_Boss_4E_1;
  gAccordion_Boss_Regions[2].table = &gAccordion_Boss_5C_1;
  gAccordion_Boss_Set.numTables = 3;
  gAccordion_Boss_Set.regions = (WaveSetRegion_t *)gAccordion_Boss_Regions;
  WaveManager_AddWaveSet( waveManager, &gAccordion_Boss_Set, SPMIDI_WAVESET_Accordion_Boss );

  gRide2_Regions[0].table = &gRide2_DFH_EQ_1;
  gRide2_Set.numTables = 1;
  gRide2_Set.regions = (WaveSetRegion_t *)gRide2_Regions;
  WaveManager_AddWaveSet( waveManager, &gRide2_Set, SPMIDI_WAVESET_Ride2 );

  gflute_Sculpture_Regions[0].table = &gFlu_Logic_C1_1;
  gflute_Sculpture_Regions[1].table = &gFlu_Logic_C2wav_1;
  gflute_Sculpture_Regions[2].table = &gFlu_Logic_C3_1;
  gflute_Sculpture_Regions[3].table = &gFlu_Logic_C4_1;
  gflute_Sculpture_Regions[4].table = &gFlu_Logic_C5_1;
  gflute_Sculpture_Set.numTables = 5;
  gflute_Sculpture_Set.regions = (WaveSetRegion_t *)gflute_Sculpture_Regions;
  WaveManager_AddWaveSet( waveManager, &gflute_Sculpture_Set, SPMIDI_WAVESET_flute_Sculpture );

  gRide1_Regions[0].table = &gRide1_DFH_EQ_1;
  gRide1_Set.numTables = 1;
  gRide1_Set.regions = (WaveSetRegion_t *)gRide1_Regions;
  WaveManager_AddWaveSet( waveManager, &gRide1_Set, SPMIDI_WAVESET_Ride1 );

  gShortGuiro_Regions[0].table = &gShortGuiro_1;
  gShortGuiro_Set.numTables = 1;
  gShortGuiro_Set.regions = (WaveSetRegion_t *)gShortGuiro_Regions;
  WaveManager_AddWaveSet( waveManager, &gShortGuiro_Set, SPMIDI_WAVESET_ShortGuiro );

  gJazzGuitar_Regions[0].table = &gJazzGuitar_C2_1;
  gJazzGuitar_Regions[1].table = &gJazzGuitar_G2_1;
  gJazzGuitar_Regions[2].table = &gJazzGuitar_D3_1;
  gJazzGuitar_Regions[3].table = &gJazzGuitar_A3_1;
  gJazzGuitar_Set.numTables = 4;
  gJazzGuitar_Set.regions = (WaveSetRegion_t *)gJazzGuitar_Regions;
  WaveManager_AddWaveSet( waveManager, &gJazzGuitar_Set, SPMIDI_WAVESET_JazzGuitar );

  gBrassSect_EXS_Regions[0].table = &g061_BrssSect_1GS_1;
  gBrassSect_EXS_Regions[1].table = &g061_BrssSect_3C_1;
  gBrassSect_EXS_Regions[2].table = &g061_BrssSect_4C_1;
  gBrassSect_EXS_Regions[3].table = &g061_BrssSect_4GS_1;
  gBrassSect_EXS_Set.numTables = 4;
  gBrassSect_EXS_Set.regions = (WaveSetRegion_t *)gBrassSect_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gBrassSect_EXS_Set, SPMIDI_WAVESET_BrassSect_EXS );

  gRideBell_Regions[0].table = &gRideBell_DFH_EQ_1;
  gRideBell_Set.numTables = 1;
  gRideBell_Set.regions = (WaveSetRegion_t *)gRideBell_Regions;
  WaveManager_AddWaveSet( waveManager, &gRideBell_Set, SPMIDI_WAVESET_RideBell );

  gHiMidTom_Regions[0].table = &gHiMidTom_DFH_Tom1_1;
  gHiMidTom_Set.numTables = 1;
  gHiMidTom_Set.regions = (WaveSetRegion_t *)gHiMidTom_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiMidTom_Set, SPMIDI_WAVESET_HiMidTom );

  gSynthStrings2_Regions[0].table = &gSynthStrings2_C2_1;
  gSynthStrings2_Regions[1].table = &gSynthStrings2_G2_1;
  gSynthStrings2_Regions[2].table = &gSynthStrings2_D3_1;
  gSynthStrings2_Regions[3].table = &gSynthStrings2_A3_1;
  gSynthStrings2_Set.numTables = 4;
  gSynthStrings2_Set.regions = (WaveSetRegion_t *)gSynthStrings2_Regions;
  WaveManager_AddWaveSet( waveManager, &gSynthStrings2_Set, SPMIDI_WAVESET_SynthStrings2 );

  gChurchOrgan_EVB3_Regions[0].table = &gChOrgan_C2_1;
  gChurchOrgan_EVB3_Regions[1].table = &gChOrgan_C3_1;
  gChurchOrgan_EVB3_Regions[2].table = &gChOrgan_C4_1;
  gChurchOrgan_EVB3_Regions[3].table = &gChOrgan_C5_1;
  gChurchOrgan_EVB3_Regions[4].table = &gChOrgan_C6_1;
  gChurchOrgan_EVB3_Regions[5].table = &gChOrgan_C7_1;
  gChurchOrgan_EVB3_Regions[6].table = &gChOrgan_C8_1;
  gChurchOrgan_EVB3_Set.numTables = 7;
  gChurchOrgan_EVB3_Set.regions = (WaveSetRegion_t *)gChurchOrgan_EVB3_Regions;
  WaveManager_AddWaveSet( waveManager, &gChurchOrgan_EVB3_Set, SPMIDI_WAVESET_ChurchOrgan_EVB3 );

  gClosedTriangle_Regions[0].table = &gClosedTriangle_1;
  gClosedTriangle_Set.numTables = 1;
  gClosedTriangle_Set.regions = (WaveSetRegion_t *)gClosedTriangle_Regions;
  WaveManager_AddWaveSet( waveManager, &gClosedTriangle_Set, SPMIDI_WAVESET_ClosedTriangle );

  gTrombone_EXS_Regions[0].table = &g057_Trombone_2E_1;
  gTrombone_EXS_Regions[1].table = &g057_Trombone_3E_1;
  gTrombone_EXS_Regions[2].table = &g057_Trombone_4C_1;
  gTrombone_EXS_Set.numTables = 3;
  gTrombone_EXS_Set.regions = (WaveSetRegion_t *)gTrombone_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gTrombone_EXS_Set, SPMIDI_WAVESET_Trombone_EXS );

  gTuba_LP_Regions[0].table = &g058_Tuba_2C_AIF_1;
  gTuba_LP_Regions[1].table = &g058_Tuba_2F_AIF_1;
  gTuba_LP_Regions[2].table = &g058_Tuba_3F_AIF_1;
  gTuba_LP_Regions[3].table = &g058_Tuba_4F_AIF_1;
  gTuba_LP_Set.numTables = 4;
  gTuba_LP_Set.regions = (WaveSetRegion_t *)gTuba_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gTuba_LP_Set, SPMIDI_WAVESET_Tuba_LP );

  gSteelDrum_LP_Regions[0].table = &g114_SteelDrm_4D_1;
  gSteelDrum_LP_Regions[1].table = &g114_SteelDrm_5C_1;
  gSteelDrum_LP_Set.numTables = 2;
  gSteelDrum_LP_Set.regions = (WaveSetRegion_t *)gSteelDrum_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gSteelDrum_LP_Set, SPMIDI_WAVESET_SteelDrum_LP );

  gLongWhistle_Regions[0].table = &gLongWhistle_1;
  gLongWhistle_Set.numTables = 1;
  gLongWhistle_Set.regions = (WaveSetRegion_t *)gLongWhistle_Regions;
  WaveManager_AddWaveSet( waveManager, &gLongWhistle_Set, SPMIDI_WAVESET_LongWhistle );

  gWah_Arcade_Regions[0].table = &gswheeLo_1;
  gWah_Arcade_Regions[1].table = &gswhee3_1;
  gWah_Arcade_Regions[2].table = &gswhee1_1;
  gWah_Arcade_Set.numTables = 3;
  gWah_Arcade_Set.regions = (WaveSetRegion_t *)gWah_Arcade_Regions;
  WaveManager_AddWaveSet( waveManager, &gWah_Arcade_Set, SPMIDI_WAVESET_Wah_Arcade );

  gDistGuitar_PickScrape_Regions[0].table = &gDGuitar_Scrape_F2_1;
  gDistGuitar_PickScrape_Regions[1].table = &gDGuitar_Scrape_B2_1;
  gDistGuitar_PickScrape_Regions[2].table = &gDGuitar_Scrape_F3_1;
  gDistGuitar_PickScrape_Regions[3].table = &gDGuitar_Scrape_B3_1;
  gDistGuitar_PickScrape_Regions[4].table = &gDGuitar_Scrape_F4_1;
  gDistGuitar_PickScrape_Set.numTables = 5;
  gDistGuitar_PickScrape_Set.regions = (WaveSetRegion_t *)gDistGuitar_PickScrape_Regions;
  WaveManager_AddWaveSet( waveManager, &gDistGuitar_PickScrape_Set, SPMIDI_WAVESET_DistGuitar_PickScrape );

  gHiWoodBlock_Regions[0].table = &gHiWoodBlock_1;
  gHiWoodBlock_Set.numTables = 1;
  gHiWoodBlock_Set.regions = (WaveSetRegion_t *)gHiWoodBlock_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiWoodBlock_Set, SPMIDI_WAVESET_HiWoodBlock );

  gHandClap_Regions[0].table = &gHandClap_Emagic_1;
  gHandClap_Set.numTables = 1;
  gHandClap_Set.regions = (WaveSetRegion_t *)gHandClap_Regions;
  WaveManager_AddWaveSet( waveManager, &gHandClap_Set, SPMIDI_WAVESET_HandClap );

  gAcousticGuitarHarmonics_Regions[0].table = &gAcGuitarHarm_C2_1;
  gAcousticGuitarHarmonics_Regions[1].table = &gAcGuitarHarm_G2_1;
  gAcousticGuitarHarmonics_Regions[2].table = &gAcGuitarHarm_D3_1;
  gAcousticGuitarHarmonics_Regions[3].table = &gAcGuitarHarmA3_1;
  gAcousticGuitarHarmonics_Regions[4].table = &gAcGuitarHarmE4_1;
  gAcousticGuitarHarmonics_Set.numTables = 5;
  gAcousticGuitarHarmonics_Set.regions = (WaveSetRegion_t *)gAcousticGuitarHarmonics_Regions;
  WaveManager_AddWaveSet( waveManager, &gAcousticGuitarHarmonics_Set, SPMIDI_WAVESET_AcousticGuitarHarmonics );

  gCabasa_Regions[0].table = &gCabasa_1;
  gCabasa_Set.numTables = 1;
  gCabasa_Set.regions = (WaveSetRegion_t *)gCabasa_Regions;
  WaveManager_AddWaveSet( waveManager, &gCabasa_Set, SPMIDI_WAVESET_Cabasa );

  gPizzicatoStrings_Regions[0].table = &gF_2Pizz_1;
  gPizzicatoStrings_Regions[1].table = &gA4Pizz_1;
  gPizzicatoStrings_Regions[2].table = &gG5Pizz_1;
  gPizzicatoStrings_Set.numTables = 3;
  gPizzicatoStrings_Set.regions = (WaveSetRegion_t *)gPizzicatoStrings_Regions;
  WaveManager_AddWaveSet( waveManager, &gPizzicatoStrings_Set, SPMIDI_WAVESET_PizzicatoStrings );

  gsquee_LeapstrArcade_5_11_Regions[0].table = &gboomSq1_1;
  gsquee_LeapstrArcade_5_11_Regions[1].table = &gboomSq2_1;
  gsquee_LeapstrArcade_5_11_Regions[2].table = &gboomSq3_1;
  gsquee_LeapstrArcade_5_11_Set.numTables = 3;
  gsquee_LeapstrArcade_5_11_Set.regions = (WaveSetRegion_t *)gsquee_LeapstrArcade_5_11_Regions;
  WaveManager_AddWaveSet( waveManager, &gsquee_LeapstrArcade_5_11_Set, SPMIDI_WAVESET_squee_LeapstrArcade_5_11 );

  gFretlessBass_Regions[0].table = &gFretlessBass_C2_1;
  gFretlessBass_Regions[1].table = &gFretlessBass_D3_1;
  gFretlessBass_Set.numTables = 2;
  gFretlessBass_Set.regions = (WaveSetRegion_t *)gFretlessBass_Regions;
  WaveManager_AddWaveSet( waveManager, &gFretlessBass_Set, SPMIDI_WAVESET_FretlessBass );

  gVibraslap_Regions[0].table = &gVibraslap_1;
  gVibraslap_Set.numTables = 1;
  gVibraslap_Set.regions = (WaveSetRegion_t *)gVibraslap_Regions;
  WaveManager_AddWaveSet( waveManager, &gVibraslap_Set, SPMIDI_WAVESET_Vibraslap );

  gTrumpet_Mob_Regions[0].table = &gTrumpet_56_1;
  gTrumpet_Mob_Regions[1].table = &gTrumpet_62_1;
  gTrumpet_Mob_Regions[2].table = &gTrumpet_68_1;
  gTrumpet_Mob_Regions[3].table = &gTrumpet_74_1;
  gTrumpet_Mob_Regions[4].table = &gTrumpet_80_1;
  gTrumpet_Mob_Set.numTables = 5;
  gTrumpet_Mob_Set.regions = (WaveSetRegion_t *)gTrumpet_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gTrumpet_Mob_Set, SPMIDI_WAVESET_Trumpet_Mob );

  gOpenTriangle_Regions[0].table = &gOpenTriangle_1;
  gOpenTriangle_Set.numTables = 1;
  gOpenTriangle_Set.regions = (WaveSetRegion_t *)gOpenTriangle_Regions;
  WaveManager_AddWaveSet( waveManager, &gOpenTriangle_Set, SPMIDI_WAVESET_OpenTriangle );

  gDistGuitar_Staccato_Regions[0].table = &gDGuitar_Staccato_B1_1;
  gDistGuitar_Staccato_Regions[1].table = &gDGuitar_Staccato_F2_1;
  gDistGuitar_Staccato_Regions[2].table = &gDGuitar_Staccato_B2_1;
  gDistGuitar_Staccato_Regions[3].table = &gDGuitar_Staccato_F3_1;
  gDistGuitar_Staccato_Regions[4].table = &gDGuitar_Staccato_B3_1;
  gDistGuitar_Staccato_Regions[5].table = &gDGuitar_Staccato_F4_1;
  gDistGuitar_Staccato_Regions[6].table = &gDGuitar_Staccato_B4_1;
  gDistGuitar_Staccato_Regions[7].table = &gDGuitar_Staccato_F5_1;
  gDistGuitar_Staccato_Regions[8].table = &gDGuitar_Staccato_B5_1;
  gDistGuitar_Staccato_Set.numTables = 9;
  gDistGuitar_Staccato_Set.regions = (WaveSetRegion_t *)gDistGuitar_Staccato_Regions;
  WaveManager_AddWaveSet( waveManager, &gDistGuitar_Staccato_Set, SPMIDI_WAVESET_DistGuitar_Staccato );

  gcreatures_POWTheme_Regions[0].table = &gCrea_C1_1;
  gcreatures_POWTheme_Set.numTables = 1;
  gcreatures_POWTheme_Set.regions = (WaveSetRegion_t *)gcreatures_POWTheme_Regions;
  WaveManager_AddWaveSet( waveManager, &gcreatures_POWTheme_Set, SPMIDI_WAVESET_creatures_POWTheme );

  gLoTimbale_Regions[0].table = &gLoTimbale_1;
  gLoTimbale_Set.numTables = 1;
  gLoTimbale_Set.regions = (WaveSetRegion_t *)gLoTimbale_Regions;
  WaveManager_AddWaveSet( waveManager, &gLoTimbale_Set, SPMIDI_WAVESET_LoTimbale );

  gPerculator_LogiSyn_Regions[0].table = &gPerculate_C1_1;
  gPerculator_LogiSyn_Regions[1].table = &gPerculate_C2_1;
  gPerculator_LogiSyn_Regions[2].table = &gPerculate_C3_1;
  gPerculator_LogiSyn_Regions[3].table = &gPerculate_C4_1;
  gPerculator_LogiSyn_Regions[4].table = &gPerculate_C5_1;
  gPerculator_LogiSyn_Regions[5].table = &gPerculate_C6_1;
  gPerculator_LogiSyn_Set.numTables = 6;
  gPerculator_LogiSyn_Set.regions = (WaveSetRegion_t *)gPerculator_LogiSyn_Regions;
  WaveManager_AddWaveSet( waveManager, &gPerculator_LogiSyn_Set, SPMIDI_WAVESET_Perculator_LogiSyn );

  gRockOrgan_EVB3_Regions[0].table = &gB3_B3_1;
  gRockOrgan_EVB3_Regions[1].table = &gB3_G4_1;
  gRockOrgan_EVB3_Regions[2].table = &gB3_E5_1;
  gRockOrgan_EVB3_Regions[3].table = &gB3_C6_1;
  gRockOrgan_EVB3_Set.numTables = 4;
  gRockOrgan_EVB3_Set.regions = (WaveSetRegion_t *)gRockOrgan_EVB3_Regions;
  WaveManager_AddWaveSet( waveManager, &gRockOrgan_EVB3_Set, SPMIDI_WAVESET_RockOrgan_EVB3 );

  gHarp_Regions[0].table = &gHarp_Casio_3C_1;
  gHarp_Regions[1].table = &gHarp_Casio_4E_1;
  gHarp_Regions[2].table = &gHarp_Casio_5E_1;
  gHarp_Regions[3].table = &gHarp_Casio_6C_1;
  gHarp_Set.numTables = 4;
  gHarp_Set.regions = (WaveSetRegion_t *)gHarp_Regions;
  WaveManager_AddWaveSet( waveManager, &gHarp_Set, SPMIDI_WAVESET_Harp );

  gClavinet_EVD6_Regions[0].table = &g007_Clav_2C_1;
  gClavinet_EVD6_Regions[1].table = &g007_Clav_3C_1;
  gClavinet_EVD6_Regions[2].table = &g007_Clav_4C_1;
  gClavinet_EVD6_Regions[3].table = &g007_Clav_5C_1;
  gClavinet_EVD6_Set.numTables = 4;
  gClavinet_EVD6_Set.regions = (WaveSetRegion_t *)gClavinet_EVD6_Regions;
  WaveManager_AddWaveSet( waveManager, &gClavinet_EVD6_Set, SPMIDI_WAVESET_Clavinet_EVD6 );

  g000_GrandPiano_Regions[0].table = &gPiano_Grand_031_1;
  g000_GrandPiano_Regions[1].table = &gPiano_Grand_043_1;
  g000_GrandPiano_Regions[2].table = &gPiano_Grand_055_1;
  g000_GrandPiano_Regions[3].table = &gPiano_Grand_067_1;
  g000_GrandPiano_Regions[4].table = &gPiano_Grand_073_1;
  g000_GrandPiano_Regions[5].table = &gPiano_Grand_085_1;
  g000_GrandPiano_Set.numTables = 6;
  g000_GrandPiano_Set.regions = (WaveSetRegion_t *)g000_GrandPiano_Regions;
  WaveManager_AddWaveSet( waveManager, &g000_GrandPiano_Set, SPMIDI_WAVESET_000_GrandPiano );

  gKoto_Sculpture_Regions[0].table = &gKoto_C3_1;
  gKoto_Sculpture_Regions[1].table = &gKoto_C4_1;
  gKoto_Sculpture_Regions[2].table = &gKoto_C5_1;
  gKoto_Sculpture_Regions[3].table = &gKoto_C6_1;
  gKoto_Sculpture_Regions[4].table = &gKoto_C7_1;
  gKoto_Sculpture_Regions[5].table = &gKoto_C8_1;
  gKoto_Sculpture_Set.numTables = 6;
  gKoto_Sculpture_Set.regions = (WaveSetRegion_t *)gKoto_Sculpture_Regions;
  WaveManager_AddWaveSet( waveManager, &gKoto_Sculpture_Set, SPMIDI_WAVESET_Koto_Sculpture );

  gWoodblocks_EXS_Regions[0].table = &g126_GenDrum_n76_1;
  gWoodblocks_EXS_Set.numTables = 1;
  gWoodblocks_EXS_Set.regions = (WaveSetRegion_t *)gWoodblocks_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gWoodblocks_EXS_Set, SPMIDI_WAVESET_Woodblocks_EXS );

  gSynthString1_Regions[0].table = &gSynthStrings_C2_1;
  gSynthString1_Regions[1].table = &gSynthStrings_G2_1;
  gSynthString1_Regions[2].table = &gSynthStrings_D3_1;
  gSynthString1_Regions[3].table = &gSynthStrings_A3_1;
  gSynthString1_Set.numTables = 4;
  gSynthString1_Set.regions = (WaveSetRegion_t *)gSynthString1_Regions;
  WaveManager_AddWaveSet( waveManager, &gSynthString1_Set, SPMIDI_WAVESET_SynthString1 );

  gDistGuitar_Muted_Regions[0].table = &gDGuitar_Muted_B1_1;
  gDistGuitar_Muted_Regions[1].table = &gDGuitar_Muted_F2_1;
  gDistGuitar_Muted_Regions[2].table = &gDGuitar_Muted_B2_1;
  gDistGuitar_Muted_Regions[3].table = &gDGuitar_Muted_F3_1;
  gDistGuitar_Muted_Regions[4].table = &gDGuitar_Muted_B3_1;
  gDistGuitar_Muted_Regions[5].table = &gDGuitar_Muted_F4_1;
  gDistGuitar_Muted_Regions[6].table = &gDGuitar_Muted_B4_1;
  gDistGuitar_Muted_Regions[7].table = &gDGuitar_Muted_F5_1;
  gDistGuitar_Muted_Regions[8].table = &gDGuitar_Muted_B5_1;
  gDistGuitar_Muted_Set.numTables = 9;
  gDistGuitar_Muted_Set.regions = (WaveSetRegion_t *)gDistGuitar_Muted_Regions;
  WaveManager_AddWaveSet( waveManager, &gDistGuitar_Muted_Set, SPMIDI_WAVESET_DistGuitar_Muted );

  gTambourine_Regions[0].table = &gTambourine_1;
  gTambourine_Set.numTables = 1;
  gTambourine_Set.regions = (WaveSetRegion_t *)gTambourine_Regions;
  WaveManager_AddWaveSet( waveManager, &gTambourine_Set, SPMIDI_WAVESET_Tambourine );

  gMiniMeMoog_FE_Regions[0].table = &gMiniMeMoog_C2_1;
  gMiniMeMoog_FE_Regions[1].table = &gMiniMeMoog_G2_1;
  gMiniMeMoog_FE_Regions[2].table = &gMiniMeMoog_D3_1;
  gMiniMeMoog_FE_Set.numTables = 3;
  gMiniMeMoog_FE_Set.regions = (WaveSetRegion_t *)gMiniMeMoog_FE_Regions;
  WaveManager_AddWaveSet( waveManager, &gMiniMeMoog_FE_Set, SPMIDI_WAVESET_MiniMeMoog_FE );

  gSitar_Fat_Regions[0].table = &g104_Sitar_Fat_3C_1;
  gSitar_Fat_Regions[1].table = &g104_Sitar_Fat_4C_1;
  gSitar_Fat_Regions[2].table = &g104_Sitar_Fat_5C_1;
  gSitar_Fat_Set.numTables = 3;
  gSitar_Fat_Set.regions = (WaveSetRegion_t *)gSitar_Fat_Regions;
  WaveManager_AddWaveSet( waveManager, &gSitar_Fat_Set, SPMIDI_WAVESET_Sitar_Fat );

  gChinaCymbal_Regions[0].table = &gChinaCym_DFH_EQ_1;
  gChinaCymbal_Set.numTables = 1;
  gChinaCymbal_Set.regions = (WaveSetRegion_t *)gChinaCymbal_Regions;
  WaveManager_AddWaveSet( waveManager, &gChinaCymbal_Set, SPMIDI_WAVESET_ChinaCymbal );

  gCrash2_Regions[0].table = &gCrash2_DFH_EQ_1;
  gCrash2_Set.numTables = 1;
  gCrash2_Set.regions = (WaveSetRegion_t *)gCrash2_Regions;
  WaveManager_AddWaveSet( waveManager, &gCrash2_Set, SPMIDI_WAVESET_Crash2 );

  gViolinBow_Mob_Regions[0].table = &gViolin_Bowed_056_1;
  gViolinBow_Mob_Regions[1].table = &gViolin_Bowed_067_1;
  gViolinBow_Mob_Regions[2].table = &gViolin_Bowed_079_1;
  gViolinBow_Mob_Regions[3].table = &gViolin_Bowed_085_1;
  gViolinBow_Mob_Regions[4].table = &gViolin_Bowed_088_1;
  gViolinBow_Mob_Set.numTables = 5;
  gViolinBow_Mob_Set.regions = (WaveSetRegion_t *)gViolinBow_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gViolinBow_Mob_Set, SPMIDI_WAVESET_ViolinBow_Mob );

  gCrash1_Regions[0].table = &gCrash1_DFH_EQ_1;
  gCrash1_Set.numTables = 1;
  gCrash1_Set.regions = (WaveSetRegion_t *)gCrash1_Regions;
  WaveManager_AddWaveSet( waveManager, &gCrash1_Set, SPMIDI_WAVESET_Crash1 );

  gFrHorn_Regions[0].table = &gFrHorn_C2_1;
  gFrHorn_Regions[1].table = &gFrHorn_G2_1;
  gFrHorn_Set.numTables = 2;
  gFrHorn_Set.regions = (WaveSetRegion_t *)gFrHorn_Regions;
  WaveManager_AddWaveSet( waveManager, &gFrHorn_Set, SPMIDI_WAVESET_FrHorn );

  gTrumpet_Mute_Mob_Regions[0].table = &gTrumpet_Mute_57_1;
  gTrumpet_Mute_Mob_Regions[1].table = &gTrumpet_Mute_66_1;
  gTrumpet_Mute_Mob_Regions[2].table = &gTrumpet_Mute_75_1;
  gTrumpet_Mute_Mob_Regions[3].table = &gTrumpet_Mute_84_1;
  gTrumpet_Mute_Mob_Set.numTables = 4;
  gTrumpet_Mute_Mob_Set.regions = (WaveSetRegion_t *)gTrumpet_Mute_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gTrumpet_Mute_Mob_Set, SPMIDI_WAVESET_Trumpet_Mute_Mob );

  gSplashCymbal_Regions[0].table = &gSplash_DFH_EQ_1;
  gSplashCymbal_Set.numTables = 1;
  gSplashCymbal_Set.regions = (WaveSetRegion_t *)gSplashCymbal_Regions;
  WaveManager_AddWaveSet( waveManager, &gSplashCymbal_Set, SPMIDI_WAVESET_SplashCymbal );

  gElectricGtr2_EXS_Regions[0].table = &g026_CleanElecGtr_2_2E_1;
  gElectricGtr2_EXS_Regions[1].table = &g026_CleanElecGtr_2_3E_1;
  gElectricGtr2_EXS_Regions[2].table = &g026_CleanElecGtr_2_4GS_1;
  gElectricGtr2_EXS_Set.numTables = 3;
  gElectricGtr2_EXS_Set.regions = (WaveSetRegion_t *)gElectricGtr2_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gElectricGtr2_EXS_Set, SPMIDI_WAVESET_ElectricGtr2_EXS );

  gPiano_HonkyTonk_Regions[0].table = &gPiano_HonkyTonk_C2_1;
  gPiano_HonkyTonk_Regions[1].table = &gPiano_HonkyTonk_G2_1;
  gPiano_HonkyTonk_Regions[2].table = &gPiano_HonkyTonk_D3_1;
  gPiano_HonkyTonk_Regions[3].table = &gPiano_HonkyTonk_A3_1;
  gPiano_HonkyTonk_Set.numTables = 4;
  gPiano_HonkyTonk_Set.regions = (WaveSetRegion_t *)gPiano_HonkyTonk_Regions;
  WaveManager_AddWaveSet( waveManager, &gPiano_HonkyTonk_Set, SPMIDI_WAVESET_Piano_HonkyTonk );

  gLowBongo_Regions[0].table = &gLowBongo_1;
  gLowBongo_Set.numTables = 1;
  gLowBongo_Set.regions = (WaveSetRegion_t *)gLowBongo_Regions;
  WaveManager_AddWaveSet( waveManager, &gLowBongo_Set, SPMIDI_WAVESET_LowBongo );

  gMuteHiConga_Regions[0].table = &gMuteHiConga_2;
  gMuteHiConga_Set.numTables = 1;
  gMuteHiConga_Set.regions = (WaveSetRegion_t *)gMuteHiConga_Regions;
  WaveManager_AddWaveSet( waveManager, &gMuteHiConga_Set, SPMIDI_WAVESET_MuteHiConga );

  gSaxTenor_LP_Regions[0].table = &g066_TenorSax_2FS_AIF_1;
  gSaxTenor_LP_Regions[1].table = &g066_TenorSax_3C_AIF_1;
  gSaxTenor_LP_Regions[2].table = &g066_TenorSax_4C_AIF_1;
  gSaxTenor_LP_Regions[3].table = &g066_TenorSax_4FS_AIF_1;
  gSaxTenor_LP_Regions[4].table = &g066_TenorSax_5C_AIF_1;
  gSaxTenor_LP_Regions[5].table = &g066_TenorSax_5FS_1;
  gSaxTenor_LP_Set.numTables = 6;
  gSaxTenor_LP_Set.regions = (WaveSetRegion_t *)gSaxTenor_LP_Regions;
  WaveManager_AddWaveSet( waveManager, &gSaxTenor_LP_Set, SPMIDI_WAVESET_SaxTenor_LP );

  gAccordion_Casio_Regions[0].table = &gAccordion_Casio_3E_1;
  gAccordion_Casio_Regions[1].table = &gAccordion_Casio_4E_1;
  gAccordion_Casio_Regions[2].table = &gAccordion_Casio_5E_1;
  gAccordion_Casio_Set.numTables = 3;
  gAccordion_Casio_Set.regions = (WaveSetRegion_t *)gAccordion_Casio_Regions;
  WaveManager_AddWaveSet( waveManager, &gAccordion_Casio_Set, SPMIDI_WAVESET_Accordion_Casio );

  gGtrNylon_Mob_Regions[0].table = &gGuitar_Nylon_043_P_1;
  gGtrNylon_Mob_Regions[1].table = &gGuitar_Nylon_055_1;
  gGtrNylon_Mob_Regions[2].table = &gGuitar_Nylon_067_1;
  gGtrNylon_Mob_Regions[3].table = &gGuitar_Nylon_073_1;
  gGtrNylon_Mob_Regions[4].table = &gGuitar_Nylon_082_1;
  gGtrNylon_Mob_Set.numTables = 5;
  gGtrNylon_Mob_Set.regions = (WaveSetRegion_t *)gGtrNylon_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gGtrNylon_Mob_Set, SPMIDI_WAVESET_GtrNylon_Mob );

  gODGuitarSust_VSL_Regions[0].table = &gODGuitar_VSL_B1_1;
  gODGuitarSust_VSL_Regions[1].table = &gODGuitar_VSL_F2_1;
  gODGuitarSust_VSL_Regions[2].table = &gODGuitar_VSL_B2_1;
  gODGuitarSust_VSL_Regions[3].table = &gODGuitar_VSL_F3_1;
  gODGuitarSust_VSL_Regions[4].table = &gODGuitar_VSL_B3_1;
  gODGuitarSust_VSL_Regions[5].table = &gODGuitar_VSL_F_4_1;
  gODGuitarSust_VSL_Regions[6].table = &gODGuitar_VSL_B4_3;
  gODGuitarSust_VSL_Regions[7].table = &gODGuitar_VSL_F5_1;
  gODGuitarSust_VSL_Regions[8].table = &gODGuitar_VSL_B5_1;
  gODGuitarSust_VSL_Set.numTables = 9;
  gODGuitarSust_VSL_Set.regions = (WaveSetRegion_t *)gODGuitarSust_VSL_Regions;
  WaveManager_AddWaveSet( waveManager, &gODGuitarSust_VSL_Set, SPMIDI_WAVESET_ODGuitarSust_VSL );

  gMaracas_Regions[0].table = &gMaracas_1;
  gMaracas_Set.numTables = 1;
  gMaracas_Set.regions = (WaveSetRegion_t *)gMaracas_Regions;
  WaveManager_AddWaveSet( waveManager, &gMaracas_Set, SPMIDI_WAVESET_Maracas );

  gHiTom_Regions[0].table = &gHiTom_DFH_NoSn_1;
  gHiTom_Set.numTables = 1;
  gHiTom_Set.regions = (WaveSetRegion_t *)gHiTom_Regions;
  WaveManager_AddWaveSet( waveManager, &gHiTom_Set, SPMIDI_WAVESET_HiTom );

  gPanFlute_Sculpture_Regions[0].table = &gPanFlut_Sculp_C4_1;
  gPanFlute_Sculpture_Set.numTables = 1;
  gPanFlute_Sculpture_Set.regions = (WaveSetRegion_t *)gPanFlute_Sculpture_Regions;
  WaveManager_AddWaveSet( waveManager, &gPanFlute_Sculpture_Set, SPMIDI_WAVESET_PanFlute_Sculpture );

  gAcSnare_Regions[0].table = &gAcSnare_DFH_Sensi_1;
  gAcSnare_Set.numTables = 1;
  gAcSnare_Set.regions = (WaveSetRegion_t *)gAcSnare_Regions;
  WaveManager_AddWaveSet( waveManager, &gAcSnare_Set, SPMIDI_WAVESET_AcSnare );

  gxylo_Sculpture_Regions[0].table = &gXY_C1_1;
  gxylo_Sculpture_Regions[1].table = &gXY_C2_1;
  gxylo_Sculpture_Regions[2].table = &gXY_C3_1;
  gxylo_Sculpture_Regions[3].table = &gXY_C4_1;
  gxylo_Sculpture_Regions[4].table = &gXY_C5_1;
  gxylo_Sculpture_Regions[5].table = &gXY_C6_1;
  gxylo_Sculpture_Regions[6].table = &gXY_C7_1;
  gxylo_Sculpture_Set.numTables = 7;
  gxylo_Sculpture_Set.regions = (WaveSetRegion_t *)gxylo_Sculpture_Regions;
  WaveManager_AddWaveSet( waveManager, &gxylo_Sculpture_Set, SPMIDI_WAVESET_xylo_Sculpture );

  gGtrSteel_Mob_Regions[0].table = &gGuitar_Steel_040_1;
  gGtrSteel_Mob_Regions[1].table = &gGuitar_Steel_055_1;
  gGtrSteel_Mob_Regions[2].table = &gGuitar_Steel_067_1;
  gGtrSteel_Mob_Regions[3].table = &gGuitar_Steel_079_1;
  gGtrSteel_Mob_Set.numTables = 4;
  gGtrSteel_Mob_Set.regions = (WaveSetRegion_t *)gGtrSteel_Mob_Regions;
  WaveManager_AddWaveSet( waveManager, &gGtrSteel_Mob_Set, SPMIDI_WAVESET_GtrSteel_Mob );

  gHarmonica_EXS_Regions[0].table = &g022_Harm_3C_1;
  gHarmonica_EXS_Regions[1].table = &g022_Harm_4C_1;
  gHarmonica_EXS_Regions[2].table = &g022_Harm_4GS_1;
  gHarmonica_EXS_Set.numTables = 3;
  gHarmonica_EXS_Set.regions = (WaveSetRegion_t *)gHarmonica_EXS_Regions;
  WaveManager_AddWaveSet( waveManager, &gHarmonica_EXS_Set, SPMIDI_WAVESET_Harmonica_EXS );

  gSynthBass2_Regions[0].table = &gSynthBass2_C2_1;
  gSynthBass2_Regions[1].table = &gSynthBass2_G2_1;
  gSynthBass2_Regions[2].table = &gSynthBass2_D3_1;
  gSynthBass2_Set.numTables = 3;
  gSynthBass2_Set.regions = (WaveSetRegion_t *)gSynthBass2_Regions;
  WaveManager_AddWaveSet( waveManager, &gSynthBass2_Set, SPMIDI_WAVESET_SynthBass2 );
}


/* Make room for all possible instruments if editing. */
#ifdef SPMIDI_SUPPORT_EDITING
EDITABLE HybridVoice_Preset_t  gHybridSynthPresets[SS_MAX_PRESETS] =
#else
EDITABLE HybridVoice_Preset_t gHybridSynthPresets[] =
#endif
{
    { /* Orchestra Hit_Fly */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_OrchHitz_Boss
    },
    { /* Tremolo Strings Wave */
        { 4, 0, 0x5 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x74a62 }, /* lfo */
        { 5, 99, 1023, 3664, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 92, 412, 819, 106, 17, ADSR_FLAG_LOOP_SUSTAIN | 0 | 0 | 0 }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x4d4b99e, /* phaseModDepth */
        0x167, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* buzzBee_FM */
        { 4, 0, 0x0 }, /* modOsc */
        { 7, 0, 0x0 }, /* mainOsc */
        { 9, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 280, 496, 716, 2333, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 816, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x7681dcfd, /* phaseModDepth */
        0x2d13, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | HYBRID_FLAG_USE_RING_MOD | 0 | 0 | 0, /* flags */
        5, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Synth Drum_FM */
        { 4, 0, 0x0 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x0 }, /* lfo */
        { 10, 496, 336, 3, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 768, 37, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 10, 4092, 716, 3, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x2e06c1d, /* phaseModDepth */
        0x3e07, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0xb46, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* FX 4 (atmosphere)_KM */
        { 6, 0, 0x19 }, /* modOsc */
        { 8, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 212, 2630, 0, 903, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1190, 10000, 1023, 3836, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 24, 212, 1023, 3341, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x290ebd8, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x5b8, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* DistGuitar_Staccato */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7fde913, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_DistGuitar_Staccato
    },
    { /* Fiddle_usingViolaWaveTab */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x6f7f8 }, /* lfo */
        { 106, 2630, 0, 903, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 212, 1023, 1037, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x25edf1f, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x0, /* phaseModDepth */
        0x137, /* lfoPitchModDepth */
        0x5fd, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x1fe9, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ViolaBow_Mob
    },
    { /* Brass Section_d */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 903, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 212, 1023, 1037, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xbd3b7c, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_BrassSect_EXS
    },
    { /* Shamisen_Banjo */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Shamisen_Banjo
    },
    { /* String Ensembles 2 */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 0, 2050, 122, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_StringEns2_EXS
    },
    { /* Acoustic Bass */
        { 6, 0, 0x10036 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x64a62 }, /* lfo */
        { 1, 190, 563, 602, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 3664, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 2, 559, 1023, 412, 25, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x324279e, 0x0, 0 | 0 },
        0x6ecb5820, /* phaseModDepth */
        0xf9, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xab2d, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_AcoustBass_BossOD
    },
    { /* String Ensembles 1 */
        { 6, 0, 0x111 }, /* modOsc */
        { 12, 0, 0xfffffeef }, /* mainOsc */
        { 8, 0, 0x9b1dc }, /* lfo */
        { 0, 963, 911, 195, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 559, 10000, 788, 1106, 30, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x6128669, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x5ab9625c, /* phaseModDepth */
        0x1280, /* lfoPitchModDepth */
        0x2b7f, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xc994, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_StringEns1_EXS
    },
    { /* High Agogo */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiAgogo
    },
    { /* DistGuitar_PickScrape */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7fde913, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_DistGuitar_PickScrape
    },
    { /* Electric Snare */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ElecSnare
    },
    { /* KittyMeow_LeapArcade */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_kitty_5_11
    },
    { /* Church Organ EVB3 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 11, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ChurchOrgan_EVB3
    },
    { /* Mute Triangle */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 0, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ClosedTriangle
    },
    { /* High Floor Tom */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiFlrTom
    },
    { /* Gameboy_LogicSynth */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 11, 0, 0x0 }, /* lfo */
        { 0, 496, 716, 636, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 496, 585, 393, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x34f, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x3d7, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Bump_GameboySynth
    },
    { /* Acoustic Grand */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 903, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 212, 1023, 1037, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xbd3b7c, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_000_GrandPiano
    },
    { /* Long Guiro */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LongGuiro
    },
    { /* Trombone */
        { 4, 0, 0x35616 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 11, 66, 1023, 1721, 10, 0 | 0 | 0 | 0 }, /* modEnv */
        { 2, 26, 941, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 12, 27, 1023, 99, 45, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x30000, 0 | 0 },
        0x7a75c7a, /* phaseModDepth */
        0x55, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Trombone_EXS
    },
    { /* Marimba */
        { 4, 0, 0xffff759e }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 6, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 2, 39, 115, 248, 67, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 2465, 147, 1527, 77, 0 | 0 | ADSR_FLAG_NO_WAIT | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x7e1480f, 0x20000, 0 | 0 },
        0x464ca0d6, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x10173, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Marimba_EXS
    },
    { /* Tambourine */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Tambourine
    },
    { /* Wank_LeapsterArcade */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 182, 4, 52, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e6fb1f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_wank_LeapstrArcade_5_11
    },
    { /* Sitar Wave */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 3, 32, 460, 412, 41, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 2831, 1023, 1106, 69, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x6de9505, 0x10000, 0 | 0 },
        0x0, /* phaseModDepth */
        0x55, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xf7d9, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Sitar_Fat
    },
    { /* Tremelo_LeapsterArcade */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 1431, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_tremelo_LeapsterArcade_5_11
    },
    { /* Autechre_FMVersion */
        { 4, 0, 0x0 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 496, 716, 10000, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 10, 92, 566, 2831, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Short Guiro */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ShortGuiro
    },
    { /* Tenor Sax */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 106, 123, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SaxTenor_LP
    },
    { /* Accordian */
        { 5, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x7c1c1 }, /* lfo */
        { 6, 4742, 518, 2050, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 4, 799, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 58, 162, 1023, 343, 37, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xb572c4a, 0x20000, 0 | 0 },
        0x1f106ba4, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Accordion_Boss
    },
    { /* Hi Wood Block */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiWoodBlock
    },
    { /* Bassoon */
        { 5, 0, 0x6d }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x6bbf2 }, /* lfo */
        { 20, 99, 1023, 99, 32, 0 | 0 | 0 | 0 }, /* modEnv */
        { 4, 10000, 1023, 176, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 23, 816, 1023, 42, 40, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x134256, 0xf65a1, SVFILTER_FLAG_ABS_PITCH | 0 },
        0x2c1e2fcc, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Bassoon_LP
    },
    { /* Open Cuica */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoCuica
    },
    { /* Vibraslap */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Vibraslap
    },
    { /* Piccolo */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 928, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_flute_Sculpture
    },
    { /* xylo_sculpture */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 2, 496, 716, 3280, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 2, 496, 741, 786, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x187, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_xylo_Sculpture
    },
    { /* Cabasa */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Cabasa
    },
    { /* Low-Mid Tom */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoMidTom
    },
    { /* Lead 1 (square) */
        { 7, 0, 0x20106 }, /* modOsc */
        { 7, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x752f5 }, /* lfo */
        { 10, 99, 921, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 18, 1023, 23, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x55, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Alto Sax */
        { 4, 0, 0x9 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x666cf }, /* lfo */
        { 5, 99, 876, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 0, 10000, 1023, 162, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 10000, 1023, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x19e1596, 0x20000, 0 | 0 },
        0x0, /* phaseModDepth */
        0x1c, /* lfoPitchModDepth */
        0x3d7, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xccd, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SaxAlto_Mob
    },
    { /* HarpsichordWave */
        { 6, 0, 0x20000 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 6, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 2, 99, 825, 816, 63, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 3, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 3, 2465, 70, 1458, 32, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x5d742c4, 0x30000, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x7fffffff, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        4, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Clavinet_EVD6
    },
    { /* Low Tom */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoTom
    },
    { /* Melodic Tom_FM */
        { 4, 0, 0x0 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 386, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 343, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 1037, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x4dd0dacd, /* phaseModDepth */
        0x23e6, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x9f7b, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | HYBRID_FLAG_USE_RING_MOD | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        3, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Gunshot_SpaceShooter */
        { 6, 0, 0x19 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 7, OSC_FLAG_ABSOLUTE_PITCH, 0x80807 }, /* lfo */
        { 2, 2630, 0, 4092, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 734, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 212, 728, 4698, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xbd3b7c, 0x0, 0 | 0 },
        0x2799c8fd, /* phaseModDepth */
        0x4993, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x9d55, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | HYBRID_FLAG_USE_RING_MOD | 0 | 0 | 0, /* flags */
        4, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Synth Bass 2_d */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SynthBass2
    },
    { /* Lead 8 (octaves) */
        { 6, 0, 0x100a3 }, /* modOsc */
        { 6, 0, 0x0 }, /* mainOsc */
        { 5, OSC_FLAG_ABSOLUTE_PITCH, 0x558de }, /* lfo */
        { 2, 981, 993, 153, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 3, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 5, 99, 931, 280, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x7fffffff, /* phaseModDepth */
        0x1b8, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Applause_FM */
        { 6, 0, 0x19 }, /* modOsc */
        { 9, 0, 0x55555 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0xa0807 }, /* lfo */
        { 70, 2630, 0, 903, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 596, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 212, 212, 1023, 1037, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xc604c6c, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Cowbell */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Cowbell
    },
    { /* WhiteNoise_FilteredWind_FM */
        { 8, 0, 0x0 }, /* modOsc */
        { 8, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 559, 496, 716, 469, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 559, 496, 716, 3836, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x68cc41, 0x0, 0 | 0 },
        0x2386327, /* phaseModDepth */
        0x3cce, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x72ef, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Pad 4 BubbleBeauty */
        { 10, OSC_FLAG_ABSOLUTE_PITCH, 0x67029 }, /* modOsc */
        { 0, 0, 0xffffffca }, /* mainOsc */
        { 10, OSC_FLAG_ABSOLUTE_PITCH, 0xba028 }, /* lfo */
        { 47, 529, 896, 4742, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 9, 469, 953, 2333, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 3, 136, 889, 1819, 26, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7485a7, 0x7b7d, 0 | SVFILTER_FLAG_HIGH_PASS },
        0xb7ad4d0, /* phaseModDepth */
        0x122e, /* lfoPitchModDepth */
        0x1961, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x10c27, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | HYBRID_FLAG_MODOSC_USE_MAINENV | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Claves */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Claves
    },
    { /* Low Conga */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoConga
    },
    { /* Hand Clap */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HandClap
    },
    { /* Ocarina_PanFluteWavset */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 559, 123, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_PanFlute_Sculpture
    },
    { /* Hi Bongo */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiBongo
    },
    { /* Open Hi-Hat */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_OpenHiHat
    },
    { /* Squee_LeapsterArcade */
        { 6, 0, 0x15555 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 6, 0, 0x42aaa }, /* lfo */
        { 2, 496, 716, 519, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 765, 496, 716, 1258, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 3, 496, 716, 5970, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_squee_LeapstrArcade_5_11
    },
    { /* Bagpipe_ReedOrganWavetabl */
        { 6, 0, 0x956f }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 6, 0, 0x22a3 }, /* lfo */
        { 35, 2630, 848, 10000, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 140, 10000, 1023, 8710, 0, ADSR_FLAG_LOOP_SUSTAIN | 0 | 0 | 0 }, /* mainEnv */
        { 206, 212, 1023, 106, 109, ADSR_FLAG_LOOP_SUSTAIN | 0 | 0 | 0 }, /* ampEnv */
        { 0x62e7b5b, 0xd555, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x1c559d3a, /* phaseModDepth */
        0x1280, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x4c8, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ReedOrgan_EXSAccordian
    },
    { /* High Tom */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiTom
    },
    { /* Electric Guitar(muted) */
        { 4, 0, 0x5e }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 1, 42, 532, 981, 30, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 3, 301, 474, 529, 52, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x6de9505, 0x10000, 0 | 0 },
        0x5bb1f98b, /* phaseModDepth */
        0x137, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xf7d9, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_MutedGuitar_LP
    },
    { /* Lead 7 (fifths) */
        { 6, 0, 0x9758 }, /* modOsc */
        { 6, 0, 0x0 }, /* mainOsc */
        { 5, OSC_FLAG_ABSOLUTE_PITCH, 0x55d5c }, /* lfo */
        { 2, 2630, 1023, 559, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 596, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 685, 122, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x7fffffff, /* phaseModDepth */
        0x198, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Low Wood Block */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoWoodBlock
    },
    { /* Acoustic Guitar(steel) */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 3, 32, 460, 412, 41, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 3908, 0, 596, 69, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x6de9505, 0x10000, 0 | 0 },
        0x0, /* phaseModDepth */
        0xea, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xf7d9, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_GtrSteel_Mob
    },
    { /* Closed Hi-Hat */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Clsd_HiHat
    },
    { /* Seashore_FM */
        { 4, 0, 0x0 }, /* modOsc */
        { 8, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 228, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 839, 496, 716, 4698, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 6194, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Open Triangle */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_OpenTriangle
    },
    { /* Wah_LeapsterArcade */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Wah_Arcade
    },
    { /* Electric Piano 1 Pogo */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 870, 123, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ElectricPiano_Dry
    },
    { /* Pizzicato Strings */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 127, 519, 1367, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_PizzicatoStrings
    },
    { /* Tango Accordian_CasioAccord */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 11, 0, 0x862a3 }, /* lfo */
        { 2, 2630, 882, 903, 71, ADSR_FLAG_LOOP_SUSTAIN | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 106, 212, 713, 93, 58, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xbd3b7c, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x439, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x208, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Accordion_Casio
    },
    { /* Mute Cuica */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiCuica
    },
    { /* Mute Hi Conga */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_MuteHiConga
    },
    { /* Flute_Sculpture */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, ADSR_FLAG_LOOP_SUSTAIN | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 343, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x2cd, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_flute_Sculpture
    },
    { /* Slap Bass 2_BassLegends */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SlapBass2_BassLegends
    },
    { /* Tuba */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 0, 559, 123, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Tuba_LP
    },
    { /* SynthBrass 2 */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 5, OSC_FLAG_ABSOLUTE_PITCH, 0xf8807 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 559, 123, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x1b8, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x3a7, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_BrassSynth2_Sc
    },
    { /* SynthBrass 1 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x6bbf2 }, /* lfo */
        { 99, 386, 880, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 2, 99, 911, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 99, 798, 630, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x368a46f, 0x20000, 0 | 0 },
        0x3f0a4087, /* phaseModDepth */
        0x1c9, /* lfoPitchModDepth */
        0x436, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xe86d, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_BrassSynth1_Sc
    },
    { /* brightlingsVoices_Jim */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_brightlings_Jim
    },
    { /* spacy bow FM */
        { 4, 0, 0x0 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 9, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 5649, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 17, 496, 716, 6081, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 672, 13, 417, 10000, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x118c, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Tubular Bells */
        { 4, 0, 0x1b8f3 }, /* modOsc */
        { 0, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 2, 51, 953, 1037, 54, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 11, 43, 960, 3075, 43, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x30000, 0 | 0 },
        0x86c2a8a, /* phaseModDepth */
        0xcb, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* WarpBell_FM */
        { 5, 0, 0x10000 }, /* modOsc */
        { 0, 0, 0x0 }, /* mainOsc */
        { 7, OSC_FLAG_ABSOLUTE_PITCH, 0x0 }, /* lfo */
        { 10, 496, 716, 870, 24, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 717, 27, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 10, 496, 716, 1342, 38, 0 | 0 | ADSR_FLAG_NO_WAIT | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0xbe54976, 0x0, 0 | 0 },
        0x7fffffff, /* phaseModDepth */
        0x55, /* lfoPitchModDepth */
        0x5278, /* lfoCutoffModDepth */
        0x127d, /* envPitchModDepth */
        0xc02d, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Side Stick */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Sidestick
    },
    { /* Splash Cymbal */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SplashCymbal
    },
    { /* LongSynth_LeapsterArcade */
        { 4, 0, 0x0 }, /* modOsc */
        { 7, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 21, 496, 728, 1527, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1614, 496, 566, 886, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 496, 760, 3499, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e6fb1f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Pad 1 (new age) */
        { 4, 0, 0xbc }, /* modOsc */
        { 1, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x43b4f }, /* lfo */
        { 2, 43, 474, 1037, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 9, 195, 883, 1527, 59, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x10a30fe, 0x20036, 0 | 0 },
        0x17e1aa50, /* phaseModDepth */
        0x187, /* lfoPitchModDepth */
        0x4f33, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x12a9e, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Contrabass */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_DoubleBass
    },
    { /* Banjo */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 0, 1258, 123, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Banjo_Boss
    },
    { /* Chinese Cymbal */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ChinaCymbal
    },
    { /* Tinkle Bell_FM */
        { 4, 0, 0x0 }, /* modOsc */
        { 4, 0, 0x0 }, /* mainOsc */
        { 10, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 2465, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 5970, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 3836, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x14887c8, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x2f263dc1, /* phaseModDepth */
        0x846, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | HYBRID_FLAG_USE_RING_MOD | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        4, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Low Timbale */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoTimbale
    },
    { /* Maracas */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Maracas
    },
    { /* creatures_POWTheme */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 5, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 27, 496, 716, 816, 63, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xaa3b0c, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_creatures_POWTheme
    },
    { /* Acoustic Snare */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_AcSnare
    },
    { /* Soprano Sax */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 5, 0, 0xaaa }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x1c7b, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SopranoSax
    },
    { /* Low Bongo */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LowBongo
    },
    { /* Timpani_Noisy */
        { 9, 0, 0x11742 }, /* modOsc */
        { 0, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0xfffc0000 }, /* lfo */
        { 2, 1431, 287, 839, 69, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 4, 765, 422, 5395, 130, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x565ec85, 0x10000, 0 | 0 },
        0x3a37483e, /* phaseModDepth */
        0x8f, /* lfoPitchModDepth */
        0x37e3, /* lfoCutoffModDepth */
        0x2ec, /* envPitchModDepth */
        0xab2d, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Pan Flute_Sculpture */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 1037, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_PanFlute_Sculpture
    },
    { /* Trumpet */
        { 4, 0, 0x111 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x6bbf2 }, /* lfo */
        { 2, 412, 896, 153, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 99, 889, 343, 38, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x147, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Trumpet_Mob
    },
    { /* Telephone Ring_FM */
        { 11, 0, 0x1aac4 }, /* modOsc */
        { 4, 0, 0x20000 }, /* mainOsc */
        { 11, 0, 0x2aaa }, /* lfo */
        { 2, 2630, 0, 903, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 212, 1023, 1037, 109, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xbd3b7c, 0x0, 0 | 0 },
        0x70ebd27, /* phaseModDepth */
        0x2924, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Lead 3 (calliope)_b */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 559, 122, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Calliope_LP
    },
    { /* Bass Drum 1 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_BassDrum
    },
    { /* Low Agogo */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoAgogo
    },
    { /* Koto_Sculpture */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f82883, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Koto_Sculpture
    },
    { /* Percussive Organ */
        { 7, 0, 0x100c4 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 5, OSC_FLAG_ABSOLUTE_PITCH, 0x70000 }, /* lfo */
        { 3, 218, 525, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 5, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 3, 99, 1023, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x5ab9625c, /* phaseModDepth */
        0x55, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_PercOrgan_EVB3
    },
    { /* Muted Trumpet */
        { 4, 0, 0x111 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x6bbf2 }, /* lfo */
        { 1, 153, 890, 153, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 19, 12, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 30, 153, 798, 153, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x324279e, 0x6aaa, 0 | 0 },
        0x67cd0e34, /* phaseModDepth */
        0x187, /* lfoPitchModDepth */
        0xb46, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x174c8, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Trumpet_Mute_Mob
    },
    { /* Orchestral Harp */
        { 4, 0, 0x3ac }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 3, 58, 972, 2050, 31, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 3, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 6, 3280, 1023, 2187, 95, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x1bca136, 0x10000, 0 | 0 },
        0x57485c6, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xf7d9, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Harp
    },
    { /* Electric Piano 2 Pogo */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 870, 123, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ElectricPiano_Soft
    },
    { /* ZingBounce */
        { 7, 0, 0x0 }, /* modOsc */
        { 6, 0, 0x0 }, /* mainOsc */
        { 5, 0, 0x0 }, /* lfo */
        { 46, 496, 716, 4655, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 7, 496, 716, 3836, 54, ADSR_FLAG_LOOP_SUSTAIN | 0 | 0 | 0 }, /* mainEnv */
        { 195, 496, 716, 3499, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0xac0067b, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x37eb0576, /* phaseModDepth */
        0x9e, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x2ec, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | HYBRID_FLAG_USE_RING_MOD | 0 | 0 | 0, /* flags */
        5, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Electric Guitar(clean)_b */
        { 7, 0, 0xbc }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 1, 32, 934, 1922, 71, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 1721, 0, 559, 66, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x6de9505, 0x10000, 0 | 0 },
        0x175bd3ea, /* phaseModDepth */
        0x147, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x1af, /* envPitchModDepth */
        0xf7d9, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ElectricGtr2_EXS
    },
    { /* Electric Bass (finger) */
        { 6, 0, 0x10036 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x64a62 }, /* lfo */
        { 1, 66, 38, 602, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 3664, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 1258, 1023, 386, 69, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x324279e, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0xf9, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x263, /* envPitchModDepth */
        0xab2d, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_FingerBass_LP
    },
    { /* High Timbale */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiTimbale
    },
    { /* Celesta */
        { 4, 0, 0x31111 }, /* modOsc */
        { 0, 0, 0x0 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 2, 816, 218, 1037, 44, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 39, 1023, 3664, 74, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x30000, 0 | 0 },
        0x7a75c7a, /* phaseModDepth */
        0x147, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | 0 | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Low Floor Tom */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LoFlrTom
    },
    { /* Recorder_SculptureFlute */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 150, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x321422f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x2cd, /* lfoPitchModDepth */
        0x410, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_flute_Sculpture
    },
    { /* Fretless Bass */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_FretlessBass
    },
    { /* Pedal Hi-Hat */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Pdl_HiHat
    },
    { /* Rock Organ */
        { 6, 0, 0x20083 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x78b9f }, /* lfo */
        { 212, 2354, 921, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 99, 1023, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x2504cf5, 0x0, 0 | 0 },
        0x5ea9a205, /* phaseModDepth */
        0x4de, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x1af, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_RockOrgan_EVB3
    },
    { /* Lead 2 (sawtooth) */
        { 6, 0, 0x36 }, /* modOsc */
        { 6, 0, 0xffffffca }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x752f5 }, /* lfo */
        { 10, 99, 960, 928, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 5199, 960, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 99, 986, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x4f4fb3c5, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Pad 2 (warm) */
        { 5, 0, 0x6d }, /* modOsc */
        { 6, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x558de }, /* lfo */
        { 162, 1247, 1023, 1247, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 27, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 99, 195, 931, 1527, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x14887c8, 0x20036, 0 | 0 },
        0x7fffffff, /* phaseModDepth */
        0x137, /* lfoPitchModDepth */
        0x1866, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xd12f, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Acoustic Grand_b */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 0, 839, 8, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 0, 2207, 15, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_000_GrandPiano
    },
    { /* Open Hi Conga */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiConga
    },
    { /* Dulcimer_EX12str */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Dulcimer_EXS12Str
    },
    { /* Blown Bottle_SculptPanFlutWvtb */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 8, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 280, 15, 956, 870, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x335ac43, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x464b, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_PanFlute_Sculpture
    },
    { /* Violin */
        { 4, 0, 0x5 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x72379 }, /* lfo */
        { 5, 99, 1023, 3664, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 69, 1023, 440, 17, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x4d4b99e, /* phaseModDepth */
        0x58b, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ViolinBow_Mob
    },
    { /* Guitar Harmonics_c */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 1046, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_AcousticGuitarHarmonics
    },
    { /* Music Box */
        { 4, 0, 0x215c0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 1, 248, 256, 1527, 35, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 3, 39, 927, 3280, 12, 0 | 0 | ADSR_FLAG_NO_WAIT | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x4118779, 0x30000, 0 | 0 },
        0x1a97c71, /* phaseModDepth */
        0x8f, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_MusicBox_LT
    },
    { /* Clarinet */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 13, 250, 962, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 0, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 99, 1023, 365, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0xea, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Clarinet_Mob
    },
    { /* RobotAnimal_FM */
        { 7, 0, 0x0 }, /* modOsc */
        { 2, 0, 0x0 }, /* mainOsc */
        { 11, 0, 0x0 }, /* lfo */
        { 61, 496, 716, 99, 0, ADSR_FLAG_LOOP_SUSTAIN | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 19, 496, 716, 487, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 559, 2465, 841, 816, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x6b6323d9, /* phaseModDepth */
        0x5555, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0xf656, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | HYBRID_FLAG_MODOSC_USE_MAINENV | 0 | 0, /* flags */
        3, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Reed Organ_EXSAccordion */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0xccc }, /* lfo */
        { 15, 2207, 716, 99, 153, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 53, 3341, 956, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7122549, 0x6aaaa, 0 | 0 },
        0x0, /* phaseModDepth */
        0x9a7, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x290, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ReedOrgan_EXSAccordian
    },
    { /* MiniMeMoog */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_MiniMeMoog_FE
    },
    { /* Crash Cymbal 2 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Crash2
    },
    { /* Taiko Drum_FM */
        { 8, 0, 0x0 }, /* modOsc */
        { 0, 0, 0x0 }, /* mainOsc */
        { 11, 0, 0x0 }, /* lfo */
        { 1, 3, 344, 34, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 10, 496, 716, 816, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 10, 496, 716, 1614, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x1ae3e6e, 0x0, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x4bb88620, /* phaseModDepth */
        0x3a6b, /* lfoPitchModDepth */
        0x1942, /* lfoCutoffModDepth */
        0xd182, /* envPitchModDepth */
        0x12538, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | HYBRID_FLAG_USE_RING_MOD | 0 | HYBRID_FLAG_ENABLE_FILTER | HYBRID_FLAG_IGNORE_NOTE_OFF, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* French Horn */
        { 4, 0, 0x111 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x6bbf2 }, /* lfo */
        { 2, 412, 896, 153, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 99, 889, 343, 38, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x5f2a4bbc, /* phaseModDepth */
        0x187, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_FrHorn
    },
    { /* Crash Cymbal 1 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Crash1
    },
    { /* Acoustic Bass Drum */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f82883, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_AcBassDrum
    },
    { /* DATpolitics */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 500, 716, 100, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 500, 716, 100, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 500, 716, 100, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7fde913, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_DATpolitics
    },
    { /* Breath Noise_FM_RedNoise */
        { 9, 0, 0x19 }, /* modOsc */
        { 9, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 2, 2630, 848, 10000, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 212, 1023, 1037, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0xbd3b7c, 0x0, 0 | 0 },
        0x4cc32549, /* phaseModDepth */
        0x4993, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0xacec, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* DistGuitar_Muted */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 100, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7fde913, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_DistGuitar_Muted
    },
    { /* Drawbar Organ */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_DrawbarOrgan
    },
    { /* Sweepy */
        { 5, 0, 0x0 }, /* modOsc */
        { 0, 0, 0x0 }, /* mainOsc */
        { 5, 0, 0x0 }, /* lfo */
        { 43, 10000, 444, 6137, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 678, 10000, 551, 3836, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 92, 496, 532, 3311, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f82883, 0x0, 0 | 0 },
        0x6ccba1c7, /* phaseModDepth */
        0x11dc, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | 0 | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Synth Bass 1 */
        { 6, 0, 0x10036 }, /* modOsc */
        { 7, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x64a62 }, /* lfo */
        { 1, 232, 218, 602, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 3664, 1023, 2187, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 2, 928, 210, 51, 57, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x62637e, 0x20000, 0 | 0 },
        0x5985d939, /* phaseModDepth */
        0x2bb, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x220ba, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Pad 3 (polysynth) */
        { 7, 0, 0x6d }, /* modOsc */
        { 6, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x558de }, /* lfo */
        { 27, 1247, 1023, 1247, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 27, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 24, 195, 931, 1527, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x20ca4ce, 0x20036, 0 | 0 },
        0x5855d54b, /* phaseModDepth */
        0x137, /* lfoPitchModDepth */
        0xc4b, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x1a313, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Kalimba */
        { 4, 0, 0xffff4aab }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 6, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 1, 43, 287, 248, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 2, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 23, 953, 717, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x7e1480f, 0x30000, 0 | 0 },
        0x465b270, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Kalimba_LP
    },
    { /* Short Whistle */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ShortWhistle
    },
    { /* Long Whistle */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_LongWhistle
    },
    { /* Woodblock */
        { 4, 0, 0xffff8a63 }, /* modOsc */
        { 12, 0, 0x10000 }, /* mainOsc */
        { 6, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 1, 19, 64, 153, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 2465, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 2, 248, 1023, 282, 23, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x565ec85, 0x10000, 0 | 0 },
        0x1995e41e, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x37e3, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xab2d, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Woodblocks_EXS
    },
    { /* 000_GrandPiano */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 835, 3341, 84, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 30, 700, 452, 94, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f82883, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        2, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_000_GrandPiano
    },
    { /* RobotHalo */
        { 4, 0, 0x0 }, /* modOsc */
        { 1, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 1, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 2, 496, 716, 4092, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 672, 496, 716, 4092, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x4bb88620, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Steel Drums */
        { 4, 0, 0x196fa }, /* modOsc */
        { 12, 0, 0x10000 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x985f2 }, /* lfo */
        { 3, 816, 492, 248, 43, 0 | 0 | 0 | 0 }, /* modEnv */
        { 2, 440, 1023, 3075, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 2, 1527, 0, 2050, 26, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x13a8df20, /* phaseModDepth */
        0x167, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SteelDrum_LP
    },
    { /* Hi-Mid Tom */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_HiMidTom
    },
    { /* Ride Bell */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_RideBell
    },
    { /* Vibraphone */
        { 4, 0, 0x35616 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 11, 66, 1023, 1721, 10, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 2, 26, 941, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 12, 27, 1023, 2050, 45, 0 | 0 | ADSR_FLAG_NO_WAIT | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x7e1480f, 0x30000, 0 | 0 },
        0x7a75c7a, /* phaseModDepth */
        0x55, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Vibraphone_LP
    },
    { /* Honky-Tonk */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 365, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Piano_HonkyTonk
    },
    { /* Distortion Guitar_VSL */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7ecb18b, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ODGuitarSust_VSL
    },
    { /* SynthStrings 2 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SynthStrings2
    },
    { /* SynthStrings 1 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_SynthString1
    },
    { /* vocoder_Logic */
        { 4, 0, 0x0 }, /* modOsc */
        { 3, 0, 0x0 }, /* mainOsc */
        { 10, OSC_FLAG_ABSOLUTE_PITCH, 0x84b90 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 43, 496, 716, 2534, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x63aa23, 0x3549a, 0 | 0 },
        0x945b870, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0xfffe, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xa787, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Acoustic Guitar(nylon) */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x5f7f8 }, /* lfo */
        { 3, 32, 460, 412, 41, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 3664, 0, 559, 99, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x6de9505, 0x10000, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xf7d9, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_GtrNylon_Mob
    },
    { /* Ride Cymbal 2 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Ride2
    },
    { /* Ride Cymbal 1 */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7f26b57, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Ride1
    },
    { /* Perculator_LogiSyn */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 1, 496, 716, 12, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 496, 716, 636, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Perculator_LogiSyn
    },
    { /* Cello */
        { 6, 0, 0x19 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x722a3 }, /* lfo */
        { 2, 2630, 0, 321, 96, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 1, 10000, 1023, 559, 123, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8cfd03f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x411, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0xb5cc, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_CelloBowed_Mob
    },
    { /* Oboe */
        { 7, 0, 0x36 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x6bbf2 }, /* lfo */
        { 19, 99, 829, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 25, 10, 909, 176, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 232, 1023, 248, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x8f765a, 0x20000, 0 | 0 },
        0x537e8274, /* phaseModDepth */
        0x187, /* lfoPitchModDepth */
        0x6ca, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x271d, /* envCutoffModDepth */
        0 | 0 | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Oboe_Mob
    },
    { /* Clav_Pogo */
        { 4, 0, 0x15 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 5, OSC_FLAG_ABSOLUTE_PITCH, 0x56666 }, /* lfo */
        { 7, 1527, 602, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 6, 1247, 1023, 38, 0, 0 | 0 | 0 | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x2b2f6430, /* phaseModDepth */
        0x9e, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Clavinet_EVD6
    },
    { /* Glockenspiel */
        { 4, 0, 0xe666 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 9, OSC_FLAG_ABSOLUTE_PITCH, 0x62b97 }, /* lfo */
        { 2, 47, 941, 440, 46, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* modEnv */
        { 1, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 4, 39, 1023, 3664, 74, 0 | 0 | ADSR_FLAG_NO_WAIT | ADSR_FLAG_WAIT_DECAY }, /* ampEnv */
        { 0x7e1480f, 0x30000, 0 | 0 },
        0x95395e8, /* phaseModDepth */
        0x147, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x6a7f, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Glockenspiel_QT
    },
    { /* Harmonica */
        { 5, 0, 0x1002f }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 5, OSC_FLAG_ABSOLUTE_PITCH, 0x73a60 }, /* lfo */
        { 5, 4168, 896, 92, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 3, 4446, 902, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 27, 4446, 1023, 81, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x707bcdc, 0xfef36, SVFILTER_FLAG_ABS_PITCH | 0 },
        0x19213cfa, /* phaseModDepth */
        0xf9, /* lfoPitchModDepth */
        0x215b, /* lfoCutoffModDepth */
        0x54, /* envPitchModDepth */
        0xc838, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Harmonica_EXS
    },
    { /* Reverse Cymbal_FM */
        { 11, 0, 0x4b0d4e }, /* modOsc */
        { 3, 0, 0x4b0000 }, /* mainOsc */
        { 7, 0, 0x4b0000 }, /* lfo */
        { 61, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 35, 10000, 990, 0, 0, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* mainEnv */
        { 228, 8091, 1003, 10000, 11, 0 | 0 | ADSR_FLAG_NO_WAIT | 0 }, /* ampEnv */
        { 0xaf42318, 0x105555, 0 | SVFILTER_FLAG_HIGH_PASS },
        0x7adb0e0f, /* phaseModDepth */
        0x3a6b, /* lfoPitchModDepth */
        0xfffe, /* lfoCutoffModDepth */
        0xacec, /* envPitchModDepth */
        0x2b061, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | HYBRID_FLAG_USE_RING_MOD | 0 | HYBRID_FLAG_ENABLE_FILTER | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Skakuhachi_SculptureShakWvtb */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 8, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 5, 17, 713, 440, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_Shakuhachi_Sculptur
    },
    { /* Viola */
        { 4, 0, 0x5 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x72379 }, /* lfo */
        { 5, 99, 1023, 3664, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 10000, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 0, 69, 1023, 440, 17, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x0, 0x0, 0 | 0 },
        0x4d4b99e, /* phaseModDepth */
        0x1a8, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_ViolaBow_Mob
    },
    { /* Slap Bass 1 */
        { 7, 0, 0xda }, /* modOsc */
        { 1, 0, 0x0 }, /* mainOsc */
        { 4, OSC_FLAG_ABSOLUTE_PITCH, 0x72379 }, /* lfo */
        { 3, 469, 0, 202, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 1, 3280, 1023, 10000, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 7, 765, 0, 112, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x324279e, 0x0, 0 | 0 },
        0x175bd3ea, /* phaseModDepth */
        0x22e, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x1db, /* envPitchModDepth */
        0xab2d, /* envCutoffModDepth */
        HYBRID_FLAG_USE_PHASE_MOD | 0 | 0 | 0 | 0, /* flags */
        0, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
    },
    { /* Electric Guitar(jazz) */
        { 4, 0, 0x0 }, /* modOsc */
        { 12, 0, 0x0 }, /* mainOsc */
        { 4, 0, 0x0 }, /* lfo */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* modEnv */
        { 10, 496, 716, 99, 0, 0 | 0 | 0 | 0 }, /* mainEnv */
        { 10, 496, 716, 469, 0, 0 | 0 | 0 | 0 }, /* ampEnv */
        { 0x7e1480f, 0x0, 0 | 0 },
        0x0, /* phaseModDepth */
        0x0, /* lfoPitchModDepth */
        0x0, /* lfoCutoffModDepth */
        0x0, /* envPitchModDepth */
        0x0, /* envCutoffModDepth */
        0 | 0 | 0 | 0 | 0, /* flags */
        1, /* boostLog2 */
        60, /* keyCenter */
        128, /* keyScalar */
        SPMIDI_WAVESET_JazzGuitar
    },
};
#define SS_NUM_VALID_PRESETS (173)

static ProgramBankMap_t sMelodicBank_0 = {{0}, 0, 0, 0 };
static unsigned char sMelodicBank_0_ProgramMap[GMIDI_NUM_PROGRAMS] =
{
    20, /* Acoustic Grand */
    121, /* Acoustic Grand_b */
    148, /* 000_GrandPiano */
    154, /* Honky-Tonk */
    69, /* Electric Piano 1 Pogo */
    108, /* Electric Piano 2 Pogo */
    42, /* HarpsichordWave */
    165, /* Clav_Pogo */
    113, /* Celesta */
    166, /* Glockenspiel */
    127, /* Music Box */
    153, /* Vibraphone */
    23, /* Marimba */
    37, /* xylo_sculpture */
    81, /* Tubular Bells */
    123, /* Dulcimer_EX12str */
    140, /* Drawbar Organ */
    105, /* Percussive Organ */
    118, /* Rock Organ */
    16, /* Church Organ EVB3 */
    130, /* Reed Organ_EXSAccordion */
    31, /* Accordian */
    167, /* Harmonica */
    71, /* Tango Accordian_CasioAccord */
    159, /* Acoustic Guitar(nylon) */
    64, /* Acoustic Guitar(steel) */
    172, /* Electric Guitar(jazz) */
    110, /* Electric Guitar(clean)_b */
    61, /* Electric Guitar(muted) */
    155, /* Distortion Guitar_VSL */
    139, /* DistGuitar_Muted */
    126, /* Guitar Harmonics_c */
    10, /* Acoustic Bass */
    111, /* Electric Bass (finger) */
    131, /* MiniMeMoog */
    116, /* Fretless Bass */
    171, /* Slap Bass 1 */
    75, /* Slap Bass 2_BassLegends */
    142, /* Synth Bass 1 */
    46, /* Synth Bass 2_d */
    125, /* Violin */
    170, /* Viola */
    163, /* Cello */
    87, /* Contrabass */
    1, /* Tremolo Strings Wave */
    70, /* Pizzicato Strings */
    107, /* Orchestral Harp */
    97, /* Timpani_Noisy */
    11, /* String Ensembles 1 */
    9, /* String Ensembles 2 */
    157, /* SynthStrings 1 */
    156, /* SynthStrings 2 */
    158, /* vocoder_Logic */
    79, /* brightlingsVoices_Jim */
    93, /* creatures_POWTheme */
    0, /* Orchestra Hit_Fly */
    99, /* Trumpet */
    22, /* Trombone */
    76, /* Tuba */
    106, /* Muted Trumpet */
    134, /* French Horn */
    7, /* Brass Section_d */
    78, /* SynthBrass 1 */
    77, /* SynthBrass 2 */
    95, /* Soprano Sax */
    41, /* Alto Sax */
    30, /* Tenor Sax */
    30, /* Tenor Sax */
    164, /* Oboe */
    164, /* Oboe */
    33, /* Bassoon */
    128, /* Clarinet */
    36, /* Piccolo */
    74, /* Flute_Sculpture */
    115, /* Recorder_SculptureFlute */
    98, /* Pan Flute_Sculpture */
    124, /* Blown Bottle_SculptPanFlutWvtb */
    169, /* Skakuhachi_SculptureShakWvtb */
    58, /* Squee_LeapsterArcade */
    55, /* Ocarina_PanFluteWavset */
    40, /* Lead 1 (square) */
    119, /* Lead 2 (sawtooth) */
    101, /* Lead 3 (calliope)_b */
    19, /* Gameboy_LogicSynth */
    162, /* Perculator_LogiSyn */
    141, /* Sweepy */
    62, /* Lead 7 (fifths) */
    47, /* Lead 8 (octaves) */
    86, /* Pad 1 (new age) */
    120, /* Pad 2 (warm) */
    143, /* Pad 3 (polysynth) */
    51, /* Pad 4 BubbleBeauty */
    80, /* spacy bow FM */
    109, /* ZingBounce */
    149, /* RobotHalo */
    25, /* Wank_LeapsterArcade */
    50, /* WhiteNoise_FilteredWind_FM */
    15, /* KittyMeow_LeapArcade */
    28, /* Autechre_FMVersion */
    4, /* FX 4 (atmosphere)_KM */
    68, /* Wah_LeapsterArcade */
    137, /* DATpolitics */
    85, /* LongSynth_LeapsterArcade */
    2, /* buzzBee_FM */
    26, /* Sitar Wave */
    88, /* Banjo */
    8, /* Shamisen_Banjo */
    104, /* Koto_Sculpture */
    144, /* Kalimba */
    59, /* Bagpipe_ReedOrganWavetabl */
    6, /* Fiddle_usingViolaWaveTab */
    5, /* DistGuitar_Staccato */
    90, /* Tinkle Bell_FM */
    82, /* WarpBell_FM */
    150, /* Steel Drums */
    147, /* Woodblock */
    133, /* Taiko Drum_FM */
    44, /* Melodic Tom_FM */
    3, /* Synth Drum_FM */
    168, /* Reverse Cymbal_FM */
    13, /* DistGuitar_PickScrape */
    138, /* Breath Noise_FM_RedNoise */
    66, /* Seashore_FM */
    27, /* Tremelo_LeapsterArcade */
    100, /* Telephone Ring_FM */
    129, /* RobotAnimal_FM */
    48, /* Applause_FM */
    45, /* Gunshot_SpaceShooter */
};

static ProgramBankMap_t sDrumProgram_0_0 = {{0}, 0, 0, 0 };
static unsigned char sDrumProgram_0_0_ProgramMap[ GMIDI_NUM_DRUMS ] =
{
    136, /* Acoustic Bass Drum */
    102, /* Bass Drum 1 */
    83, /* Side Stick */
    94, /* Acoustic Snare */
    54, /* Hand Clap */
    14, /* Electric Snare */
    114, /* Low Floor Tom */
    65, /* Closed Hi-Hat */
    18, /* High Floor Tom */
    117, /* Pedal Hi-Hat */
    43, /* Low Tom */
    57, /* Open Hi-Hat */
    39, /* Low-Mid Tom */
    151, /* Hi-Mid Tom */
    135, /* Crash Cymbal 1 */
    60, /* High Tom */
    161, /* Ride Cymbal 1 */
    89, /* Chinese Cymbal */
    152, /* Ride Bell */
    24, /* Tambourine */
    84, /* Splash Cymbal */
    49, /* Cowbell */
    132, /* Crash Cymbal 2 */
    35, /* Vibraslap */
    160, /* Ride Cymbal 2 */
    56, /* Hi Bongo */
    96, /* Low Bongo */
    73, /* Mute Hi Conga */
    122, /* Open Hi Conga */
    53, /* Low Conga */
    112, /* High Timbale */
    91, /* Low Timbale */
    12, /* High Agogo */
    103, /* Low Agogo */
    38, /* Cabasa */
    92, /* Maracas */
    145, /* Short Whistle */
    146, /* Long Whistle */
    29, /* Short Guiro */
    21, /* Long Guiro */
    52, /* Claves */
    32, /* Hi Wood Block */
    63, /* Low Wood Block */
    72, /* Mute Cuica */
    34, /* Open Cuica */
    17, /* Mute Triangle */
    67, /* Open Triangle */
};
static unsigned char sDrumProgram_0_0_Pitches[ GMIDI_NUM_DRUMS ] =
{
    60, /* Acoustic Bass Drum */
    60, /* Bass Drum 1 */
    60, /* Side Stick */
    60, /* Acoustic Snare */
    60, /* Hand Clap */
    60, /* Electric Snare */
    60, /* Low Floor Tom */
    60, /* Closed Hi-Hat */
    60, /* High Floor Tom */
    60, /* Pedal Hi-Hat */
    60, /* Low Tom */
    60, /* Open Hi-Hat */
    60, /* Low-Mid Tom */
    60, /* Hi-Mid Tom */
    60, /* Crash Cymbal 1 */
    60, /* High Tom */
    60, /* Ride Cymbal 1 */
    60, /* Chinese Cymbal */
    60, /* Ride Bell */
    60, /* Tambourine */
    60, /* Splash Cymbal */
    60, /* Cowbell */
    60, /* Crash Cymbal 2 */
    60, /* Vibraslap */
    60, /* Ride Cymbal 2 */
    60, /* Hi Bongo */
    60, /* Low Bongo */
    60, /* Mute Hi Conga */
    60, /* Open Hi Conga */
    60, /* Low Conga */
    60, /* High Timbale */
    60, /* Low Timbale */
    60, /* High Agogo */
    60, /* Low Agogo */
    60, /* Cabasa */
    60, /* Maracas */
    60, /* Short Whistle */
    60, /* Long Whistle */
    60, /* Short Guiro */
    60, /* Long Guiro */
    60, /* Claves */
    60, /* Hi Wood Block */
    60, /* Low Wood Block */
    60, /* Mute Cuica */
    60, /* Open Cuica */
    60, /* Mute Triangle */
    60, /* Open Triangle */
};

void SS_LoadPresetOrchestra( void )
{
    sMelodicBank_0.presetMap = sMelodicBank_0_ProgramMap;
    SS_AddMelodicBankToList( &sMelodicBank_0 );

    sDrumProgram_0_0.pitches = sDrumProgram_0_0_Pitches;
    sDrumProgram_0_0.presetMap = sDrumProgram_0_0_ProgramMap;
    SS_AddDrumProgramToList( &sDrumProgram_0_0 );

}
#endif /* _SPMIDI_HYBRID_PRESETS_H */
