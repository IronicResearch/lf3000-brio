USB Event Demo

Revision: 1.0
Original Date: 10/15/2014

The USB Event Demo is a hybrid sample that uses certain aspects of OpenGLMovingSprite (OMS) sample and
HotSpotTriggetTest (HTT, with a slight modification) sample in addition to functionality that illustrates the
expected behavior sourrounding the camera connectivity with vision enabled applications.

By default the camera viewfinder is not being rendered to allow a better visual effect.

To turn viewfinder rendering on change line 2 of VTCHMainState.cpp to
#define RENDER_WITH_DISPLAY_MPI 1


At launch, in the sample's constructor, the presence of the camera is checked by polling the camera
presence using CCamerMPI::IsCameraPresent(). Please refer to lines 20-34 in the VirtualTouchApp.cpp

The sample will then continute to the main state (VTCHMainState.cpp). If ithe camera is present, the sample will
continue as normal and load the vision portion of the sample. If it is not present, the sample will display an
error message on screen(in this sample, it is only an on-screen image). Please refer to lines 123-144 in the
VTCHMainState.cpp.

At this point of the sample app, it is using USB events to determine whether or not the camera has been
connected or disconnected. Please refer to lines 262-287 in the VTCHMainState.cpp. This portion of the code sets
up an event listener for both controller events and USB events. The lines 264,265, and 275-284 are specific to
USB events.

USBDeviceState has a value of 0 (when a usb device is not connected) and 1 (when a usb device is connected)
kUSBDeviceConnected is also set accordingly

To determine wheter the camera has been connected/.disconnected, the bitwise 'and' is taken of USBDeviceState
and kUSBDeviceConnected

When the camera is connected: (data.USBDeviceState & kUSBDeviceConnected) = 1
When the camera is disconnected: (data.USBDeviceState & kUSBDeviceConnected) = 0

The requirement for when the camera was no connected at title launch is to display an error which was mentioned
previously. But the requirement for when the camera is connected when in this error state is to begin the title
normally. Please refer to lines 275-280 in the VTCHMainState.cpp.

The requirement for when the camera has been disconnected, is for the title to exit back to the base UI. Please
refer to lines 281-284 in the VTCHMainState.cpp.