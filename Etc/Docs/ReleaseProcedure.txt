====================================================
Release Proceedure for Lightning C++ Development Kit
====================================================

Note: Much of this will be automatable when we update to the newest Ubuntu
distribution, which should include a SVN 1.4 client.


============
Building
============
1) Open Eclipse
2) Right click on the Brio2 root node and select the "Team | Synchronize with Repository" menu item
3) In the Eclipse Syncronize Perspective, update to the latest source
4) In the Eclipse C/C++ Perspective, Right click on the Brio2 root and select "Properties".
	Click on the "C/C++ Make Properties" tab
5) Make sure the make command line is "scons -k type=publish"
	Make sure the Build Behavior fields are set as: Build (inc.) ""  and  Clean "-c"
6) Clean the Brio2 project
7) Build the Brio2 project
8) Verify that all unit tests pass and work with team to fix any failures
9) The end result is a fully populated "Brio2/Publish_SVN#" folder
10) Verify the build by creating a new C/C++ Standard Make project
    a) Change its C/C++ Make Properties to "scons -k type=emulation"
    b) Copy the contents of the /Brio2/Lightning/Samples/BrioCube folder into your new project folder
    c) Build the new project
    d) Run the new project.  Try pressing the arrow keys, the keypad + and -, Ins and Del keys and
       verify that audio, resource loading, and button events are working
11) Repeat step 10 using the contents of the other sample projects


=========================
Building via command line
=========================
Brio can be built directly from the command line instead of Eclipse with the
following commands:

	cd /path/to/Brio2
	rm -rf Build/
	rm -rf XBuild/
	rm -rf System/Temp/
	scons type=publish

The end result is a fully populated "Brio2/Publish_SVN#" folder.

===============
Smoke testing
===============
For step 3 of "Distributing" below, team members will extract the RC files from the zip and
repeat steps 11 & 12 above, changing line 34 of the SConstruct files from:
   '/home/lfu/workspace/Brio2/Publish'
to
   '/home/LightningSDK_<build#>'

===============
Distributing
===============
TBD
For now, do this:
1) Rename the "Publish" folder to be "LightningSDK_<build#>, where build # is the current
   SVN repository #.
2) Zip up the renamed folder
	cd /path/to/Brio2
	tar -czvf LightningSDK_<build#>.tar.gz LightningSDK_<build#>/
3) Create a folder on S:\Lightning called "LightningSDK_<build#>
4) Copy the zipped SDK into this folder.
5) Package up the Brio binaries in the nfsroot folder.
	cp /path/to/Brio2/Lightning/meta.inf ~/nfsroot/Didj/Base/Brio/
	cd ~/nfsroot/Didj/Base
	lfpkg -a create Brio
5) Copy the Brio-<version>.lfp package into the Lightning SDK folder on the S: drive. 
6) Tar up the nfsroot folder and name it nfsroot-svn<build#>.tar.gz
	cd ~
	mv nfsroot nfsroot-svn<build#>
	tar -czvf nfsroot-svn<build#>.tar.gz nfsroot-svn<build#>/
	mv nfsroot-svn<build#> nfsroot
7) Copy the nfsroot archive into the Lightning SDK folder on the S: drive.
8) Zip up the binaries for the current LinuxDist and name it embedded-svn<build#>.tar.gz
	cd /path/to/LinuxDist
	tar -czvf embedded-svn<build#>.tar.gz packages/ host_tools/lfpkg host_tools/lightning_install.py host_tools/backdoor 	
9) Copy the embedded binaries archive into the Lightning SDK folder on the S: drive.
10) Email a notice of the release to the other team members for a quick smoke test
11) After smoke testing, email notice to the following people: 
	Lovica Callisti; Chris Fernandes; Dennis O'Brien; Celso Aguiar; Emil Gilliam
    

