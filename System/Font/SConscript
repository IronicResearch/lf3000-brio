#-----------------------------------------------------------------------------
# Brio/System/Font
#-----------------------------------------------------------------------------
from Etc.Tools.SConsTools.Priv.LfUtils import *
import os

Import('env')

module_name	= 'Font'
mpi_name	= module_name + 'MPI'

#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
modsrcs		= Glob('*.cpp')
mpisrcs		= Glob(os.path.join('PublicMPI', '*.cpp'))
modlibs		= ['DebugMPI', 'KernelMPI', 'freetype']
mpilibs		= ['ModuleMPI']
						
#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Clone()
myenv.Append(CPPPATH = ['#ThirdParty/FreeType/Include',
						'#ThirdParty/FreeType/Include/freetype'])

myenv.Append(LIBPATH = ['#ThirdParty/FreeType/Libs/' + env['cpu']])
						
myenv.Append(CPPPATH=['Include'])
mymodule	= MakeMyModule(myenv, module_name, modsrcs, modlibs, kBuildModule)
mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, kBuildMPI)
Depends(mympi, mymodule)

targets = mympi or []

#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------
hwlibs		= env['platform'] == 'LF2000' and ['EGL', 'GLESv1_CM', 'vr5'] or ['opengles_lite']
ogllibs		= env['cpu'] == 'x86' and ['EGL', 'GLES_CM'] or hwlibs
if env['cpu'] == 'x86':
	myenv.Append(CPPPATH = ['#ThirdParty/PowerVR/Include'])
	myenv.Append(LIBPATH = ['#ThirdParty/PowerVR/Libs'])
	myenv.Append(RPATH   = myenv.Dir('#ThirdParty/FreeType/Libs/x86').abspath)
	myenv.Append(RPATH   = myenv.Dir('#ThirdParty/PowerVR/Libs').abspath)
elif env['platform'] == 'LF2000':
	myenv.Append(CPPPATH = ['#ThirdParty/Nexell/Include'])
	myenv.Append(LIBPATH = ['#ThirdParty/Nexell/Libs/' + env['cpu']])
else:
	myenv.Append(CPPPATH = ['#ThirdParty/MagicEyes/Include'])
	myenv.Append(LIBPATH = ['#ThirdParty/MagicEyes/Libs/' + env['cpu']])

if env['buildtests']:
	targets.append(RunMyTests(module_name, [], mpilibs + ogllibs + ['DisplayMPI', 'EventMPI'], myenv))

Return('targets')
