# source files.
SRC =  	Dsputil.cpp Dsputil2.cpp fir.cpp src.cpp util.cpp

OBJ = $(SRC:.cpp=.o)

OUT = arm/libdsputil.a

BASE = /scratchbox/compilers/arm-gcc4.1-uclibc20061004

# include directories
INCLUDES = -I. -I../include/ -I/usr/lib/gcc/i486-linux-gnu/4.1.2/include -I$(BASE)/include -I/usr/local/include 
# -I/usr/include/linux

# C++ compiler flags (-g -O2 -Wall)
# ARM flags -O2 -D_ARM_ASSEM -fsigned-char 
CCFLAGS = -O2 -D_ARM_ASSEM -fsigned-char

# compiler
# x86: g++   ARM: arm-linux-gcc
CCC = arm-linux-gcc

# library paths
LIBS = -lm
# -L../ -L/usr/local/lib 

# compile flags
LDFLAGS = -g

.SUFFIXES: .cpp

default: dep $(OUT)

.cpp.o:
	$(CCC) $(INCLUDES) $(CCFLAGS) -c $< -o $@

$(OUT): $(OBJ)
	ar rcs $(OUT) $(OBJ)

depend: dep

dep:
	makedepend -- $(CFLAGS) -- $(INCLUDES) $(SRC)

clean:
	rm -f $(OBJ) Makefile.bak 
#	rm -f $(OBJ) $(OUT) Makefile.bak 
