#-----------------------------------------------------------------------------
# Brio/System/Event
#-----------------------------------------------------------------------------
from Etc.Tools.SConsTools.Priv.LfUtils import *
import os

Import('env')

module_name	= 'Event'
mpi_name	= module_name + 'MPI'

#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
if env['cpu'] == 'x86':
	emulibs		= ['X11']
	modsrcs		= Glob('*.cpp') + Glob( os.path.join('Emulation', '*.cpp') )

else:
	emulibs		= []
	modsrcs		= Glob('*.cpp') + Glob( os.path.join( env['platform'], '*.cpp') )
	
mpisrcs		= Glob(os.path.join('PublicMPI', '*.cpp'))
modlibs		= ['Utility', 'ButtonMPI', 'PowerMPI', 'USBDeviceMPI', 'CartridgeMPI', 'AccelerometerMPI', 'pthread'] + emulibs
mpilibs		= ['ModuleMPI','KernelMPI']

#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Clone()
myenv.Append(CPPPATH=['Include'])
mymodule	= MakeMyModule(myenv, module_name, modsrcs, modlibs, kBuildModule)
mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, kBuildMPI)
Depends(mympi, mymodule)

targets = mympi or []
#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------
if env['buildtests']:
	targets.append(RunMyTests(module_name, [], mpilibs, myenv))

Return('targets')
