#-----------------------------------------------------------------------------
# Brio/System/Kernel
#-----------------------------------------------------------------------------
from Etc.Tools.SConsTools.Priv.LfUtils import *
import os
Import('env')

module_name	= 'Kernel'
mpi_name	= module_name + 'MPI'

#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
emulibs		= env['cpu'] == 'x86' and [''] or ['ustring', 'iconv', 'intl', 'sigc-2.0']
modsrcs		= Glob('*.cpp')
mpisrcs		= Glob(os.path.join('PublicMPI', '*.cpp'))
modlibs		= ['pthread', 'rt']
mpilibs		= ['ModuleMPI'] + emulibs
						
#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Clone()
myenv.Append(CPPPATH=['Include'])
mymodule	= MakeMyModule(myenv, module_name, modsrcs, modlibs, kBuildModule)
mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, kBuildMPI)
Depends(mympi, mymodule)

targets = mympi or []

#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------
if env['buildtests']:
	targets.append(RunMyTests(module_name, [], mpilibs + ['pthread', 'rt'], myenv))

Return('targets')
