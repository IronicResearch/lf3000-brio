import os

#-----------------------------------------------------------------------------
# Brio/System/Display
#-----------------------------------------------------------------------------
Import('*')

module_name	= 'Display'
mpi_name	= module_name + 'MPI'

#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
emulibs		= local_vars['is_emulation'] and ['gles_cl', 'X11'] or ['ogl']
modsrcs		= FindModuleSources(Dir('.'))
mpisrcs		= FindMPISources(Dir('.'))
modlibs		= ['DebugMPI', 'EventMPI', 'KernelMPI']
mpilibs		= ['ModuleMPI'] + emulibs					
						
#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Copy()
##if os.getenv('EXTRA_LINUX_HEADER_DIR') == '':
extinc      = '#../LinuxDist/packages/drivers/include/linux'
##else:
##	extinc      = os.getenv('EXTRA_LINUX_HEADER_DIR')
if local_vars['is_emulation']:
	myenv.Append(CPPPATH = ['#ThirdParty/PowerVR/Include',
							'#ThirdParty/PowerVR/Include/LinuxPC',
							'/usr/X11R6/include'])
	myenv.Append(LIBPATH = ['#ThirdParty/PowerVR/Libs'])
	myenv.Append(RPATH   = ['#ThirdParty/PowerVR/Libs'])
else:
	myenv.Append(CPPPATH = ['#ThirdParty/MagicEyes/Include', extinc])
	myenv.Append(LIBPATH = ['#ThirdParty/MagicEyes/Libs/arm'])
	myenv.Append(RPATH   = [])
						
mymodule	= MakeMyModule(myenv, module_name, modsrcs, modlibs, 0)
mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, 1)
Depends(mympi, mymodule)

#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------
RunMyTests(module_name, [], mpilibs + ['DebugMPI'], myenv)

Return('mymodule', 'mympi')
