#-----------------------------------------------------------------------------
# Brio/System/AnalogStick
#-----------------------------------------------------------------------------
from Etc.Tools.SConsTools.Priv.LfUtils import *
import os


Import('env')

module_name	= 'AnalogStick'
mpi_name	= module_name + 'MPI'


#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
emulibs		= []
modsrcs		= Glob('*.cpp')
mpisrcs		= Glob(os.path.join('PublicMPI', '*.cpp')) + Glob('*.cpp')
	
modlibs		= ['DebugMPI', 'EventMPI', 'KernelMPI'] + emulibs
mpilibs		= ['ModuleMPI', 'KernelMPI']
						
#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Clone()
myenv.Append(CPPPATH=['Include'])

mymodule	= MakeMyModule(myenv, module_name, modsrcs, modlibs, kBuildModule)
mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, kBuildMPI)

targets = mympi or []

#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------

if env['buildtests']:
	targets.append(RunMyTests(module_name, [], mpilibs + ['EventMPI'], myenv))

Return('targets')
