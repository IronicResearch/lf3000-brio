#-----------------------------------------------------------------------------
# Brio/System/Wireless
#-----------------------------------------------------------------------------
from Etc.Tools.SConsTools.Priv.LfUtils import *
import os

Import('env')

module_name	= 'Wireless'
mpi_name	= module_name + 'MPI'

#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
modsrcs		= Glob('*.cpp')
mpisrcs		= Glob(os.path.join('PublicMPI', '*.cpp'))
modlibs		= ['DebugMPI', 'KernelMPI', 'dbus-c++-1', 'EventMPI']
mpilibs		= ['ModuleMPI']
						
#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Clone()
myenv.Append(CPPPATH = ['#ThirdParty/DBusC++/Include'])

myenv.Append(LIBPATH = ['#ThirdParty/DBusC++/Libs/' + env['cpu']])
						
myenv.Append(CPPPATH=['Include'])

myenv.Append(CPPFLAGS = ['-fno-omit-frame-pointer'])
mymodule	= MakeMyModule(myenv, module_name, modsrcs, modlibs, kBuildModule)
mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, kBuildMPI)
Depends(mympi, mymodule)

targets = mympi or []

#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------

if env['buildtests']:
	targets.append(RunMyTests(module_name, [], mpilibs + ['EventMPI'], myenv))

Return('targets')
