#-----------------------------------------------------------------------------
# Brio/System/OpenGL
#-----------------------------------------------------------------------------
from Etc.Tools.SConsTools.Priv.LfUtils import *
Import('*')

mpi_name = 'OpenGL'

#-----------------------------------------------------------------------------
# Setup module source files and libraries
#-----------------------------------------------------------------------------
mpisrcs		= FindModuleSources(Dir('.'), vars)
emulibs		= vars['is_emulation'] and ['X11'] or []
hwlibs		= vars['variant'] == 'LF1000' and ['opengles_lite'] or ['ogl']
ogllibs		= vars['is_emulation'] and ['gles_cl'] or hwlibs
mpilibs		= ['DisplayMPI'] + ogllibs
						
#-----------------------------------------------------------------------------
# Modify the build environment and build the module
#-----------------------------------------------------------------------------
myenv		= env.Copy()

if vars['is_emulation']:
	myenv.Append(CPPPATH = ['#ThirdParty/PowerVR/Include',
							'#ThirdParty/PowerVR/Include/LinuxPC',
							'/usr/X11R6/include'])
	myenv.Append(LIBPATH = ['#ThirdParty/PowerVR/Libs'])
	myenv.Append(RPATH   = myenv.Dir('#ThirdParty/PowerVR/Libs').abspath)
else:
	myenv.Append(CPPPATH = ['#ThirdParty/MagicEyes/Include'])
	myenv.Append(LIBPATH = ['#ThirdParty/MagicEyes/Libs/' + vars['cpu_subdir']])
	myenv.Append(RPATH   = myenv.Dir('#ThirdParty/MagicEyes/Libs' + vars['cpu_subdir']).abspath)

mympi		= MakeMyModule(myenv, mpi_name, mpisrcs, mpilibs, kBuildMPI, vars)

#-----------------------------------------------------------------------------
# Modify the build environment and build and run the unit tests
#-----------------------------------------------------------------------------
#if not vars['is_publish']:
#	RunMyTests(module_name, [], mpilibs, myenv, vars)

dummy = []
Return('dummy', 'mympi')
